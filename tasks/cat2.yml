---

# enumerating on DC is different than standalone
- name: "MEDIUM | WN19-00-000020 | AUDIT | Windows Server 2019 passwords for the built-in Administrator account must be changed at least every {{ wn19stig_pass_age }} days."
  block:
      - name: "MEDIUM | WN19-00-000020 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 passwords for the built-in Administrator account must be changed at least every {{ wn19stig_pass_age }} days."
        ansible.windows.win_shell: "Get-ADUser -Filter * -Property PasswordLastSet | Where SID -like S-1-5-21-*-500 | Where-Object {$_.PasswordLastSet -lt ((Get-Date).AddDays(-{{ wn19stig_pass_age }}))} | Select Name,PasswordLastSet"
        # win_shell: "Get-ADUser krbtgt -Property PasswordLastSet | Where-Object {$_.PasswordLastSet -lt ((Get-Date).AddDays(-{{ wn19stig_krbtgt_pass_age }}))} | Select-Object -ExpandProperty PasswordLastSet"
        changed_when: false
        check_mode: false
        register: wn19_00_000020_audit_dc
        when: "'controller' in ansible_windows_domain_role"

      - name: "MEDIUM | WN19-00-000020 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 passwords for the built-in Administrator account must be changed at least every {{ wn19stig_pass_age }} days."
        ansible.builtin.debug:
            msg:
                - "The following account appears to be the default admin account and the password does not meet the control specific age of {{ wn19stig_pass_age }}"
                - "{{ wn9_00_000020_audit_dc.stdout.split('\n') }}"
        when:
            - not wn19_00_000020_audit_dc is skipped
            - wn19_00_000020_audit_dc.stdout != ""

      - name: "MEDIUM | WN19-00-000020 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 passwords for the built-in Administrator account must be changed at least every {{ wn19stig_pass_age }} days."
        ansible.windows.win_shell: "Get-Localuser -Name * | Select * | Where SID -like S-1-5-21-*-500 | Where-Object {$_.PasswordLastSet -lt ((Get-Date).AddDays(-{{ wn19stig_pass_age }}))} | Select Name,PasswordLastSet"
        changed_when: false
        check_mode: false
        register: wn19_00_000020_audit_dm_sa

      - name: "MEDIUM | WN19-00-000020 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 passwords for the built-in Administrator account must be changed at least every {{ wn19stig_pass_age }} days."
        ansible.builtin.debug:
            msg:
                - "The following account appears to be the default admin account and the password does not meet the control specific age of {{ wn19stig_pass_age }}"
                - "{{ wn19_00_000020_audit_dm_sa.stdout.split('\n') }}"
        when:
            - wn19_00_000020_audit_dm_sa is defined
            - wn19_00_000020_audit_dm_sa.stdout != ""

      - name: Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000020'
        when:
            - not wn19_00_000020_audit_dc is skipped
            - wn19_00_000020_audit_dc.stdout != "" or
            - wn19_00_000020_audit_dm_sa is defined
            - wn19_00_000020_audit_dm_sa.stdout != ""
  when:
      - wn19_00_000020
  tags:
      - WN19-00-000020
      - V-205657
      - CCI-000199
      - SV-205657r857286_rule
      - SRG-OS-000076-GPOS-00044
      - NeedToTestDomainController
      - audit
      - CAT2

- name: "MEDIUM | WN19-00-000040 | AUDIT | Windows Server 2019 members of the Backup Operators group must have separate accounts for backup duties and normal operational tasks."
  block:
      - name: "MEDIUM | WN19-00-000040 | AUDIT - STAND-ALONE AND MEMBER SERVERS | Windows Server 2019 members of the Backup Operators group must have separate accounts for backup duties and normal operational tasks."
        ansible.windows.win_shell: Get-LocalGroupMember -Name 'Backup Operators'
        changed_when: false
        check_mode: false
        register: wn19_00_000040_audit

      - name: "MEDIUM | WN19-00-000040 | AUDIT - STAND-ALONE AND MEMBER SERVERS | Windows Server 2019 members of the Backup Operators group must have separate accounts for backup duties and normal operational tasks."
        ansible.builtin.debug:
            msg:
                - The accounts listed are members of the Backup Operators group
                - "{{ wn19_00_000040_audit.stdout.split('\n') }}"
        when:
            - not wn19_00_000040_audit is skipped
            - wn19_00_000040_audit.stdout != ""
        changed_when: false

      - name: "MEDIUM | WN19-00-000040 | AUDIT - STAND-ALONE AND MEMBER SERVERS | Windows Server 2019 members of the Backup Operators group must have separate accounts for backup duties and normal operational tasks. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000040'
        when:
            - not wn19_00_000040_audit is skipped
            - wn19_00_000040_audit.stdout != ""
  when:
      - wn19_00_000040
      - "'controller' not in ansible_windows_domain_role"
  tags:
      - WN19-00-000040
      - V-205846
      - SRG-OS-000480-GPOS-00227
      - SV-205846r569188_rule
      - CCI-000366
      - audit
      - CAT2

- name: "MEDIUM | WN19-00-000050 | AUDIT | Windows Server 2019 manually managed application account passwords must be at least 15 characters in length."
  block:
      - name: "MEDIUM | WN19-00-000050 | AUDIT | Windows Server 2019 manually managed application account passwords must be at least 15 characters in length. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 manually managed application account passwords must be at least 15 characters in length."

      - name: "MEDIUM | WN19-00-000050 | AUDIT | Windows Server 2019 manually managed application account passwords must be at least 15 characters in length. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000050'
  when:
      - wn19_00_000050
  tags:
      - WN19-00-000050
      - V-205661
      - SRG-OS-000078-GPOS-00046
      - SV-205661r569188_rule
      - CCI-000205
      - CAT2

- name: "MEDIUM | WN19-00-000060 | AUDIT | Windows Server 2019 manually managed application account passwords must be changed at least annually or when a system administrator with knowledge of the password leaves the organization."
  block:
      - name: "MEDIUM | WN19-00-000060 | AUDIT | Windows Server 2019 manually managed application account passwords must be changed at least annually or when a system administrator with knowledge of the password leaves the organization. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 manually managed application account passwords must be changed at least annually or when a system administrator with knowledge of the password leaves the organization."

      - name: "MEDIUM | WN19-00-000060 | AUDIT | Windows Server 2019 manually managed application account passwords must be changed at least annually or when a system administrator with knowledge of the password leaves the organization. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000060'
  when:
      - wn19_00_000060
  tags:
      - WN19-00-000060
      - V-205847
      - SRG-OS-000480-GPOS-00227
      - SV-205847r857288_rule
      - CCI-000366
      - CAT2
      # how to make this list?

- name: "MEDIUM | WN19-00-000070 | AUDIT | Windows Server 2019 shared user accounts must not be permitted."
  block:
      - name: "MEDIUM | WN19-00-000070  | Windows Server 2019 shared user accounts must not be permitted. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 shared user accounts must not be permitted."

      - name: "MEDIUM | WN19-00-000070 | AUDIT | Windows Server 2019 shared user accounts must not be permitted. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000070'
  when:
      - wn19_00_000070
  tags:
      - WN19-00-000070
      - V-205699
      - SRG-OS-000104-GPOS-00051
      - SV-205699r569188_rule
      - CCI-000764
      - CAT2

- name: "MEDIUM | WN19-00-000080 | AUDIT | Windows Server 2019 must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs."
  block:
      - name: "MEDIUM | WN19-00-000080 | AUDIT | Windows Server 2019 must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs."

      - name: "MEDIUM | WN19-00-000080 | AUDIT | Windows Server 2019 must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000080'
  when:
      - wn19_00_000080
  tags:
      - WN19-00-000080
      - V-205807
      - SRG-OS-000370-GPOS-00155
      - SV-205807r569188_rule
      - CCI-001774
      - CAT2
      # Get-AppLockerPolicy -Effective

# Current hardware and virtual environments may not support virtualization-based security features, including Credential Guard, due to specific supporting requirements including a TPM, UEFI with Secure Boot, and the capability to run the Hyper-V feature within a virtual machine.
- name: "MEDIUM | WN19-00-000090 | AUDIT | Windows Server 2019 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use."
  block:
      - name: "MEDIUM | WN19-00-000090 | AUDIT | Windows Server 2019 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use."

      - name: "MEDIUM | WN19-00-000090 | AUDIT | Windows Server 2019 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000090'
  when:
      - wn19_00_000090
  tags:
      - WN19-00-000090
      - V-205848
      - SRG-OS-000480-GPOS-00227
      - SV-205848r857290_rule
      - CCI-000366
      - CAT2
      # wmic /namespace:\\root\cimv2\security\microsofttpm path win32_tpm get *
      # if not enabled see "No Instance(s) Available." ?

- name: "MEDIUM | WN19-00-000120 | AUDIT | Windows Server 2019 must have a host-based intrusion detection or prevention system."
  block:
      - name: "MEDIUM | WN19-00-000120 | AUDIT | Windows Server 2019 must have a host-based intrusion detection or prevention system. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must have a host-based intrusion detection or prevention system."

      - name: "MEDIUM | WN19-00-000120 | AUDIT | Windows Server 2019 must have a host-based intrusion detection or prevention system. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000120'
  when:
      - wn19_00_000120
  tags:
      - WN19-00-000120
      - V-205851
      - SRG-OS-000480-GPOS-00227
      - SV-205851r793214_rule
      - CCI-000366
      - CAT2
      # think this is mcafee but need install and figure out paths for AV vs HIDS and/or running services?

- name: "MEDIUM | WN19-00-000140 | AUDIT | Windows Server 2019 permissions for the system drive root directory usually C:\ must conform to minimum requirements."
  block:
      - name: "MEDIUM | WN19-00-000140 | AUDIT | Windows Server 2019 permissions for the system drive root directory usually C:\ must conform to minimum requirements. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 permissions for the system drive root directory usually C:\ must conform to minimum requirements."

      - name: "MEDIUM | WN19-00-000140 | AUDIT | Windows Server 2019 permissions for the system drive root directory usually C:\ must conform to minimum requirements. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000140'
  when:
      - wn19_00_000140
  tags:
      - WN19-00-000140
      - V-205734
      - SRG-OS-000312-GPOS-00122
      - SV-205734r569188_rule
      - CCI-002165
      - CAT2

- name: "MEDIUM | WN19-00-000150 | AUDIT | Windows Server 2019 permissions for program file directories must conform to minimum requirements."
  block:
      - name: "MEDIUM | WN19-00-000150 | AUDIT | Windows Server 2019 permissions for program file directories must conform to minimum requirements. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 permissions for program file directories must conform to minimum requirements."

      - name: "MEDIUM | WN19-00-000150 | AUDIT | Windows Server 2019 permissions for program file directories must conform to minimum requirements. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000150'
  when:
      - wn19_00_000150
  tags:
      - WN19-00-000150
      - V-205735
      - SRG-OS-000312-GPOS-00122
      - SV-205735r569188_rule
      - CCI-002165
      - CAT2

- name: "MEDIUM | WN19-00-000160 | AUDIT | Windows Server 2019 permissions for the Windows installation directory must conform to minimum requirements."
  block:
      - name: "MEDIUM | WN19-00-000160 | AUDIT | Windows Server 2019 permissions for the Windows installation directory must conform to minimum requirements. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 permissions for the Windows installation directory must conform to minimum requirements."

      - name: "MEDIUM | WN19-00-000160 | AUDIT | Windows Server 2019 permissions for the Windows installation directory must conform to minimum requirements. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000160'
  when:
      - wn19_00_000160
  tags:
      - WN19-00-000160
      - V-205736
      - SRG-OS-000312-GPOS-00122
      - SV-205736r569188_rule
      - CCI-002165
      - CAT2

- name: "MEDIUM | WN19-00-000170 | AUDIT | Windows Server 2019 default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained."
  block:
      - name: "MEDIUM | WN19-00-000170 | AUDIT | Windows Server 2019 default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained."

      - name: "MEDIUM | WN19-00-000170 | AUDIT | Windows Server 2019 default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000170'
  when:
      - wn19_00_000170
  tags:
      - WN19-00-000170
      - V-205737
      - SRG-OS-000324-GPOS-00125
      - SV-205737r793220_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-00-000190 | AUDIT | Windows Server 2019 outdated or unused accounts must be removed from the system or disabled."
  block:
      - name: "MEDIUM | WN19-00-000190 | AUDIT | Windows Server 2019 outdated or unused accounts must be removed from the system or disabled. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 outdated or unused accounts must be removed from the system or disabled."

      - name: "MEDIUM | WN19-00-000190 | AUDIT | Windows Server 2019 outdated or unused accounts must be removed from the system or disabled. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000190'
  when:
      - wn19_00_000190
  tags:
      - WN19-00-000190
      - V-205707
      - SRG-OS-000118-GPOS-00060
      - SV-205707r857292_rule
      - CCI-000795
      - CAT2

- name: "MEDIUM | WN19-00-000200 | AUDIT | Windows Server 2019 accounts must require passwords."
  block:
      - name: "MEDIUM | WN19-00-000200 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 accounts must require passwords."
        ansible.windows.win_shell: Get-Aduser -Filter "(Passwordnotrequired -eq 'True') -and (Enabled -eq 'True')" | Select Name,Passwordnotrequired,Enabled
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_00_000200_audit_dc
        when: ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000200 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 accounts must require passwords."
        ansible.builtin.debug:
            msg:
                - The accounts listed are do not require a password and are currently enabled
                - "{{ wn19_00_000200_audit_dc.stdout.split('\n') }}"
        when:
            - not wn19_00_000200_audit_dc is skipped
            - wn19_00_000200_audit_dc.stdout != ""

      - name: "MEDIUM | WN19-00-000200 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 accounts must require passwords."
        ansible.windows.win_shell: Get-LocalUser | Where-Object {($_.PasswordRequired -ne 'True' -and $_.Enabled -eq 'True')} | Select Name,PasswordRequired,Enabled
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_00_000200_audit_dm_sa
        when: not ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000200 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 accounts must require passwords."
        ansible.builtin.debug:
            msg:
                - The accounts listed are do not require a password and are currently enabled
                - "{{ wn19_00_000200_audit_dm_sa.stdout.split('\n') }}"
        when:
            - not wn19_00_000200_audit_dm_sa is skipped
            - wn19_00_000200_audit_dm_sa.stdout != ""

      - name: Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000200'
        when:
            - not wn19_00_000200_audit_dc is skipped
            - wn19_00_000200_audit_dc.stdout != "" or
            - not wn19_00_000200_audit_dm_sa is skipped
            - wn19_00_000200_audit_dm_sa.stdout != ""
  when:
      - wn19_00_000200
  tags:
      - WN19-00-000200
      - V-205700
      - SRG-OS-000104-GPOS-00051
      - SV-205700r857294_rule
      - CCI-000764
      - audit
      - CAT2

- name: "MEDIUM | WN19-00-000210 | AUDIT | Windows Server 2019 passwords must be configured to expire."
  block:
      - name: "MEDIUM | WN19-00-000210 | AUDIT | Windows Server 2019 passwords must be configured to expire."
        ansible.windows.win_shell: |
          Get-CimInstance -Class Win32_Useraccount -Filter "PasswordExpires=False and LocalAccount=True" |
          Where-Object -FilterScript {$_.PasswordExpires -EQ $False -AND $_.Disabled -EQ $False} |
          Format-Table -Property Name,PasswordExpires,Disabled,LocalAccount
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_00_000210_audit

      - name: "MEDIUM | WN19-00-000210 | AUDIT | Windows Server 2019 passwords must be configured to expire.| Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 passwords must be configured to expire."

      - name: "MEDIUM | WN19-00-000210 | AUDIT | Windows Server 2019 passwords must be configured to expire.| import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000210'
  when:
      - wn19_00_000210
  tags:
      - WN19-00-000210
      - V-205658
      - SRG-OS-000076-GPOS-00044
      - SV-205658r857297_rule
      - CAT2
      - CCI-000199

- name: "MEDIUM | WN19-00-000220 | AUDIT | Windows Server 2019 system files must be monitored for unauthorized changes."
  block:
      - name: "MEDIUM | WN19-00-000220 | AUDIT | Windows Server 2019 system files must be monitored for unauthorized changes. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 system files must be monitored for unauthorized changes."

      - name: "MEDIUM | WN19-00-000220 | AUDIT | Windows Server 2019 system files must be monitored for unauthorized changes. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000220'
  when:
      - wn19_00_000220
  tags:
      - WN19-00-000220
      - V-205803
      - SRG-OS-000363-GPOS-00150
      - SV-205803r860026_rule
      - CCI-001744
      - CAT2
      # Some third party software to monitor files

- name: "MEDIUM | WN19-00-000230 | AUDIT | Windows Server 2019 non-system-created file shares on a system must limit access to groups that require it."
  block:
      - name: "MEDIUM | WN19-00-000230 | AUDIT | Windows Server 2019 non-system-created file shares on a system must limit access to groups that require it."
        ansible.windows.win_shell: Get-SmbShare | Where-Object -FilterScript {$_.Special -EQ $False}
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_00_000230_audit

      - name: "MEDIUM | WN19-00-000230 | AUDIT | Windows Server 2019 non-system-created file shares on a system must limit access to groups that require it."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 non-system-created file shares on a system must limit access to groups that require it."

      - name: "MEDIUM | WN19-00-000230 | AUDIT | Windows Server 2019 non-system-created file shares on a system must limit access to groups that require it. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000230'
  when:
      - wn19_00_000230
  tags:
      - WN19-00-000230
      - V-205721
      - SRG-OS-000138-GPOS-00069
      - SV-205721r569188_rule
      - CCI-001090
      - CAT2

# https://stackoverflow.com/questions/31049454/how-to-retrieve-recursively-any-files-with-a-specific-extensions-in-powershell/31049571
- name: "MEDIUM | WN19-00-000240 | AUDIT | Windows Server 2019 must have software certificate installation files removed."
  block:
      - name: "MEDIUM | WN19-00-000240 | AUDIT | Windows Server 2019 must have software certificate installation files removed."
        ansible.windows.win_find:
            paths: c:\
            patterns: ['*.p12', '*.pfx']
            hidden: true
            recurse: true
            follow: true
        check_mode: false
        register: wn19_00_000240_audit
        when: long_running

      - name: "MEDIUM | WN19-00-000240 | AUDIT | Windows Server 2019 must have software certificate installation files removed."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must have software certificate installation files removed."

      - name: "MEDIUM | WN19-00-000240 | AUDIT | Windows Server 2019 must have software certificate installation files removed. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000240'
  when:
      - wn19_00_000240
  tags:
      - WN19-00-000240
      - V-205852
      - SRG-OS-000480-GPOS-00227
      - SV-205852r569188_rule
      - CCI-000366
      - CAT2
      # do we need async; its very long running to search filesystems
      # get an array of drive letters to search?

- name: "MEDIUM | WN19-00-000250 | AUDIT | Windows Server 2019 systems requiring data at rest protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest."
  block:
      - name: "MEDIUM | WN19-00-000250 | AUDIT | Windows Server 2019 systems requiring data at rest protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 systems requiring data at rest protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest."

      - name: "MEDIUM | WN19-00-000250 | AUDIT | Windows Server 2019 systems requiring data at rest protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000250'
  when:
      - wn19_00_000250
  tags:
      - WN19-00-000250
      - V-205727
      - SRG-OS-000185-GPOS-00079
      - SV-205727r569188_rule
      - CCI-001199
      - CCI-002475
      - CCI-002476
      - CAT2

- name: "MEDIUM | WN19-00-000260 | AUDIT | Windows Server 2019 must implement protection methods such as TLS, encrypted VPNs, or IPsec if the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process."
  block:
      - name: "MEDIUM | WN19-00-000260 | AUDIT | Windows Server 2019 must implement protection methods such as TLS, encrypted VPNs, or IPsec if the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must implement protection methods such as TLS, encrypted VPNs, or IPsec if the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process."

      - name: "MEDIUM | WN19-00-000260 | AUDIT | Windows Server 2019 must implement protection methods such as TLS, encrypted VPNs, or IPsec if the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000260'
  when:
      - wn19_00_000260
  tags:
      - WN19-00-000260
      - V-205829
      - SRG-OS-000425-GPOS-00189
      - SV-205829r790513_rule
      - CCI-002420
      - CCI-002422
      - CAT2

- name: "MEDIUM | WN19-00-000270 | AUDIT | Windows Server 2019 must have the roles and features required by the system documented."
  block:
      - name: "MEDIUM | WN19-00-000270 | AUDIT | Windows Server 2019 bust have the roles and features required by the system documented."
        ansible.windows.win_shell: Get-WindowsFeature | Where-Object -FilterScript {$_.Installed -EQ $True}
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_00_000270_audit

      - name: "MEDIUM | WN19-00-000270 | AUDIT | Windows Server 2019 must have the roles and features required by the system documented."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must have the roles and features required by the system documented."

      - name: "MEDIUM | WN19-00-000270 | AUDIT | Windows Server 2019 must have the roles and features required by the system documented. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000270'
  when:
      - wn19_00_000270
  tags:
      - WN19-00-000270
      - V-205677
      - SRG-OS-000095-GPOS-00049
      - SV-205677r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-00-000280 | AUDIT | Windows Server 2019 must have a host-based firewall installed and enabled."
  block:
      - name: "MEDIUM | WN19-00-000280 | AUDIT | Windows Server 2019 must have a host-based firewall installed and enabled."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must have a host-based firewall installed and enabled."

      - name: "MEDIUM | WN19-00-000280 | AUDIT | Windows Server 2019 must have a host-based firewall installed and enabled. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000280'
  when:
      - wn19_00_000280
  tags:
      - WN19-00-000280
      - V-214936
      - SRG-OS-000480-GPOS-00227
      - SV-214936r569188_rule
      - CCI-000366
      - CCI-002080
      - CAT2

- name: "MEDIUM | WN19-00-000290 | AUDIT | Windows Server 2019 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: continuously, where Host Based Security System (HBSS) is used; 30 days, for any additional internal network scans not covered by HBSS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP)."
  block:
      - name: "MEDIUM | WN19-00-000290 | AUDIT | Windows Server 2019 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: continuously, where Host Based Security System (HBSS) is used; 30 days, for any additional internal network scans not covered by HBSS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP)."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: continuously, where Host Based Security System (HBSS) is used; 30 days, for any additional internal network scans not covered by HBSS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP)."

      - name: "MEDIUM | WN19-00-000290 | AUDIT | Windows Server 2019 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: continuously, where Host Based Security System (HBSS) is used; 30 days, for any additional internal network scans not covered by HBSS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP). | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000290'
  when:
      - wn19_00_000290
  tags:
      - WN19-00-000290
      - V-205728
      - SRG-OS-000191-GPOS-00080
      - SV-205728r793217_rule
      - CCI-001233
      - CAT2

- name: "MEDIUM | WN19-00-000300 | AUDIT | Windows Server 2019 must automatically remove or disable temporary user accounts after 72 hours."
  block:
      - name: "MEDIUM | WN19-00-000300 | AUDIT | Windows Server 2019 must automatically remove or disable temporary user accounts after 72 hours."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must automatically remove or disable temporary user accounts after 72 hours."

      - name: "MEDIUM | WN19-00-000300 | AUDIT | Windows Server 2019 must automatically remove or disable temporary user accounts after 72 hours. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000300'
  when:
      - wn19_00_000300
  tags:
      - WN19-00-000300
      - V-205624
      - SRG-OS-000002-GPOS-00002
      - SV-205624r857301_rule
      - CCI-000016
      - CAT2

- name: "MEDIUM | WN19-00-000310 | AUDIT | Windows Server 2019 must automatically remove or disable emergency accounts after the crisis is resolved or within 72 hours."
  block:
      - name: "MEDIUM | WN19-00-000310 | AUDIT | Windows Server 2019 must automatically remove or disable emergency accounts after the crisis is resolved or within 72 hours."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must automatically remove or disable emergency accounts after the crisis is resolved or within 72 hours."

      - name: "MEDIUM | WN19-00-000310 | AUDIT | Windows Server 2019 must automatically remove or disable emergency accounts after the crisis is resolved or within 72 hours. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000310'
  when:
      - wn19_00_000310
  tags:
      - WN19-00-000310
      - V-205710
      - SRG-OS-000123-GPOS-00064
      - SV-205710r857303_rule
      - CCI-001682
      - CAT2

- name: "MEDIUM | WN19-00-000320 | PATCH | Windows Server 2019 must not have the Fax Server role installed."
  ansible.windows.win_feature:
      name: Fax
      state: absent
  notify: reboot_windows
  when:
      - wn19_00_000320
  tags:
      - WN19-00-000320
      - V-205678
      - SRG-OS-000095-GPOS-00049
      - SV-205678r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-00-000330 | PATCH | Windows Server 2019 must not have the Microsoft FTP service installed unless required by the organization."
  ansible.windows.win_feature:
      name: Web-Ftp-Server
      state: absent
  notify: reboot_windows
  when:
      - wn19_00_000330
  tags:
      - WN19-00-000330
      - V-205697
      - SRG-OS-000096-GPOS-00050
      - SV-205697r569188_rule
      - CCI-000382
      - CAT2

- name: "MEDIUM | WN19-00-000340 | PATCH | Windows Server 2019 must not have the Peer Name Resolution Protocol installed."
  ansible.windows.win_feature:
      name: PNRP
      state: absent
  notify: reboot_windows
  when:
      - wn19_00_000340
  tags:
      - WN19-00-000340
      - V-205679
      - SRG-OS-000095-GPOS-00049
      - SV-205679r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-00-000350 | PATCH | Windows Server 2019 must not have Simple TCP/IP Services installed."
  ansible.windows.win_feature:
      name: Simple-TCPIP
      state: absent
  when:
      - wn19_00_000350
  tags:
      - WN19-00-000350
      - V-205680
      - SRG-OS-000095-GPOS-00049
      - SV-205680r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-00-000360 | PATCH | Windows Server 2019 must not have the Telnet Client installed."
  ansible.windows.win_feature:
      name: Telnet-Client
      state: absent
  when:
      - wn19_00_000360
  tags:
      - WN19-00-000360
      - V-205698
      - SRG-OS-000096-GPOS-00050
      - SV-205698r569188_rule
      - CCI-000382
      - CAT2

- name: "MEDIUM | WN19-00-000370 | PATCH | Windows Server 2019 must not have the TFTP Client installed."
  ansible.windows.win_feature:
      name: TFTP-Client
      state: absent
  when:
      - wn19_00_000370
  tags:
      - WN19-00-000370
      - V-205681
      - SRG-OS-000095-GPOS-00049
      - SV-205681r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-00-000380 | PATCH | Windows Server 2019 must not have the Server Message Block (SMB) v1 protocol installed."
  ansible.windows.win_feature:
      name: FS-SMB1
      state: absent
  notify: reboot_windows
  when:
      - wn19_00_000380
  tags:
      - WN19-00-000380
      - V-205682
      - CAT2
      - SRG-OS-000095-GPOS-00049
      - SV-205682r819711_rule
      - CCI-000381

- name: "MEDIUM | WN19-00-000390 | PATCH | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters
      name: SMB1
      data: 0x00000000
      type: dword
  notify: reboot_windows
  when:
      - wn19_00_000390
  tags:
      - WN19-00-000390
      - V-205683
      - SRG-OS-000095-GPOS-00049
      - SV-205683r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-00-000400 | PATCH | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\mrxsmb10
      name: Start
      data: 0x00000004
      type: dword
  notify: reboot_windows
  when:
      - wn19_00_000400
  tags:
      - WN19-00-000400
      - V-205684
      - SRG-OS-000095-GPOS-00049
      - SV-205684r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-00-000410 | PATCH | Windows Server 2019 must not have Windows PowerShell 2.0 installed."
  ansible.windows.win_feature:
      name: PowerShell-V2
      state: absent
  when:
      - wn19_00_000410
  tags:
      - WN19-00-000410
      - V-205685
      - SRG-OS-000095-GPOS-00049
      - SV-205685r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-00-000420 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent anonymous logons."
  block:
      - name: "MEDIUM | WN19-00-000420 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent anonymous logons."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 FTP servers must be configured to prevent anonymous logons."

      - name: "MEDIUM | WN19-00-000420 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent anonymous logons. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000420'
  when:
      - wn19_00_000420
  tags:
      - WN19-00-000420
      - V-205853
      - SRG-OS-000480-GPOS-00227
      - SV-205853r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-00-000430 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent access to the system drive."
  block:
      - name: "MEDIUM | WN19-00-000430 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent access to the system drive."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 FTP servers must be configured to prevent access to the system drive."

      - name: "MEDIUM | WN19-00-000430 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent access to the system drive. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000430'
  when:
      - wn19_00_000430
  tags:
      - WN19-00-000430
      - V-205854
      - SRG-OS-000480-GPOS-00227
      - SV-205854r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-00-000450 | AUDIT | Windows Server 2019 must have orphaned security identifiers (SIDs) must be removed from user rights"
  block:
      - name: "MEDIUM | WN19-00-000450 | AUDIT | Windows Server 2019 must have orphaned security identifiers (SIDs) must be removed from user rights"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must have orphaned security identifiers (SIDs) must be removed from user rights"

      - name: "MEDIUM | WN19-00-000450 | AUDIT | Windows Server 2019 must have orphaned security identifiers (SIDs) must be removed from user rights | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000450'
  when:
      - wn19_00_000450
  tags:
      - WN19-00-000450
      - V-205800
      - SRG-OS-000480-GPOS-00227
      - SV-205855r569188_rule
      - CCI-000366
      - CAT2
      # https://www.stigviewer.com/stig/windows_server_2016/2019-01-16/finding/V-78127

# THE FOLLOWING 3 CONTROLS WILL FAIL UNLESS THEY ARE IN THE FOLLOWING ORDER FOR LOCAL BASED SYSTEMS.
- name: "MEDIUM | WN19-AC-000020 | PATCH | Windows Server 2019 must have the number of allowed bad logon attempts configured to three or less."
  block:
      - name: "MEDIUM | WN19-AC-000020 | AUDIT | Windows Server 2019 must have the number of allowed bad logon attempts configured to three or less. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of days set for wn19stig_lockoutbadcount please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_lockoutbadcount == 0 or
              wn19stig_lockoutbadcount > 3

      - name: "MEDIUM | WN19-AC-000020 | AUDIT | Windows Server 2019 must have the number of allowed bad logon attempts configured to three or less. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000020'
        when:
            - wn19stig_lockoutbadcount == 0 or
              wn19stig_lockoutbadcount > 3

      - name: "MEDIUM | WN19-AC-000020 | PATCH | Windows Server 2019 must have the number of allowed bad logon attempts configured to three or less. | Apply Variable."
        community.windows.win_security_policy:
            section: System Access
            key: LockoutBadCount
            value: "{{ wn19stig_lockoutbadcount }}"
        when:
            - wn19stig_lockoutbadcount > 0
            - wn19stig_lockoutbadcount <= 3
  when:
      - wn19_ac_000020
      - not win19stig_cloud_based_system
  tags:
      - WN19-AC-000020
      - V-205629
      - SRG-OS-000021-GPOS-00005
      - SV-205629r569188_rule
      - CCI-000044
      - CAT2

# below task is dependent on WN16-AC-000020, maybe custom fail when known error if WN16-AC-000020 not set? "The key 'ResetLockoutCount' in section 'System Access' is not a valid key, cannot set this value"
- name: "MEDIUM | WN19-AC-000030 | PATCH | Windows Server 2019 must have the period of time before the bad logon counter is reset configured to 15 minutes or greater."
  block:
      - name: MEDIUM | WN19-AC-000030 | AUDIT | Windows Server 2019 must have the period of time before the bad logon counter is reset configured to 15 minutes or greater."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of days set for wn19stig_resetlockoutcount please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_resetlockoutcount < 15

      - name: MEDIUM | WN19-AC-000030 | AUDIT | Windows Server 2019 must have the period of time before the bad logon counter is reset configured to 15 minutes or greater. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000030'
        when:
            - wn19stig_resetlockoutcount < 15

      - name: "MEDIUM | WN19-AC-000030 | PATCH | Windows Server 2019 must have the period of time before the bad logon counter is reset configured to 15 minutes or greater. | Apply Variable"
        community.windows.win_security_policy:
            section: System Access
            key: ResetLockoutCount
            value: "{{ wn19stig_resetlockoutcount }}"
        when:
            - wn19stig_resetlockoutcount >= 15
  when:
      - wn19_ac_000030
      - not win19stig_cloud_based_system
  tags:
      - WN19-AC-000030
      - V-205630
      - SRG-OS-000021-GPOS-00005
      - SV-205630r569188_rule
      - CCI-000044
      - CCI-002238
      - CAT2

# below task is dependent on WN19-AC-000020 and WN19-AC-000030, maybe custom fail when known error if WN19-AC-000020 not set? "The key 'LockoutDuration' in section 'System Access' is not a valid key, cannot set this value"
- name: "MEDIUM | WN19-AC-000010 | PATCH | Windows Server 2019 account lockout duration must be configured to 15 minutes or greater."
  block:
      - name: "MEDIUM | WN19-AC-000010 | PATCH | Windows Server 2019 account lockout duration must be configured to 15 minutes or greater. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of minutes set for wn19stig_lockoutduration please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_lockoutduration < 15
            - wn19stig_lockoutduration > 0

      - name: "MEDIUM | WN19-AC-000010 | PATCH | Windows Server 2019 account lockout duration must be configured to 15 minutes or greater. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000010'
        when:
            - wn19stig_lockoutduration < 15
            - wn19stig_lockoutduration > 0

      - name: "MEDIUM | WN19-AC-000010 | PATCH | Windows Server 2019 account lockout duration must be configured to 15 minutes or greater. | Apply Variable."
        community.windows.win_security_policy:
            section: System Access
            key: LockoutDuration
            value: "{{ wn19stig_lockoutduration }}"
        when:
            - wn19stig_lockoutduration == 0 or
              wn19stig_lockoutduration >= 15
  when:
      - wn19_ac_000010
      - not win19stig_cloud_based_system
  tags:
      - WN19-AC-000010
      - V-205795
      - SRG-OS-000329-GPOS-00128
      - SV-205795r569188_rule
      - CCI-002238
      - CAT2

- name: "MEDIUM | WN19-AC-000040 | PATCH | Windows Server 2019 password history must be configured to 24 passwords remembered."
  community.windows.win_security_policy:
      section: System Access
      key: PasswordHistorySize
      value: 24
  when:
      - wn19_ac_000040
  tags:
      - WN19-AC-000040
      - V-205660
      - SRG-OS-000077-GPOS-00045
      - SV-205660r569188_rule
      - CCI-000200
      - CAT2

- name: "MEDIUM | WN19-AC-000050 | PATCH | Windows Server 2019 maximum password age must be configured to 60 days or less."
  block:
      - name: "MEDIUM | WN19-AC-000050 | AUDIT | Windows Server 2019 maximum password age must be configured to 60 days or less. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of days set for wn19stig_maximumpasswordage please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_maximumpasswordage == 0 or
              wn19stig_maximumpasswordage > 60

      - name: "MEDIUM | WN19-AC-000050 | AUDIT | Windows Server 2019 maximum password age must be configured to 60 days or less. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000050'
        when:
            - wn19stig_maximumpasswordage == 0 or
              wn19stig_maximumpasswordage > 60

      - name: "MEDIUM | WN19-AC-000050 | PATCH | Windows Server 2019 maximum password age must be configured to 60 days or less. | Apply Variable."
        community.windows.win_security_policy:
            section: System Access
            key: MaximumPasswordAge
            value: "{{ wn19stig_maximumpasswordage }}"
        when:
            - wn19stig_maximumpasswordage > 0
            - wn19stig_maximumpasswordage <= 60
  when:
      - wn19_ac_000050
  tags:
      - WN19-AC-000050
      - V-205659
      - SRG-OS-000076-GPOS-00044
      - SV-205659r569188_rule
      - CCI-000199
      - CAT2

- name: "MEDIUM | WN19-AC-000060 | PATCH | Windows Server 2019 minimum password age must be configured to at least one day."
  block:
      - name: "MEDIUM | WN19-AC-000060 | AUDIT | Windows Server 2019 minimum password age must be configured to at least one day. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of days set for wn19stig_minimumpasswordage please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_minimumpasswordage == 0

      - name: "MEDIUM | WN19-AC-000060 | AUDIT | Windows Server 2019 minimum password age must be configured to at least one day. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000060'
        when:
            wn19stig_minimumpasswordage == 0

      - name: "MEDIUM | WN19-AC-000060 | PATCH | Windows Server 2019 minimum password age must be configured to at least one day. | Set Variable."
        community.windows.win_security_policy:
            section: System Access
            key: MinimumPasswordAge
            value: "{{ wn19stig_minimumpasswordage }}"
        when:
            wn19stig_minimumpasswordage > 0
  when:
      - wn19_ac_000060
  tags:
      - WN19-AC-000060
      - V-205656
      - SRG-OS-000075-GPOS-00043
      - SV-205656r569188_rule
      - CCI-000198
      - CAT2

- name: "MEDIUM | WN19-AC-000070 | PATCH | Windows Server 2019 minimum password length must be configured to 14 characters."
  block:
      - name: "MEDIUM | WN19-AC-000070 | AUDIT | Windows Server 2019 minimum password length must be configured to 14 characters. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid password length for wn19stig_minimumpasswordlength please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_minimumpasswordlength < 14

      - name: "MEDIUM | WN19-AC-000070 | AUDIT | Windows Server 2019 minimum password length must be configured to 14 characters. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000070'
        when:
            - wn19stig_minimumpasswordlength < 14

      - name: "MEDIUM | WN19-AC-000070 | PATCH | Windows Server 2019 minimum password length must be configured to 14 characters. | Apply Variable."
        community.windows.win_security_policy:
            section: System Access
            key: MinimumPasswordLength
            value: "{{ wn19stig_minimumpasswordlength }}"
        when:
            - wn19stig_minimumpasswordlength >= 14
  when:
      - wn19_ac_000070
  tags:
      - WN19-AC-000070
      - V-205662
      - SRG-OS-000078-GPOS-00046
      - SV-205662r569188_rule
      - CCI-000205
      - CAT2

- name: "MEDIUM | WN19-AC-000080 | PATCH | Windows Server 2019 must have the built-in Windows password complexity policy enabled."
  community.windows.win_security_policy:
      section: System Access
      key: PasswordComplexity
      value: 1
  when:
      - wn19_ac_000080
  tags:
      - WN19-AC-000080
      - V-205652
      - SRG-OS-000069-GPOS-00037
      - SV-205652r569188_rule
      - CCI-000192
      - CCI-000193
      - CCI-000194
      - CCI-001619
      - CAT2

- name: "MEDIUM | WN19-AU-000010 | AUDIT | Windows Server 2019 audit records must be backed up to a different system or media than the system being audited."
  block:
      - name: "MEDIUM | WN19-AU-000010 | AUDIT | Windows Server 2019 audit records must be backed up to a different system or media than the system being audited."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 audit records must be backed up to a different system or media than the system being audited."

      - name: "MEDIUM | WN19-AU-000010 | AUDIT | Windows Server 2019 audit records must be backed up to a different system or media than the system being audited. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000010'
  when:
      - wn19_au_000010
  tags:
      - WN19-AU-000010
      - V-205799
      - SRG-OS-000342-GPOS-00133
      - SV-205799r569188_rule
      - CCI-001851
      - CAT2

- name: "MEDIUM | WN19-AU-000020 | AUDIT | Windows Server 2019 must, at a minimum, offload audit records of interconnected systems in real time and offload standalone or nondomain-joined systems weekly."
  block:
      - name: "MEDIUM | WN19-AU-000020 | AUDIT | Windows Server 2019 must, at a minimum, offload audit records of interconnected systems in real time and offload standalone or nondomain-joined systems weekly."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must, at a minimum, offload audit records of interconnected systems in real time and offload standalone or nondomain-joined systems weekly."

      - name: "MEDIUM | WN19-AU-000020 | AUDIT | Windows Server 2019 must, at a minimum, offload audit records of interconnected systems in real time and offload standalone or nondomain-joined systems weekly. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000020'
  when:
      - wn19_au_000020
  tags:
      - WN19-AU-000020
      - V-205843
      - SRG-OS-000479-GPOS-00224
      - SV-205843r860027_rule
      - CCI-001851
      - CAT2
      # hard one, either need to standardize on say log shipping like splunk or other is set?

- name: "MEDIUM | WN19-AU-000030 | AUDIT | Windows Server 2019 permissions for the Application event log must prevent access by non-privileged accounts."
  block:
      - name: "MEDIUM | WN19-AU-000030 | AUDIT | Windows Server 2019 permissions for the Application event log must prevent access by non-privileged accounts."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 permissions for the Application event log must prevent access by non-privileged accounts."

      - name: "MEDIUM | WN19-AU-000030 | AUDIT | Windows Server 2019 permissions for the Application event log must prevent access by non-privileged accounts. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000030'
  when:
      - wn19_au_000030
  tags:
      - WN19-AU-000030
      - V-205640
      - SRG-OS-000057-GPOS-00027
      - SV-205640r569188_rule
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - CAT2

- name: "MEDIUM | WN19-AU-000040 | AUDIT | Windows Server 2019 permissions for the Security event log must prevent access by non-privileged accounts."
  block:
      - name: "MEDIUM | WN19-AU-000040 | AUDIT | Windows Server 2019 permissions for the Security event log must prevent access by non-privileged accounts."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 permissions for the Security event log must prevent access by non-privileged accounts."

      - name: "MEDIUM | WN19-AU-000040 | AUDIT | Windows Server 2019 permissions for the Security event log must prevent access by non-privileged accounts. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000040'
  when:
      - wn19_au_000040
  tags:
      - WN19-AU-000040
      - V-205641
      - SRG-OS-000057-GPOS-00027
      - SV-205641r569188_rule
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - CAT2

- name: "MEDIUM | WN19-AU-000050 | AUDIT | Windows Server 2019 permissions for the System event log must prevent access by non-privileged accounts."
  block:
      - name: "MEDIUM | WN19-AU-000050 | AUDIT | Windows Server 2019 permissions for the System event log must prevent access by non-privileged accounts."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 permissions for the System event log must prevent access by non-privileged accounts."

      - name: "MEDIUM | WN19-AU-000050 | AUDIT | Windows Server 2019 permissions for the System event log must prevent access by non-privileged accounts. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000050'
  when:
      - wn19_au_000050
  tags:
      - WN19-AU-000050
      - V-205642
      - SRG-OS-000057-GPOS-00027
      - SV-205642r569188_rule
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - CAT2

- name: "MEDIUM | WN19-AU-000060 | AUDIT | Windows Server 2019 Event Viewer must be protected from unauthorized modification and deletion."
  block:
      - name: "MEDIUM | WN19-AU-000060 | AUDIT | Windows Server 2019 Event Viewer must be protected from unauthorized modification and deletion."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Event Viewer must be protected from unauthorized modification and deletion."

      - name: "MEDIUM | WN19-AU-000060 | AUDIT | Windows Server 2019 Event Viewer must be protected from unauthorized modification and deletion. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000060'
  when:
      - wn19_au_000060
  tags:
      - WN19-AU-000060
      - V-205731
      - SRG-OS-000257-GPOS-00098
      - SV-205731r569188_rule
      - CCI-001494
      - CCI-001495
      - CAT2

- name: "MEDIUM | WN19-AU-000070 | PATCH | Windows Server 2019 must be configured to audit Account Logon - Credential Validation successes."
  block:
      - name: "MEDIUM | WN19-AU-000070 | AUDIT | Windows Server 2019 must be configured to audit Account Logon - Credential Validation successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Credential Validation" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000070_audit

      - name: "MEDIUM | WN19-AU-000070 | PATCH | Windows Server 2019 must be configured to audit Account Logon - Credential Validation successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Credential Validation" /success:enable
        when: "'Success' not in wn19_au_000070_audit.stdout"
  when:
      - wn19_au_000070
  tags:
      - WN19-AU-000070
      - V-205832
      - SRG-OS-000470-GPOS-00214
      - SV-205832r569188_rule
      - CCI-000172
      - CAT2

- name: "MEDIUM | WN19-AU-000080 | PATCH | Windows Server 2019 must be configured to audit Account Logon - Credential Validation failures."
  block:
      - name: "MEDIUM | WN19-AU-000080 | AUDIT | Windows Server 2019 must be configured to audit Account Logon - Credential Validation failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Credential Validation" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000080_audit

      - name: "MEDIUM | WN19-AU-000080 | PATCH | Windows Server 2019 must be configured to audit Account Logon - Credential Validation failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Credential Validation" /failure:enable
        when: "'Failure' not in wn19_au_000080_audit.stdout"
  when:
      - wn19_au_000080
  tags:
      - WN19-AU-000080
      - V-205833
      - SRG-OS-000470-GPOS-00214
      - SV-205833r569188_rule
      - CCI-000172
      - CAT2

- name: "MEDIUM | WN19-AU-000090 | PATCH | Windows Server 2019 must be configured to audit Account Management - Other Account Management Events successes."
  block:
      - name: "MEDIUM | WN19-AU-000090 | AUDIT | Windows Server 2019 must be configured to audit Account Management - Other Account Management Events successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Other Account Management Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000090_audit

      - name: "MEDIUM | WN19-AU-000090 | PATCH | Windows Server 2019 must be configured to audit Account Management - Other Account Management Events successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Other Account Management Events" /success:enable
        when: "'Success' not in wn19_au_000090_audit.stdout"
  when:
      - wn19_au_000090
  tags:
      - WN19-AU-000090
      - V-205769
      - SRG-OS-000327-GPOS-00127
      - SV-205769r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000120 | PATCH | Windows Server 2019 must be configured to audit Account Management - User Account Management failures."
  block:
      - name: "MEDIUM | WN19-AU-000120 | AUDIT | Windows Server 2019 must be configured to audit Account Management - User Account Management failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"User Account Management" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000120_audit

      - name: "MEDIUM | WN19-AU-000120 | PATCH | Windows Server 2019 must be configured to audit Account Management - User Account Management failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"User Account Management" /failure:enable
        when: "'Failure' not in wn19_au_000120_audit.stdout"
  when:
      - wn19_au_000120
  tags:
      - WN19-AU-000120
      - V-205627
      - SRG-OS-000004-GPOS-00004
      - SV-205627r569188_rule
      - CCI-000018
      - CCI-000172
      - CCI-001403
      - CCI-001404
      - CCI-001405
      - CCI-002130
      - CAT2

- name: "MEDIUM | WN19-AU-000130 | PATCH | Windows Server 2019 must be configured to audit Detailed Tracking - Plug and Play Events successes."
  block:
      - name: "MEDIUM | WN19-AU-000130 | AUDIT | Windows Server 2019 must be configured to audit Detailed Tracking - Plug and Play Events successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Plug and Play Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000130_audit

      - name: "MEDIUM | WN19-AU-000130 | PATCH | Windows Server 2019 must be configured to audit Detailed Tracking - Plug and Play Events successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Plug and Play Events" /success:enable
        when: "'Success' not in wn19_au_000130_audit.stdout"
  when:
      - wn19_au_000130
  tags:
      - WN19-AU-000130
      - V-205839
      - SRG-OS-000474-GPOS-00219
      - SV-205839r569188_rule
      - CCI-000172
      - CAT2

- name: "MEDIUM | WN19-AU-000140 | PATCH | Windows Server 2019 must be configured to audit Detailed Tracking - Process Creation successes."
  block:
      - name: "MEDIUM | WN19-AU-000140 | AUDIT | Windows Server 2019 must be configured to audit Detailed Tracking - Process Creation successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Process Creation" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000140_audit

      - name: "MEDIUM | WN19-AU-000140 | PATCH | Windows Server 2019 must be configured to audit Detailed Tracking - Process Creation successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Process Creation" /success:enable
        when: "'Success' not in wn19_au_000140_audit.stdout"
  when:
      - wn19_au_000140
  tags:
      - WN19-AU-000140
      - V-205770
      - SRG-OS-000327-GPOS-00127
      - SV-205770r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000150 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Account Lockout successes."
  block:
      - name: "MEDIUM | WN19-AU-000150 | AUDIT | Windows Server 2019 must be configured to audit Logon/Logoff - Account Lockout successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Account Lockout" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000150_audit

      - name: "MEDIUM | WN19-AU-000150 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Account Lockout successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Account Lockout" /success:enable
        when: "'Success' not in wn19_au_000150_audit.stdout"
  when:
      - wn19_au_000150
  tags:
      - WN19-AU-000150
      - V-205729
      - SRG-OS-000240-GPOS-00090
      - SV-205729r569188_rule
      - CCI-000172
      - CCI-001404
      - CAT2

- name: "MEDIUM | WN19-AU-000160 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Account Lockout failures."
  block:
      - name: "MEDIUM | WN19-AU-000160 | AUDIT | Windows Server 2019 must be configured to audit Logon/Logoff - Account Lockout failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Account Lockout" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000160_audit

      - name: "MEDIUM | WN19-AU-000160 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Account Lockout failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Account Lockout" /failure:enable
        when: "'Failure' not in wn19_au_000160_audit.stdout"
  when:
      - wn19_au_000160
  tags:
      - WN19-AU-000160
      - V-205730
      - SRG-OS-000240-GPOS-00090
      - SV-205730r569188_rule
      - CCI-000172
      - CCI-001404
      - CAT2

- name: "MEDIUM | WN19-AU-000170 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Group Membership successes."
  block:
      - name: "MEDIUM | WN19-AU-000170 | AUDIT | Windows Server 2019 must be configured to audit Logon/Logoff - Group Membership successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Group Membership" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000170_audit

      - name: "MEDIUM | WN19-AU-000170 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Group Membership successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Group Membership" /success:enable
        when: "'Success' not in wn19_au_000170_audit.stdout"
  when:
      - wn19_au_000170
  tags:
      - WN19-AU-000170
      - V-205834
      - SRG-OS-000470-GPOS-00214
      - SV-205834r569188_rule
      - CCI-000172
      - CAT2

- name: "MEDIUM | WN19-AU-000180 | PATCH | Windows Server 2019 must be configured to audit logoff successes."
  block:
      - name: "MEDIUM | WN19-AU-000180 | AUDIT | Windows Server 2019 must be configured to audit logoff successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Logoff" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000180_audit

      - name: "MEDIUM | WN19-AU-000180 | PATCH | Windows Server 2019 must be configured to audit logoff successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Logoff" /success:enable
        when: "'Success' not in wn19_au_000180_audit.stdout"
  when:
      - wn19_au_000180
  tags:
      - WN19-AU-000180
      - V-205838
      - SRG-OS-000472-GPOS-00217
      - SV-205838r569188_rule
      - CCI-000172
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-AU-000190 | PATCH | Windows Server 2019 must be configured to audit logon successes."
  block:
      - name: "MEDIUM | WN19-AU-000190 | AUDIT | Windows Server 2019 must be configured to audit logon successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Logon" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000190_audit

      - name: "MEDIUM | WN19-AU-000190 | PATCH  Windows Server 2019 must be configured to audit logon successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Logon" /success:enable
        when: "'Success' not in wn19_au_000190_audit.stdout"
  when:
      - wn19_au_000190
  tags:
      - WN19-AU-000190
      - V-205634
      - SRG-OS-000032-GPOS-00013
      - SV-205634r569188_rule
      - CCI-000067
      - CCI-000172
      - CAT2

- name: "MEDIUM | WN19-AU-000200 | PATCH | Windows Server 2019 must be configured to audit logon failures"
  block:
      - name: "MEDIUM | WN19-AU-000200 | AUDIT | Windows Server 2019 must be configured to audit logon failures"
        ansible.windows.win_shell: AuditPol /get /subcategory:"Logon" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000200_audit

      - name: "MEDIUM | WN19-AU-000200 | PATCH | Windows Server 2019 must be configured to audit logon failures"
        ansible.windows.win_shell: AuditPol /set /subcategory:"Logon" /failure:enable
        when: "'Failure' not in wn19_au_000200_audit.stdout"
  when:
      - wn19_au_000200
  tags:
      - WN19-AU-000200
      - V-205635
      - SRG-OS-000032-GPOS-00013
      - SV-205635r569188_rule
      - CCI-000067
      - CCI-000172
      - CAT2

- name: "MEDIUM | WN19-AU-000210 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Special Logon successes."
  block:
      - name: "MEDIUM | WN19-AU-000210 | AUDIT | Windows Server 2019 must be configured to audit Logon/Logoff - Special Logon successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Special Logon" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000210_audit

      - name: "MEDIUM | WN19-AU-000210 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Special Logon successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Special Logon" /success:enable
        when: "'Success' not in wn19_au_000210_audit.stdout"
  when:
      - wn19_au_000210
  tags:
      - WN19-AU-000210
      - V-205835
      - SRG-OS-000470-GPOS-00214
      - SV-205835r569188_rule
      - CCI-000172
      - CAT2

- name: "MEDIUM | WN19-AU-000220 | PATCH | Windows Server 2019 must be configured to audit Object Access - Other Object Access Events successes."
  community.windows.win_audit_policy_system:
      subcategory: Other Object Access Events
      audit_type: success, failure
  when:
      - wn19_au_000220
  tags:
      - WN19-AU-000220
      - V-205836
      - SRG-OS-000470-GPOS-00214
      - SV-205836r569188_rule
      - CCI-000172
      - CAT2

- name: "MEDIUM | WN19-AU-000230 | PATCH | Windows Server 2019 must be configured to audit Object Access - Other Object Access Events failures."
  community.windows.win_audit_policy_system:
      subcategory: Other Object Access Events
      audit_type: success, failure
  when:
      - wn19_au_000230
  tags:
      - WN19-AU-000230
      - V-205837
      - SRG-OS-000470-GPOS-00214
      - SV-205837r569188_rule
      - CCI-000172
      - CAT2

- name: "MEDIUM | WN19-AU-000240 | PATCH | Windows Server 2019 must be configured to audit Object Access - Removable Storage successes."
  block:
      - name: "MEDIUM | WN19-AU-000240 | AUDIT | Windows Server 2019 must be configured to audit Object Access - Removable Storage successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Removable Storage" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000240_audit

      - name: "MEDIUM | WN19-AU-000240 | PATCH | Windows Server 2019 must be configured to audit Object Access - Removable Storage successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Removable Storage" /success:enable
        when: "'Success' not in wn19_au_000240_audit.stdout"
  when:
      - wn19_au_000240
  tags:
      - WN19-AU-000240
      - V-205840
      - SRG-OS-000474-GPOS-00219
      - SV-205840r569188_rule
      - CCI-000172
      - CAT2

- name: "MEDIUM | WN19-AU-000250 | PATCH | Windows Server 2019 must be configured to audit Object Access - Removable Storage failures."
  block:
      - name: "MEDIUM | WN19-AU-000250 | AUDIT | Windows Server 2019 must be configured to audit Object Access - Removable Storage failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Removable Storage" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000250_audit

      - name: "MEDIUM | WN19-AU-000250 | PATCH | Windows Server 2019 must be configured to audit Object Access - Removable Storage failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Removable Storage" /failure:enable
        when: "'Failure' not in wn19_au_000250_audit.stdout"
  when:
      - wn19_au_000250
  tags:
      - WN19-AU-000250
      - V-205841
      - SRG-OS-000474-GPOS-00219
      - SV-205841r569188_rule
      - CCI-000172
      - CAT2

- name: "MEDIUM | WN19-AU-000260 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change successes."
  block:
      - name: "MEDIUM | WN19-AU-000260 | AUDIT | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Audit Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000260_audit

      - name: "MEDIUM | WN19-AU-000260 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Audit Policy Change" /success:enable
        when: "'Success' not in wn19_au_000260_audit.stdout"
  when:
      - wn19_au_000260
  tags:
      - WN19-AU-000260
      - V-205771
      - SRG-OS-000327-GPOS-00127
      - SV-205771r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000270 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change failures."
  block:
      - name: "MEDIUM | WN19-AU-000270 | AUDIT | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Audit Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000270_audit

      - name: "MEDIUM | WN19-AU-000270 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Audit Policy Change" /failure:enable
        when: "'Failure' not in wn19_au_000270_audit.stdout"
  when:
      - wn19_au_000270
  tags:
      - WN19-AU-000270
      - V-205772
      - SRG-OS-000327-GPOS-00127
      - SV-205772r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000280 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Authentication Policy Change successes."
  block:
      - name: "MEDIUM | WN19-AU-000280 | AUDIT | Windows Server 2019 must be configured to audit Policy Change - Authentication Policy Change successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Authentication Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000280_audit

      - name: "MEDIUM | WN19-AU-000280 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Authentication Policy Change successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Authentication Policy Change" /success:enable
        when: "'Success' not in wn19_au_000280_audit.stdout"
  when:
      - wn19_au_000280
  tags:
      - WN19-AU-000280
      - V-205773
      - SRG-OS-000327-GPOS-00127
      - SV-205773r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000290 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Authorization Policy Change successes."
  block:
      - name: "MEDIUM | WN19-AU-000290 | AUDIT | Windows Server 2019 must be configured to audit Policy Change - Authorization Policy Change successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Authorization Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000290_audit

      - name: "MEDIUM | WN19-AU-000290 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Authorization Policy Change successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Authorization Policy Change" /success:enable
        when: "'Success' not in wn19_au_000290_audit.stdout"
  when:
      - wn19_au_000290
  tags:
      - WN19-AU-000290
      - V-205774
      - SRG-OS-000327-GPOS-00127
      - SV-205774r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000300 | PATCH | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use successes."
  block:
      - name: "MEDIUM | WN19-AU-000300 | AUDIT | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Sensitive Privilege Use" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000300_audit

      - name: "MEDIUM | WN19-AU-000300 | PATCH | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Sensitive Privilege Use" /success:enable
        when: "'Success' not in wn19_au_000300_audit.stdout"
  when:
      - wn19_au_000300
  tags:
      - WN19-AU-000300
      - V-205775
      - SRG-OS-000327-GPOS-00127
      - SV-205775r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000310 | PATCH | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use failures."
  block:
      - name: "MEDIUM | WN19-AU-000310 | AUDIT | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Sensitive Privilege Use" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000310_audit

      - name: "MEDIUM | WN19-AU-000310 | PATCH | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Sensitive Privilege Use" /failure:enable
        when: "'Failure' not in wn19_au_000310_audit.stdout"
  when:
      - wn19_au_000310
  tags:
      - WN19-AU-000310
      - V-205776
      - SRG-OS-000327-GPOS-00127
      - SV-205776r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000320 | PATCH | Windows Server 2019 must be configured to audit System - IPsec Driver successes."
  block:
      - name: "MEDIUM | WN19-AU-000320 | AUDIT | Windows Server 2019 must be configured to audit System - IPsec Driver successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"IPsec Driver" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000320_audit

      - name: "MEDIUM | WN19-AU-000320 | PATCH | Windows Server 2019 must be configured to audit System - IPsec Driver successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"IPsec Driver" /success:enable
        when: "'Success' not in wn19_au_000320_audit.stdout"
  when:
      - wn19_au_000320
  tags:
      - WN19-AU-000320
      - V-205777
      - SRG-OS-000327-GPOS-00127
      - SV-205777r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000330 | PATCH | Windows Server 2019 must be configured to audit System - IPsec Driver failures."
  block:
      - name: "MEDIUM | WN19-AU-000330 | AUDIT | Windows Server 2019 must be configured to audit System - IPsec Driver failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"IPsec Driver" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000330_audit

      - name: "MEDIUM | WN19-AU-000330 | PATCH | Windows Server 2019 must be configured to audit System - IPsec Driver failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"IPsec Driver" /failure:enable
        when: "'Success' not in wn19_au_000330_audit.stdout"
  when:
      - wn19_au_000330
  tags:
      - WN19-AU-000330
      - V-205778
      - SRG-OS-000327-GPOS-00127
      - SV-205778r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000340 | PATCH | Windows Server 2019 must be configured to audit System - Other System Events successes."
  block:
      - name: "MEDIUM | WN19-AU-000340 | AUDIT | Windows Server 2019 must be configured to audit System - Other System Events successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Other System Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000340_audit

      - name: "MEDIUM | WN19-AU-000340 | PATCH | Windows Server 2019 must be configured to audit System - Other System Events successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Other System Events" /success:enable
        when: "'Success' not in wn19_au_000340_audit.stdout"
  when:
      - wn19_au_000340
  tags:
      - WN19-AU-000340
      - V-205779
      - SRG-OS-000327-GPOS-00127
      - SV-205779r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000350 | PATCH | Windows Server 2019 must be configured to audit System - Other System Events failures."
  block:
      - name: "MEDIUM | WN19-AU-000350 | AUDIT | Windows Server 2019 must be configured to audit System - Other System Events failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Other System Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000350_audit

      - name: "MEDIUM | WN19-AU-000350 | PATCH | Windows Server 2019 must be configured to audit System - Other System Events failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Other System Events" /failure:enable
        when: "'Failure' not in wn19_au_000350_audit.stdout"
  when:
      - wn19_au_000350
  tags:
      - WN19-AU-000350
      - V-205780
      - SRG-OS-000327-GPOS-00127
      - SV-205780r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000360 | PATCH | Windows Server 2019 must be configured to audit System - Security State Change successes."
  block:
      - name: "MEDIUM | WN19-AU-000360 | AUDIT | Windows Server 2019 must be configured to audit System - Security State Change successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Security State Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000360_audit

      - name: "MEDIUM | WN19-AU-000360 | PATCH | Windows Server 2019 must be configured to audit System - Security State Change successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Security State Change" /success:enable
        when: "'Success' not in wn19_au_000360_audit.stdout"
  when:
      - wn19_au_000360
  tags:
      - WN19-AU-000360
      - V-205781
      - SRG-OS-000327-GPOS-00127
      - SV-205781r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000370 | PATCH | Windows Server 2019 must be configured to audit System - Security System Extension successes."
  block:
      - name: "MEDIUM | WN19-AU-000370 | AUDIT | Must be configured to audit System - Security System Extension successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Security System Extension" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000370_audit

      - name: "MEDIUM | WN19-AU-000370 | PATCH | Must be configured to audit System - Security System Extension successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Security System Extension" /success:enable
        when: "'Success' not in wn19_au_000370_audit.stdout"
  when:
      - wn19_au_000370
  tags:
      - WN19-AU-000370
      - V-205782
      - SRG-OS-000327-GPOS-00127
      - SV-205782r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000380 | PATCH | Windows Server 2019 must be configured to audit System - System Integrity successes."
  block:
      - name: "MEDIUM | WN19-AU-000380 | AUDIT | Windows Server 2019 must be configured to audit System - System Integrity successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"System Integrity" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000380_audit

      - name: "MEDIUM | WN19-AU-000380 | PATCH | Windows Server 2019 must be configured to audit System - System Integrity successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"System Integrity" /success:enable
        when: "'Success' not in wn19_au_000380_audit.stdout"
  when:
      - wn19_au_000380
  tags:
      - WN19-AU-000380
      - V-205783
      - SRG-OS-000327-GPOS-00127
      - SV-205783r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-AU-000390 | PATCH | Windows Server 2019 must be configured to audit System - System Integrity failures."
  block:
      - name: "MEDIUM | WN19-AU-000390 | AUDIT | Windows Server 2019 must be configured to audit System - System Integrity failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"System Integrity" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000390_audit

      - name: "MEDIUM | WN19-AU-000390 | PATCH | Windows Server 2019 must be configured to audit System - System Integrity failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"System Integrity" /failure:enable
        when: "'Failure' not in wn19_au_000390_audit.stdout"
  when:
      - wn19_au_000390
  tags:
      - WN19-AU-000390
      - V-205784
      - SRG-OS-000327-GPOS-00127
      - SV-205784r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

# some versions may be core/no gui, may need a prelim to detect?
- name: "MEDIUM | WN19-CC-000010 | PATCH | Windows Server 2019 must prevent the display of slide shows on the lock screen."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization
      value: NoLockScreenSlideshow
      data: 1
      datatype: dword
  when:
      - wn19_cc_000010
  tags:
      - WN19-CC-000010
      - V-205686
      - SRG-OS-000095-GPOS-00049
      - SV-205686r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-CC-000020 | PATCH | Windows Server 2019 must have WDigest Authentication disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\Wdigest
      value: UseLogonCredential
      data: 0
      datatype: dword
  when:
      - wn19_cc_000020
  tags:
      - WN19-CC-000020
      - V-205687
      - SRG-OS-000095-GPOS-00049
      - SV-205687r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-CC-000070 | PATCH | Windows Server 2019 insecure logons to an SMB server must be disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\LanmanWorkstation
      value: AllowInsecureGuestAuth
      data: 0
      datatype: dword
  when:
      - wn19_cc_000070
  tags:
      - WN19-CC-000070
      - V-205861
      - SRG-OS-000480-GPOS-00227
      - SV-205861r569188_rule
      - CCI-000366
      - CAT2

# verify if this applies to DC or only MS?
- name: "MEDIUM | WN19-CC-000080 | PATCH | Windows Server 2019 hardened Universal Naming Convention (UNC) paths must be defined to require mutual authentication and integrity for at least the SYSVOL and NETLOGON shares."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\NetworkProvider\HardenedPaths
      value: "{{ item }}"
      data: RequireMutualAuthentication=1, RequireIntegrity=1
      datatype: string
  with_items:
      - \\*\SYSVOL
      - \\*\NETLOGON
  when:
      - wn19_cc_000080
      - ansible_windows_domain_member
  tags:
      - WN19-CC-000080
      - V-205862
      - SRG-OS-000480-GPOS-00227
      - 205862r857311_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000090 | PATCH | Windows Server 2019 command line data must be included in process creation events."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Audit
      value: ProcessCreationIncludeCmdLine_Enabled
      data: 1
      datatype: dword
  when:
      - wn19_cc_000090
  tags:
      - WN19-CC-000090
      - V-205638
      - SRG-OS-000042-GPOS-00020
      - SV-205638r569188_rule
      - CCI-000135
      - CAT2

- name: "MEDIUM | WN19-CC-000100 | PATCH | Windows Server 2019 must be configured to enable Remote host allows delegation of non-exportable credentials."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\CredentialsDelegation
      value: AllowProtectedCreds
      data: 1
      datatype: dword
  when:
      - wn19_cc_000100
  tags:
      - WN19-CC-000100
      - V-205863
      - SRG-OS-000480-GPOS-00227
      - SV-205863r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000110 | AUDIT | Windows Server 2019 virtualization-based security must be enabled with the platform security level configured to Secure Boot or Secure Boot with DMA Protection."
  block:
      - name: "MEDIUM | WN19-CC-000110 | AUDIT | Windows Server 2019 virtualization-based security must be enabled with the platform security level configured to Secure Boot or Secure Boot with DMA Protection."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 virtualization-based security must be enabled with the platform security level configured to Secure Boot or Secure Boot with DMA Protection."

      - name: "MEDIUM | WN19-CC-000110 | AUDIT | Windows Server 2019 virtualization-based security must be enabled with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-CC-000110'
  when:
      - wn19_cc_000110
      - ansible_windows_domain_member
  tags:
      - WN19-CC-000110
      - V-205864
      - SRG-OS-000480-GPOS-00227
      - SV-205864r857313_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000130 | PATCH | Windows Server 2019 early Launch Antimalware, Boot-Start Driver Initialization Policy must prevent boot drivers identified as bad."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Policies\EarlyLaunch
      value: DriverLoadPolicy
      data: 1
      datatype: dword
  when:
      - wn19_cc_000130
  tags:
      - WN19-CC-000130
      - V-205865
      - SRG-OS-000480-GPOS-00227
      - SV-205865r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000140 | PATCH | Windows Server 2019 group policy objects must be reprocessed even if they have not changed."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Group Policy\{35378EAC-683F-11D2-A89A-00C04FBBCFA2}
      value: NoGPOListChanges
      data: 0
      datatype: dword
  when:
      - wn19_cc_000140
  tags:
      - WN19-CC-000140
      - V-205866
      - SRG-OS-000480-GPOS-00227
      - SV-205866r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000150 | PATCH | Windows Server 2019 downloading print driver packages over HTTP must be turned off."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Printers
      value: DisableWebPnPDownload
      data: 1
      datatype: dword
  when:
      - wn19_cc_000150
  tags:
      - WN19-CC-000150
      - V-205688
      - SRG-OS-000095-GPOS-00049
      - SV-205688r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-CC-000160 | PATCH | Windows Server 2019 printing over HTTP must be turned off."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Printers
      value: DisableHTTPPrinting
      data: 1
      datatype: dword
  when:
      - wn19_cc_000160
  tags:
      - WN19-CC-000160
      - V-205689
      - SRG-OS-000095-GPOS-00049
      - SV-205689r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-CC-000170 | PATCH | Windows Server 2019 network selection user interface (UI) must not be displayed on the logon screen."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
      value: DontDisplayNetworkSelectionUI
      data: 1
      datatype: dword
  when:
      - wn19_cc_000170
  tags:
      - WN19-CC-000170
      - V-205690
      - SRG-OS-000095-GPOS-00049
      - SV-205690r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-CC-000180 | PATCH | Windows Server 2019 users must be prompted to authenticate when the system wakes from sleep (on battery)."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51
      value: DCSettingIndex
      data: 1
      datatype: dword
  when:
      - wn19_cc_000180
  tags:
      - WN19-CC-000180
      - V-205867
      - SRG-OS-000480-GPOS-00227
      - SV-205867r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000190 | PATCH | Windows Server 2019 users must be prompted to authenticate when the system wakes from sleep (plugged in)."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51
      value: ACSettingIndex
      data: 1
      datatype: dword
  when:
      - wn19_cc_000190
  tags:
      - WN19-CC-000190
      - V-205868
      - SRG-OS-000480-GPOS-00227
      - SV-205868r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000240 | PATCH | Windows Server 2019 administrator accounts must not be enumerated during elevation."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\CredUI
      value: EnumerateAdministrators
      data: 0
      datatype: dword
  when:
      - wn19_cc_000240
  tags:
      - WN19-CC-000240
      - V-205714
      - SRG-OS-000134-GPOS-00068
      - SV-205714r569188_rule
      - CCI-001084
      - CAT2

- name: "MEDIUM | WN19-CC-000250 | PATCH | Windows Server 2019 Telemetry must be configured to Security or Basic."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection
      value: AllowTelemetry
      data: 0
      datatype: dword
  when:
      - wn19_cc_000250
  tags:
      - WN19-CC-000250
      - V-205869
      - SRG-OS-000480-GPOS-00227
      - SV-205869r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000270 | PATCH | Windows Server 2019 Application event log size must be configured to 32768 KB or greater."
  block:
      - name: "MEDIUM | WN19-CC-000270 | AUDIT | Windows Server 2019 Application event log size must be configured to 32768 KB or greater."
        ansible.windows.win_reg_stat:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application
            name: MaxSize
        register: wn19_cc_000270_audit

      - name: "MEDIUM | WN19-CC-000270 | PATCH | Windows Server 2019 Application event log size must be configured to 32768 KB or greater."
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application
            value: MaxSize
            data: "{{ wn19stig_app_maxsize }}"
            datatype: dword
        when:
            - wn19_cc_000270_audit is defined
            - not wn19_cc_000270_audit.exists or
              wn19_cc_000270_audit.value < 32768
  when:
      - wn19_cc_000270
  tags:
      - WN19-CC-000270
      - V-205796
      - SRG-OS-000341-GPOS-00132
      - SV-205796r569188_rule
      - CCI-001849
      - CAT2

- name: "MEDIUM | WN19-CC-000280 | PATCH | Windows Server 2019 Security event log size must be configured to 196608 KB or greater."
  block:
      - name: "MEDIUM | WN19-CC-000280 | AUDIT | Windows Server 2019 Security event log size must be configured to 196608 KB or greater."
        ansible.windows.win_reg_stat:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security
            name: MaxSize
        register: wn19_cc_000280_audit

      - name: "MEDIUM | WN19-CC-000280 | PATCH | Windows Server 2019 Security event log size must be configured to 196608 KB or greater."
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security
            value: MaxSize
            data: "{{ wn19stig_sec_maxsize }}"
            datatype: dword
        when:
            - wn19_cc_000280_audit is defined
            - not wn19_cc_000280_audit.exists or
              wn19_cc_000280_audit.value < 196608
  when:
      - wn19_cc_000280
  tags:
      - WN19-CC-000280
      - V-205797
      - SRG-OS-000341-GPOS-00132
      - SV-205797r569188_rule
      - CCI-001849
      - CAT2

- name: "MEDIUM | WN19-CC-000290 | PATCH | Windows Server 2019 System event log size must be configured to 32768 KB or greater."
  block:
      - name: "MEDIUM | WN19-CC-000290 | AUDIT | Windows Server 2019 System event log size must be configured to 32768 KB or greater."
        ansible.windows.win_reg_stat:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\System
            name: MaxSize
        register: wn19_cc_000290_audit

      - name: "MEDIUM | WN19-CC-000290 | PATCH | Windows Server 2019 System event log size must be configured to 32768 KB or greater."
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\System
            value: MaxSize
            data: "{{ wn19stig_sys_maxsize }}"
            datatype: dword
        when:
            - wn19_cc_000290_audit is defined
            - not wn19_cc_000290_audit.exists or
              wn19_cc_000290_audit.value < 32768
  when:
      - wn19_cc_000290
  tags:
      - WN19-CC-000290
      - V-93181
      - SRG-OS-000341-GPOS-00132
      - SV-103269r1
      - CCI-001849

- name: "MEDIUM | WN19-CC-000300 | PATCH | Windows Server 2019 Windows Defender SmartScreen must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
      value: EnableSmartScreen
      data: 1
      datatype: dword
  when:
      - wn19_cc_000300
  tags:
      - WN19-CC-000300
      - V-205798
      - SRG-OS-000095-GPOS-00049
      - SV-205798r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-CC-000310 | PATCH | Windows Server 2019 Explorer Data Execution Prevention must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer
      value: NoDataExecutionPrevention
      data: 0
      datatype: dword
  when:
      - wn19_cc_000310
  tags:
      - WN19-CC-000310
      - V-205830
      - SRG-OS-000433-GPOS-00192
      - SV-205830r569188_rule
      - CCI-002824
      - CAT2

- name: "MEDIUM | WN19-CC-000330 | PATCH | Windows Server 2019 File Explorer shell protocol must run in protected mode."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer
      value: PreXPSP2ShellProtocolBehavior
      data: 0
      datatype: dword
  when:
      - wn19_cc_000330
  tags:
      - WN19-CC-000330
      - V-205872
      - SRG-OS-000480-GPOS-00227
      - SV-205872r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000340 | PATCH | Windows Server 2019 must not save passwords in the Remote Desktop Client."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: DisablePasswordSaving
      data: 1
      datatype: dword
  when:
      - wn19_cc_000340
  tags:
      - WN19-CC-000340
      - V-205808
      - SRG-OS-000373-GPOS-00157
      - SV-205808r569188_rule
      - CCI-002038
      - CAT2

- name: "MEDIUM | WN19-CC-000350 | PATCH | Windows Server 2019 Remote Desktop Services must prevent drive redirection."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: fDisableCdm
      data: 1
      datatype: dword
  when:
      - wn19_cc_000350
  tags:
      - WN19-CC-000350
      - V-205722
      - SRG-OS-000138-GPOS-00069
      - SV-205722r569188_rule
      - CCI-001090
      - CAT2

- name: "MEDIUM | WN19-CC-000360 | PATCH | Windows Server 2019 remote Desktop Services must always prompt a client for passwords upon connection."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: fPromptForPassword
      data: 1
      datatype: dword
  when:
      - wn19_cc_000360
  tags:
      - WN19-CC-000360
      - V-205809
      - SRG-OS-000373-GPOS-00157
      - SV-205809r569188_rule
      - CCI-002038
      - CAT2

- name: "MEDIUM | WN19-CC-000370 | PATCH | Windows Server 2019 Remote Desktop Services must require secure Remote Procedure Call (RPC) communications."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: fEncryptRPCTraffic
      data: 1
      datatype: dword
  when:
      - wn19_cc_000370
  tags:
      - WN19-CC-000370
      - V-92971
      - SRG-OS-000033-GPOS-00014
      - SV-103059r1
      - CCI-000068
      - CCI-001453
      - CAT2

- name: "MEDIUM | WN19-CC-000380 | PATCH | Windows Server 2019 remote Desktop Services must be configured with the client connection encryption set to High Level."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: MinEncryptionLevel
      data: 3
      datatype: dword
  when:
      - wn19_cc_000380
  tags:
      - WN19-CC-000380
      - V-205636
      - SRG-OS-000033-GPOS-00014
      - SRG-OS-000250-GPOS-00093
      - SV-205636r569188_rule
      - CCI-000068
      - CCI-001453
      - CAT2

- name: "MEDIUM | WN19-CC-000390 | PATCH | Windows Server 2019 must prevent attachments from being downloaded from RSS feeds."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds
      value: DisableEnclosureDownload
      data: 1
      datatype: dword
  when:
      - wn19_cc_000390
  tags:
      - WN19-CC-000390
      - V-205873
      - SRG-OS-000480-GPOS-00227
      - SV-205873r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000400 | PATCH | Windows Server 2019 must disable Basic authentication for RSS feeds over HTTP."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds
      value: AllowBasicAuthInClear
      data: 0
      datatype: dword
  when:
      - wn19_cc_000400
  tags:
      - WN19-CC-000400
      - V-205693
      - SRG-OS-000095-GPOS-00049
      - SV-205693r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-CC-000410 | PATCH | Windows Server 2019 must prevent Indexing of encrypted files."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search
      value: AllowIndexingEncryptedStoresOrItems
      data: 0
      datatype: dword
  when:
      - wn19_cc_000410
  tags:
      - WN19-CC-000410
      - V-205694
      - SRG-OS-000095-GPOS-00049
      - SV-205694r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-CC-000420 | PATCH | Windows Server 2019 must prevent users from changing installation options."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer
      value: EnableUserControl
      data: 0
      datatype: dword
  when:
      - wn19_cc_000420
  tags:
      - WN19-CC-000420
      - V-205801
      - SRG-OS-000362-GPOS-00149
      - SV-205801r569188_rule
      - CCI-001812
      - CAT2

- name: "MEDIUM | WN19-CC-000440 | PATCH | Windows Server 2019  users must be notified if a web-based program attempts to install software."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer
      value: SafeForScripting
      data: 0
      datatype: dword
  when:
      - wn19_cc_000440
  tags:
      - WN19-CC-000440
      - V-205874
      - SRG-OS-000480-GPOS-00227
      - SV-205874r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000450 | PATCH | Windows Server 2019 must disable automatically signing in the last interactive user after a system-initiated restart."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: DisableAutomaticRestartSignOn
      data: 1
      datatype: dword
  when:
      - wn19_cc_000450
  tags:
      - WN19-CC-000450
      - V-205925
      - SRG-OS-000480-GPOS-00229
      - SV-205925r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000451 | PATCH | The Windows Explorer Preview pane must be disabled for Windows Server 2019."
  ansible.windows.win_regedit:
      path: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer
      value: NoPreviewPane
      data: 1
      datatype: dword
  when:
      - wn19_cc_000451
  tags:
      - WN19-CC-000451
      - V-236001
      - SRG-OS-000095-GPOS-00049
      - SV-236001r641821_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-CC-000460 | PATCH | Windows Server 2019 PowerShell script block logging must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging
      value: EnableScriptBlockLogging
      data: 1
      datatype: dword
  when:
      - wn19_cc_000460
  tags:
      - WN19-CC-000460
      - V-205639
      - SRG-OS-000042-GPOS-00020
      - SV-205639r569188_rule
      - CCI-000135
      - CAT2

- name: "MEDIUM | WN19-CC-000480 | PATCH | Windows Server 2019 Windows Remote Management (WinRM) client must not allow unencrypted traffic."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client
      value: AllowUnencryptedTraffic
      data: 0
      datatype: dword
  when:
      - wn19_cc_000480
      - not win2019stig_skip_for_test
  tags:
      - WN19-CC-000480
      - V-205816
      - SRG-OS-000393-GPOS-00173
      - SV-205816r569188_rule
      - CCI-002890
      - CCI-003123
      - CAT2

- name: "MEDIUM | WN19-CC-000490 | PATCH | Windows Server 2019 Windows Remote Management (WinRM) client must not use Digest authentication."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client
      value: AllowDigest
      data: 0
      datatype: dword
  when:
      - wn19_cc_000490
  tags:
      - WN19-CC-000490
      - V-205712
      - SRG-OS-000125-GPOS-00065
      - SV-205712r569188_rule
      - CCI-000877
      - CAT2

- name: "MEDIUM | WN19-CC-000510 | PATCH | Windows Server 2019 Windows Remote Management (WinRM) service must not allow unencrypted traffic."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service
      value: AllowUnencryptedTraffic
      data: 0
      datatype: dword
  when:
      - wn19_cc_000510
      - not win2019stig_skip_for_test
  tags:
      - WN19-CC-000510
      - V-205817
      - SRG-OS-000393-GPOS-00173
      - SV-205817r569188_rule
      - CCI-002890
      - CCI-003123
      - CAT2

- name: "MEDIUM | WN19-CC-000520 | PATCH | Windows Server 2019 Windows Remote Management (WinRM) service must not store RunAs credentials."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service
      value: DisableRunAs
      data: 1
      datatype: dword
  when:
      - wn19_cc_000520
      - not win2019stig_skip_for_test
  tags:
      - WN19-CC-000520
      - V-205810
      - SRG-OS-000373-GPOS-00157
      - SV-205810r569188_rule
      - CCI-002038
      - CAT2

- name: "MEDIUM | WN19-DC-000020 | AUDIT | Windows Server 2019 Kerberos user logon restrictions must be enforced."
  block:
      - name: "MEDIUM | WN19-DC-000020 | AUDIT | Windows Server 2019 Kerberos user logon restrictions must be enforced."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Kerberos user logon restrictions must be enforced."

      - name: "MEDIUM | WN19-DC-000020 | AUDIT | Windows Server 2019 Kerberos user logon restrictions must be enforced. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000020'
  when:
      - wn19_dc_000020
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000020
      - V-205702
      - SRG-OS-000112-GPOS-00057
      - SV-205702r569188_rule
      - CCI-001941
      - CCI-001942
      - CAT2

- name: "MEDIUM | WN19-DC-000030 | AUDIT | Windows Server 2019 Kerberos service ticket maximum lifetime must be limited to 600 minutes or less."
  block:
      - name: "MEDIUM | WN19-DC-000030 | AUDIT | Windows Server 2019 Kerberos service ticket maximum lifetime must be limited to 600 minutes or less."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Kerberos service ticket maximum lifetime must be limited to 600 minutes or less."

      - name: "MEDIUM | WN19-DC-000030 | AUDIT | Windows Server 2019 Kerberos service ticket maximum lifetime must be limited to 600 minutes or less. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000030'
  when:
      - wn19_dc_000030
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000030
      - V-205703
      - SRG-OS-000112-GPOS-00057
      - SV-205703r569188_rule
      - CCI-001941
      - CCI-001942
      - CAT2

- name: "MEDIUM | WN19-DC-000040 | AUDIT | Windows Server 2019 Kerberos user ticket lifetime must be limited to 10 hours or less."
  block:
      - name: "MEDIUM | WN19-DC-000040 | AUDIT | Windows Server 2019 Kerberos user ticket lifetime must be limited to 10 hours or less."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Kerberos user ticket lifetime must be limited to 10 hours or less."

      - name: "MEDIUM | WN19-DC-000040 | AUDIT | Windows Server 2019 Kerberos user ticket lifetime must be limited to 10 hours or less. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000040'
  when:
      - wn19_dc_000040
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000040
      - V-205704
      - SRG-OS-000112-GPOS-00057
      - SV-205704r569188_rule
      - CCI-001941
      - CCI-001942
      - CAT2

- name: "MEDIUM | WN19-DC-000050 | AUDIT | Windows Server 2019 Kerberos policy user ticket renewal maximum lifetime must be limited to seven days or less."
  block:
      - name: "MEDIUM | WN19-DC-000050 | AUDIT | Windows Server 2019 Kerberos policy user ticket renewal maximum lifetime must be limited to seven days or less."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Kerberos policy user ticket renewal maximum lifetime must be limited to seven days or less."

      - name: "MEDIUM | WN19-DC-000050 | AUDIT | Windows Server 2019 Kerberos policy user ticket renewal maximum lifetime must be limited to seven days or less.| import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000050'
  when:
      - wn19_dc_000050
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000050
      - V-205705
      - SRG-OS-000112-GPOS-00057
      - SV-205705r569188_rule
      - CCI-001941
      - CCI-001942
      - CAT2

- name: "MEDIUM | WN19-DC-000060 | AUDIT | Windows Server 2019 computer clock synchronization tolerance must be limited to 5 minutes or less."
  block:
      - name: "MEDIUM | WN19-DC-000060 | AUDIT | Windows Server 2019 computer clock synchronization tolerance must be limited to 5 minutes or less."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 computer clock synchronization tolerance must be limited to 5 minutes or less."

      - name: "MEDIUM | WN19-DC-000060 | AUDIT | Windows Server 2019 computer clock synchronization tolerance must be limited to 5 minutes or less. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000060'
  when:
      - wn19_dc_000060
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000060
      - V-205706
      - SRG-OS-000112-GPOS-00057
      - SV-205706r569188_rule
      - CCI-001941
      - CCI-001942
      - CAT2

- name: "MEDIUM | WN19-DC-000120 | AUDIT | Windows Server 2019 data files owned by users must be on a different logical partition from the directory server data files."
  block:
      - name: "MEDIUM | WN19-DC-000120 | AUDIT | Windows Server 2019 data files owned by users must be on a different logical partition from the directory server data files."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 data files owned by users must be on a different logical partition from the directory server data files."

      - name: "MEDIUM | WN19-DC-000120 | AUDIT | Windows Server 2019 data files owned by users must be on a different logical partition from the directory server data files. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000120'
  when:
      - wn19_dc_000120
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000120
      - V-205723
      - SRG-OS-000138-GPOS-00069
      - SV-205723r569188_rule
      - CCI-001090
      - CAT2

- name: "MEDIUM | WN19-DC-000130 | AUDIT | Windows Server 2019 domain controllers must run on a machine dedicated to that function."
  block:
      - name: "MEDIUM | WN19-DC-000130 | AUDIT | Windows Server 2019 domain controllers must run on a machine dedicated to that function."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 domain controllers must run on a machine dedicated to that function."

      - name: "MEDIUM | WN19-DC-000130 | AUDIT | Windows Server 2019 domain controllers must run on a machine dedicated to that function. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000130'
  when:
      - wn19_dc_000130
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000130
      - V-205695
      - SRG-OS-000095-GPOS-00049
      - SV-205695r569188_rule
      - CCI-000381
      - CAT2

- name: "MEDIUM | WN19-DC-000140 | AUDIT | Windows Server 2019 must use separate, NSA-approved (Type 1) cryptography to protect the directory data in transit for directory service implementations at a classified confidentiality level when replication data traverses a network cleared to a lower level than the data."
  block:
      - name: "MEDIUM | WN19-DC-000140 | AUDIT | Windows Server 2019 must use separate, NSA-approved (Type 1) cryptography to protect the directory data in transit for directory service implementations at a classified confidentiality level when replication data traverses a network cleared to a lower level than the data."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must use separate, NSA-approved (Type 1) cryptography to protect the directory data in transit for directory service implementations at a classified confidentiality level when replication data traverses a network cleared to a lower level than the data."

      - name: "MEDIUM | WN19-DC-000140 | AUDIT | Windows Server 2019 must use separate, NSA-approved (Type 1) cryptography to protect the directory data in transit for directory service implementations at a classified confidentiality level when replication data traverses a network cleared to a lower level than the data. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000140'
  when:
      - wn19_dc_000140
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000140
      - V-205818
      - SRG-OS-000396-GPOS-00176
      - SV-205818r569188_rule
      - CCI-002450
      - CAT2

- name: "MEDIUM | WN19-DC-000170 | AUDIT | Windows Server 2019 Active Directory Group Policy objects must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000170 | AUDIT | Windows Server 2019 Active Directory Group Policy objects must be configured with proper audit settings."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Active Directory Group Policy objects must be configured with proper audit settings."

      - name: "MEDIUM | WN19-DC-000170 | AUDIT | Windows Server 2019 Active Directory Group Policy objects must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000170'
  when:
      - wn19_dc_000170
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000170
      - V-205785
      - SRG-OS-000327-GPOS-00127
      - SV-205785r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-DC-000180 | AUDIT | Windows Server 2019 Active Directory Domain object must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000180 | AUDIT | Windows Server 2019 Active Directory Domain object must be configured with proper audit settings."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Active Directory Domain object must be configured with proper audit settings."

      - name: "MEDIUM | WN19-DC-000180 | AUDIT | Windows Server 2019 Active Directory Domain object must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000180'
  when:
      - wn19_dc_000180
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000180
      - V-205786
      - SRG-OS-000327-GPOS-00127
      - SV-205786r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-DC-000190 | AUDIT | Windows Server 2019 Active Directory Infrastructure object must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000190 | AUDIT | Windows Server 2019 Active Directory Infrastructure object must be configured with proper audit settings."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Active Directory Infrastructure object must be configured with proper audit settings."

      - name: "MEDIUM | WN19-DC-000190 | AUDIT | Windows Server 2019 Active Directory Infrastructure object must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000190'
  when:
      - wn19_dc_000190
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000190
      - V-205787
      - SRG-OS-000327-GPOS-00127
      - SV-205787r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-DC-000200 | AUDIT | Windows Server 2019 Active Directory Domain Controllers Organizational Unit (OU) object must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000200 | AUDIT | Windows Server 2019 Active Directory Domain Controllers Organizational Unit (OU) object must be configured with proper audit settings."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Active Directory Domain Controllers Organizational Unit (OU) object must be configured with proper audit settings."

      - name: "MEDIUM | WN19-DC-000200 | AUDIT | Windows Server 2019 Active Directory Domain Controllers Organizational Unit (OU) object must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000200'
  when:
      - wn19_dc_000200
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000200
      - V-205788
      - SRG-OS-000327-GPOS-00127
      - SV-205788r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-DC-000210 | AUDIT | Windows Server 2019 Active Directory AdminSDHolder object must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000210 | AUDIT | Windows Server 2019 Active Directory AdminSDHolder object must be configured with proper audit settings."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Active Directory AdminSDHolder object must be configured with proper audit settings."

      - name: "MEDIUM | WN19-DC-000210 | AUDIT | Windows Server 2019 Active Directory AdminSDHolder object must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000210'
  when:
      - wn19_dc_000210
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000210
      - V-205789
      - SRG-OS-000327-GPOS-00127
      - WN19-DC-000210
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-DC-000220 | AUDIT | Windows Server 2019 Active Directory RID Manager$ object must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000220 | AUDIT | Windows Server 2019 Active Directory RID Manager$ object must be configured with proper audit settings."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Active Directory RID Manager$ object must be configured with proper audit settings."

      - name: "MEDIUM | WN19-DC-000220 | AUDIT | Windows Server 2019 Active Directory RID Manager$ object must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000220'
  when:
      - wn19_dc_000220
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000220
      - V-205790
      - SRG-OS-000327-GPOS-00127
      - SV-205790r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2

- name: "MEDIUM | WN19-DC-000230 | PATCH | Windows Server 2019 must be configured to audit Account Management - Computer Account Management successes."
  block:
      - name: "MEDIUM | WN19-DC-000230 | AUDIT | Windows Server 2019 must be configured to audit Account Management - Computer Account Management successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Computer Account Management" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_dc_000230_audit

      - name: "MEDIUM | WN19-DC-000230 | PATCH | Windows Server 2019 must be configured to audit Account Management - Computer Account Management successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Computer Account Management" /success:enable
        when: "'Success' not in wn19_dc_000230_audit.stdout"
  when:
      - wn19_dc_000230
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000230
      - V-205628
      - SRG-OS-000004-GPOS-00004
      - SRG-OS-000239-GPOS-00089
      - SRG-OS-000240-GPOS-00090
      - SRG-OS-000241-GPOS-00091
      - SRG-OS-000303-GPOS-00120
      - SRG-OS-000476-GPOS-00221
      - SV-205628r569188_rule
      - CCI-000018
      - CCI-000172
      - CCI-001403
      - CCI-001404
      - CCI-001405
      - CCI-002130
      - CAT2

- name: "MEDIUM | WN19-DC-000240 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Access successes."
  block:
      - name: "MEDIUM | WN19-DC-000240 | AUDIT | Windows Server 2019 must be configured to audit DS Access - Directory Service Access successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Directory Service Access" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_dc_000240_audit

      - name: "MEDIUM | WN19-DC-000240 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Access successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Directory Service Access" /success:enable
        when: "'Success' not in wn19_dc_000240_audit.stdout"
  when:
      - wn19_dc_000240
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000240
      - V-205791
      - SRG-OS-000327-GPOS-00127
      - SRG-OS-000458-GPOS-00203
      - SRG-OS-000463-GPOS-00207
      - SRG-OS-000468-GPOS-00212
      - SV-205791r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000250 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Access failures."
  block:
      - name: "MEDIUM | WN19-DC-000250 | AUDIT | Windows Server 2019 must be configured to audit DS Access - Directory Service Access failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Directory Service Access" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_dc_000250_audit

      - name: "MEDIUM | WN19-DC-000250 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Access failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Directory Service Access" /failure:enable
        when: "'Failure' not in wn19_dc_000250_audit.stdout"
  when:
      - wn19_dc_000250
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000250
      - V-205792
      - SRG-OS-000327-GPOS-00127
      - SV-205792r569188_rule
      - SRG-OS-000458-GPOS-00203
      - SRG-OS-000463-GPOS-00207
      - SRG-OS-000468-GPOS-00212
      - CCI-000172
      - CCI-002234
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000260 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Changes successes."
  block:
      - name: "MEDIUM | WN19-DC-000260 | AUDIT | Windows Server 2019 must be configured to audit DS Access - Directory Service Changes successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Directory Service Changes" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_dc_000260_audit

      - name: "MEDIUM | WN19-DC-000260 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Changes successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Directory Service Changes" /success:enable
        when: "'Success' not in wn19_dc_000260_audit.stdout"
  when:
      - wn19_dc_000260
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000260
      - V-205793
      - SRG-OS-000327-GPOS-00127
      - SRG-OS-000458-GPOS-00203
      - SRG-OS-000463-GPOS-00207
      - SRG-OS-000468-GPOS-00212
      - SV-205793r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000270 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Changes failures."
  block:
      - name: "MEDIUM | WN19-DC-000270 | AUDIT | Windows Server 2019 must be configured to audit DS Access - Directory Service Changes failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Directory Service Changes" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_dc_000270_audit

      - name: "MEDIUM | WN19-DC-000270 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Changes failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Directory Service Changes" /failure:enable
        when: "'Failure' not in wn19_dc_000270_audit.stdout"
  when:
      - wn19_dc_000270
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000270
      - V-205794
      - SRG-OS-000327-GPOS-00127
      - SRG-OS-000458-GPOS-00203
      - SRG-OS-000463-GPOS-00207
      - SRG-OS-000468-GPOS-00212
      - SV-205794r569188_rule
      - CCI-000172
      - CCI-002234
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000280 | AUDIT | Windows Server 2019 domain controllers must have a PKI server certificate."
  block:
      - name: "MEDIUM | WN19-DC-000280 | AUDIT | Windows Server 2019 domain controllers must have a PKI server certificate."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 domain controllers must have a PKI server certificate."

      - name: "MEDIUM | WN19-DC-000280 | AUDIT | Windows Server 2019 domain controllers must have a PKI server certificate. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000280'
  when:
      - wn19_dc_000280
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000280
      - V-205645
      - SRG-OS-000066-GPOS-00034
      - SV-205645r569188_rule
      - CCI-000185
      - CAT2

- name: "MEDIUM | WN19-DC-000310 | AUDIT | Windows Server 2019 Active Directory user accounts, including administrators, must be configured to require the use of a Common Access Card (CAC), Personal Identity Verification (PIV)-compliant hardware token, or Alternate Logon Token (ALT) for user authentication."
  block:
      - name: "MEDIUM | WN19-DC-000310 | AUDIT | Windows Server 2019 Active Directory user accounts, including administrators, must be configured to require the use of a Common Access Card (CAC), Personal Identity Verification (PIV)-compliant hardware token, or Alternate Logon Token (ALT) for user authentication."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 Active Directory user accounts, including administrators, must be configured to require the use of a Common Access Card (CAC), Personal Identity Verification (PIV)-compliant hardware token, or Alternate Logon Token (ALT) for user authentication."

      - name: "MEDIUM | WN19-DC-000310 | AUDIT | Windows Server 2019 Active Directory user accounts, including administrators, must be configured to require the use of a Common Access Card (CAC), Personal Identity Verification (PIV)-compliant hardware token, or Alternate Logon Token (ALT) for user authentication. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000310'
  when:
      - wn19_dc_000310
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000310
      - V-205701
      - SRG-OS-000105-GPOS-00052
      - SRG-OS-000106-GPOS-00053
      - SRG-OS-000107-GPOS-00054
      - SRG-OS-000108-GPOS-00055
      - SRG-OS-000375-GPOS-00160
      - SV-205701r569188_rule
      - CCI-000765
      - CCI-000766
      - CCI-000767
      - CCI-000768
      - CCI-001948
      - CAT2

- name: "MEDIUM | WN19-DC-000320 | PATCH | Windows Server 2019 domain controllers must require LDAP access signing."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\NTDS\Parameters
      value: LDAPServerIntegrity
      data: 2
      datatype: dword
  when:
      - wn19_dc_000320
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000320
      - V-205820
      - SRG-OS-000423-GPOS-00187
      - SRG-OS-000424-GPOS-00188
      - SV-205820r569188_rule
      - CCI-002418
      - CCI-002421
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000330 | PATCH | Windows Server 2019 domain controllers must be configured to allow reset of machine account passwords."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: RefusePasswordChange
      data: 0
      datatype: dword
  when:
      - wn19_dc_000330
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000330
      - V-205876
      - SRG-OS-000480-GPOS-00227
      - SV-205876r569188_rule
      - CCI-000366
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000340 | PATCH | Windows Server 2019 Access this computer from the network user right must only be assigned to the Administrators, Authenticated Users, and Enterprise Domain Controllers groups on domain controllers."
  ansible.windows.win_user_right:
      name: SeNetworkLogonRight
      users:
          - Administrators
          - Authenticated Users
          - Enterprise Domain Controllers
      action: set
  when:
      - wn19_dc_000340
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000340
      - V-205665
      - SRG-OS-000080-GPOS-00048
      - SV-205665r569188_rule
      - CCI-000213
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000350 | PATCH | Windows Server 2019 Add workstations to domain user right must only be assigned to the Administrators group on domain controllers."
  ansible.windows.win_user_right:
      name: SeMachineAccountPrivilege
      users: Administrators
      action: set
  when:
      - wn19_dc_000350
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000350
      - V-205744
      - SRG-OS-000324-GPOS-00125
      - SV-205744r569188_rule
      - CCI-002235
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000360 | PATCH | Windows Server 2019 Allow log on through Remote Desktop Services user right must only be assigned to the Administrators group on domain controllers."
  ansible.windows.win_user_right:
      name: SeRemoteInteractiveLogonRight
      users: Administrators
      action: set
  when:
      - wn19_dc_000360
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000360
      - V-205666
      - SRG-OS-000080-GPOS-00048
      - SV-205666r569188_rule
      - CCI-000213
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000370 | PATCH | Windows Server 2019 Deny access to this computer from the network user right on domain controllers must be configured to prevent unauthenticated access."
  ansible.windows.win_user_right:
      name: SeDenyNetworkLogonRight
      users: Guests
      action: set
  when:
      - wn19_dc_000370
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000370
      - V-205667
      - SRG-OS-000080-GPOS-00048
      - SV-205667r569188_rule
      - CCI-000213
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000380 | PATCH | Windows Server 2019 Deny log on as a batch job user right on domain controllers must be configured to prevent unauthenticated access."
  ansible.windows.win_user_right:
      name: SeDenyBatchLogonRight
      users: Guests
      action: set
  when:
      - wn19_dc_000380
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000380
      - V-205668
      - SRG-OS-000080-GPOS-00048
      - SV-205668r569188_rule
      - CCI-000213
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000390 | PATCH | Windows Server 2019 Deny log on as a service user right must be configured to include no accounts or groups (blank) on domain controllers."
  community.windows.win_security_policy:
      section: Privilege Rights
      key: SeDenyServiceLogonRight
      value: ""
  when:
      - wn19_dc_000390
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000390
      - V-205669
      - SRG-OS-000080-GPOS-00048
      - SV-205669r569188_rule
      - CCI-000213
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000400 | PATCH | Windows Server 2019 Deny log on locally user right on domain controllers must be configured to prevent unauthenticated access."
  ansible.windows.win_user_right:
      name: SeDenyInteractiveLogonRight
      users: Guests
      action: set
  when:
      - wn19_dc_000400
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000400
      - V-205670
      - SRG-OS-000080-GPOS-00048
      - SV-205670r569188_rule
      - CCI-000213
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000410 | PATCH | Windows Server 2019 Deny log on through Remote Desktop Services user right on domain controllers must be configured to prevent unauthenticated access."
  ansible.windows.win_user_right:
      name: SeDenyRemoteInteractiveLogonRight
      users: Guests
      action: set
  when:
      - wn19_dc_000410
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000410
      - V-205732
      - SRG-OS-000297-GPOS-00115
      - SV-205732r569188_rule
      - CCI-002314
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000420 | PATCH | Windows Server 2019 Enable computer and user accounts to be trusted for delegation user right must only be assigned to the Administrators group on domain controllers."
  ansible.windows.win_user_right:
      name: SeEnableDelegationPrivilege
      users: Administrators
      action: set
  when:
      - wn19_dc_000420
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000420
      - V-205745
      - SRG-OS-000324-GPOS-00125
      - SV-205745r569188_rule
      - CCI-002235
      - CAT2
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000430 | AUDIT | The password for the krbtgt account on a domain must be reset at least every 180 days."
  block:
      - name: "MEDIUM | WN19-DC-000430 | AUDIT | The password for the krbtgt account on a domain must be reset at least every 180 days."
        ansible.windows.win_shell: "Get-ADUser krbtgt -Property PasswordLastSet | Where-Object {$_.PasswordLastSet -lt ((Get-Date).AddDays(-{{ wn19stig_krbtgt_pass_age }}))} | Select-Object -ExpandProperty PasswordLastSet"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_dc_000430_audit

      - name: "MEDIUM | WN19-DC-000430 | AUDIT | The password for the krbtgt account on a domain must be reset at least every 180 days."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. The password for the krbtgt account on a domain must be reset at least every 180 days."

      - name: "MEDIUM | WN19-DC-000430 | AUDIT | The password for the krbtgt account on a domain must be reset at least every 180 days. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000430'
  when:
      - wn19_dc_000430
      - ansible_windows_domain_role == "Primary domain controller"
      - win2019stig_complexity_high
  tags:
      - WN19-DC-000430
      - V-205877
      - SRG-OS-000480-GPOS-00227
      - SV-205877r857315_rule
      - CCI-000366
      - NeedToTestDomainController
      - CAT2

- name: "MEDIUM | WN19-MS-000020 | PATCH | Windows Server 2019 local administrator accounts must have their privileged token filtered to prevent elevated privileges from being used over the network on domain systems."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: LocalAccountTokenFilterPolicy
      data: 0
      datatype: dword
  when:
      - wn19_ms_000020
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-MS-000020
      - V-205715
      - SRG-OS-000134-GPOS-00068
      - SV-205715r857320_rule
      - CCI-001084
      - CAT2
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000030 | PATCH | Windows Server 2019 local users on domain-joined member servers must not be enumerated."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
      value: EnumerateLocalUsers
      data: 0
      datatype: dword
  when:
      - wn19_ms_000030
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-MS-000030
      - V-205696
      - SRG-OS-000095-GPOS-00049
      - SV-205696r857322_rule
      - CCI-000381
      - CAT2
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000040 | PATCH | Windows Server 2019 must restrict unauthenticated Remote Procedure Call (RPC) clients from connecting to the RPC server on domain-joined member servers and standalone or nondomain-joined systems."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Rpc
      value: RestrictRemoteClients
      data: 1
      datatype: dword
  when:
      - wn19_ms_000040
      - not ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-MS-000040
      - V-205814
      - SRG-OS-000379-GPOS-00164
      - SV-205814r860031_rule
      - CCI-001967
      - CAT2

- name: "MEDIUM | WN19-MS-000050 | PATCH | Windows Server 2019 must limit the caching of logon credentials to four or less on domain-joined member servers."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon
      value: CachedLogonsCount
      data: 4
      datatype: dword
  when:
      - wn19_ms_000050
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-MS-000050
      - V-205906
      - SRG-OS-000480-GPOS-00227
      - SV-205906r857326_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-MS-000060 | PATCH | Windows Server 2019 must restrict remote calls to the Security Account Manager (SAM) to Administrators on domain-joined member servers and standalone or nondomain-joined systems."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
      value: RestrictRemoteSAM
      data: O:BAG:BAD:(A;;RC;;;BA)
      datatype: string
  when:
      - wn19_ms_000060
      - not ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-MS-000060
      - V-205747
      - SRG-OS-000324-GPOS-00125
      - SV-205747r860032_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-MS-000070 | PATCH | Windows Server 2019 Access this computer from the network user right must only be assigned to the Administrators and Authenticated Users groups on domain-joined member servers and standalone systems."
  ansible.windows.win_user_right:
      name: SeNetworkLogonRight
      users:
          - Administrators
          - Authenticated Users
      action: set
  when:
      - wn19_ms_000070
      - not ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-MS-000070
      - V-205671
      - SRG-OS-000080-GPOS-00048
      - SV-205671r857331_rule
      - CCI-000213
      - CAT2

- name: "MEDIUM | WN19-MS-000080 | PATCH | Windows Server 2019 Deny access to this computer from the network user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and local accounts and from unauthenticated access on all systems."
  block:
      - name: "MEDIUM | WN19-MS-000080 | PATCH | Windows Server 2019 Deny access to this computer from the network user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and local accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyNetworkLogonRight
            users:
                - Guests
                - Enterprise Admins
                - Domain Admins
                - Local account
                - Local account and member of Administrators group
            action: set
        when: ansible_windows_domain_role == "Member server"

      - name: "MEDIUM | WN19-MS-000080 | PATCH | Windows Server 2019 Deny access to this computer from the network user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and local accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyNetworkLogonRight
            users: Guests
            action: set
        when: not ansible_windows_domain_member
  when:
      - wn19_ms_000080
      - not ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-MS-000080
      - V-205672
      - SRG-OS-000080-GPOS-00048
      - SV-205672r857333_rule
      - CCI-000213
      - CAT2
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000090 | PATCH | Windows Server 2019 Deny log on as a batch job user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
  block:
      - name: "MEDIUM | WN19-MS-000090 | PATCH | DOMAIN MEMBER | Windows Server 2019 Deny log on as a batch job user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyBatchLogonRight
            users:
                - Enterprise Admins
                - Domain Admins
                - Guests
            action: set
        when: ansible_windows_domain_role == "Member server"

      - name: "MEDIUM | WN19-MS-000090 | PATCH | STAND-ALONE | Windows Server 2019 Deny log on as a batch job user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyBatchLogonRight
            users:
                - Guests
            action: set
        when: not ansible_windows_domain_member
  when:
      - wn19_ms_000090
  tags:
      - WN19-MS-000090
      - V-205673
      - SRG-OS-000080-GPOS-00048
      - SV-205673r857335_rule
      - CCI-000213
      - CAT2
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000100 | PATCH | Windows Server 2019 Deny log on as a service user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts. No other groups or accounts must be assigned this right."
  ansible.windows.win_user_right:
      name: SeDenyServiceLogonRight
      users:
          - Enterprise Admins
          - Domain Admins
      action: set
  when:
      - wn19_ms_000100
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-MS-000100
      - V-205674
      - SRG-OS-000080-GPOS-00048
      - SV-205674r819709_rule
      - CCI-000213
      - CAT2
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000110 | PATCH | Windows Server 2019 Deny log on locally user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
  block:
      - name: "MEDIUM | WN19-MS-000110 | PATCH | DOMAIN MEMBER | Windows Server 2019 Deny log on locally user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyInteractiveLogonRight
            users:
                - Guests
                - Enterprise Admins
                - Domain Admins
            action: set
        when: ansible_windows_domain_role == "Member server"

      - name: "MEDIUM | WN19-MS-000110 | PATCH | STAND-ALONE | Windows Server 2019 Deny log on locally user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyInteractiveLogonRight
            users:
                - Guests
            action: set
        when: not ansible_windows_domain_member
  when:
      - wn19_ms_000110
  tags:
      - WN19-MS-000110
      - V-205675
      - SRG-OS-000080-GPOS-00048
      - SV-205675r857337_rule
      - CCI-000213
      - CAT2
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000120 | PATCH | Windows Server 2019 Deny log on through Remote Desktop Services user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and all local accounts and from unauthenticated access on all systems."
  block:
      - name: "MEDIUM | WN19-MS-000120 | PATCH | DOMAIN MEMBER | Windows Server 2019 Deny log on through Remote Desktop Services user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and all local accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyRemoteInteractiveLogonRight
            users:
                - Guests
                - Local account
                - Enterprise Admins
                - Domain Admins
            action: set
        when: ansible_windows_domain_role == "Member server"

      - name: "MEDIUM | WN19-MS-000120 | PATCH | STAND-ALONE | Windows Server 2019 Deny log on through Remote Desktop Services user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and all local accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyRemoteInteractiveLogonRight
            users:
                - Guests
            action: set
        when: not ansible_windows_domain_member
  when:
      - wn19_ms_000120
  tags:
      - WN19-MS-000120
      - V-205733
      - SRG-OS-000297-GPOS-00115
      - SV-205733r860033_rule
      - CCI-002314
      - CAT2
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000130 | PATCH | Windows Server 2019 Enable computer and user accounts to be trusted for delegation user right must not be assigned to any groups or accounts on domain-joined member servers and standalone or nondomain-joined systems."
  community.windows.win_security_policy:
      section: Privilege Rights
      key: SeEnableDelegationPrivilege
      value: ""
  when:
      - wn19_ms_000130
  tags:
      - WN19-MS-000130
      - V-205748
      - SRG-OS-000324-GPOS-00125
      - SV-205748r860034_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-PK-000010 | AUDIT | Windows Server 2019 must have the DoD Root Certificate Authority (CA) certificates installed in the Trusted Root Store."
  block:
      - name: "MEDIUM | WN19-PK-000010 | AUDIT | Windows Server 2019 must have the DoD Root Certificate Authority (CA) certificates installed in the Trusted Root Store."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\root | Where Subject -Like "*DoD*" | FL Subject, Thumbprint, NotAfter
        changed_when: false
        check_mode: false
        register: wn19_PK_000010_audit
  when:
      - wn19_pk_000010
  tags:
      - WN19-PK-000010
      - V-205648
      - SRG-OS-000066-GPOS-00034
      - SV-205648r819704_rule
      - CCI-000185
      - CCI-002470
      - CAT2

- name: "MEDIUM | WN19-PK-000020 | AUDIT | Windows Server 2019 must have the DoD Interoperability Root Certificate Authority (CA) cross-certificates installed in the Untrusted Certificates Store on unclassified systems."
  block:
      - name: "MEDIUM | WN19-PK-000020 | AUDIT | Windows Server 2019 must have the DoD Interoperability Root Certificate Authority (CA) cross-certificates installed in the Untrusted Certificates Store on unclassified systems."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\disallowed | Where {$_.Issuer -Like "*DoD Interoperability*" -and $_.Subject -Like "*DoD*"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        check_mode: false
        register: wn19_pk_000020_audit

      - name: "MEDIUM | WN19-PK-000020 | AUDIT | Windows Server 2019 must have the DoD Interoperability Root Certificate Authority (CA) cross-certificates installed in the Untrusted Certificates Store on unclassified systems."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must have the DoD Interoperability Root Certificate Authority (CA) cross-certificates installed in the Untrusted Certificates Store on unclassified systems."

      - name: "MEDIUM | WN19-PK-000020 | AUDIT | Windows Server 2019 must have the DoD Interoperability Root Certificate Authority (CA) cross-certificates installed in the Untrusted Certificates Store on unclassified systems. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-PK-000020'
  when:
      - wn19_pk_000020
  tags:
      - WN19-PK-000020
      - V-205649
      - SRG-OS-000066-GPOS-00034
      - SV-205649r857346_rule
      - CCI-000185
      - CCI-002470
      - CAT2

- name: "MEDIUM | WN19-PK-000030 | AUDIT | Windows Server 2019 must have the US DoD CCEB Interoperability Root CA cross-certificates in the Untrusted Certificates Store on unclassified systems."
  block:
      - name: "MEDIUM | WN19-PK-000030 | AUDIT | Windows Server 2019 must have the US DoD CCEB Interoperability Root CA cross-certificates in the Untrusted Certificates Store on unclassified systems."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\disallowed | Where Issuer -Like "*CCEB Interoperability*" | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        check_mode: false
        register: wn19_pk_000030_audit

      - name: "MEDIUM | WN19-PK-000030 | AUDIT | Windows Server 2019 must have the US DoD CCEB Interoperability Root CA cross-certificates in the Untrusted Certificates Store on unclassified systems."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must have the US DoD CCEB Interoperability Root CA cross-certificates in the Untrusted Certificates Store on unclassified systems."

      - name: "MEDIUM | WN19-PK-000030 | AUDIT | Windows Server 2019 must have the US DoD CCEB Interoperability Root CA cross-certificates in the Untrusted Certificates Store on unclassified systems. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-PK-000030'
  when:
      - wn19_pk_000030
  tags:
      - WN19-PK-000030
      - V-205650
      - SRG-OS-000066-GPOS-00034
      - SV-205650r573797_rule
      - CCI-000185
      - CCI-002470
      - CAT2

- name: "MEDIUM | WN19-SO-000010 | PATCH | Windows Server 2019 must have the built-in guest account disabled."
  community.windows.win_security_policy:
      section: System Access
      key: EnableGuestAccount
      value: 0
  when:
      - wn19_so_000010
  tags:
      - WN19-SO-000010
      - V-205709
      - SRG-OS-000121-GPOS-00062
      - SV-205709r569188_rule
      - CCI-000804
      - CAT2

- name: "MEDIUM | WN19-SO-000030 | PATCH | Windows Server 2019 built-in administrator account must be renamed."
  block:
      - name: "MEDIUM | WN19-SO-000030 | AUDIT | Windows Server 2019 built-in administrator account must be renamed. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have not changed the default name for wn19stig_newadministratorname, please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - "'adminchangethis' in wn19stig_newadministratorname"

      - name: "MEDIUM | WN19-SO-000030 | AUDIT | Windows Server 2019 built-in administrator account must be renamed. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-SO-000030'
        when:
            - "'adminchangethis' in wn19stig_newadministratorname"

      - name: "MEDIUM | WN19-SO-000030 | PATCH | Windows Server 2019 built-in administrator account must be renamed. | Set Variable."
        community.windows.win_security_policy:
            section: System Access
            key: NewAdministratorName
            value: "{{ wn19stig_newadministratorname }}"
        when:
            - "'adminchangethis' not in wn19stig_newadministratorname"
  when:
      - wn19_so_000030
  tags:
      - WN19-SO-000030
      - V-205909
      - SRG-OS-000480-GPOS-00227
      - SV-205909r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-SO-000040 | PATCH | Windows Server 2019 built-in guest account must be renamed."
  block:
      - name: "MEDIUM | WN19-SO-000040 | AUDIT | Windows Server 2019 built-in guest account must be renamed. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have not changed the default name for wn19stig_newguestname, please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - "'guestchangethis' in wn19stig_newguestname"

      - name: "MEDIUM | WN19-SO-000040 | AUDIT | Windows Server 2019 built-in guest account must be renamed. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-SO-000040'
        when:
            - "'guestchangethis' in wn19stig_newguestname"

      - name: "MEDIUM | WN19-SO-000040 | PATCH | Windows Server 2019 built-in guest account must be renamed. | Set Variable."
        community.windows.win_security_policy:
            section: System Access
            key: NewGuestName
            value: "{{ wn19stig_newguestname }}"
        when:
            - "'guestchangethis' not in wn19stig_newguestname"
  when:
      - wn19_so_000040
  tags:
      - WN19-SO-000040
      - V-205910
      - SRG-OS-000480-GPOS-00227
      - SV-205910r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-SO-000050 | PATCH | Windows Server 2019 must force audit policy subcategory settings to override audit policy category settings."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\
      value: SCENoApplyLegacyAuditPolicy
      data: 1
      datatype: dword
  when:
      - wn19_so_000050
  tags:
      - WN19-SO-000050
      - V-205644
      - SRG-OS-000062-GPOS-00031
      - SV-205644r569188_rule
      - CCI-000169
      - CAT2

- name: "MEDIUM | WN19-SO-000060 | PATCH | Windows Server 2019 setting Domain member: Digitally encrypt or sign secure channel data (always) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: RequireSignOrSeal
      data: 1
      datatype: dword
  when:
      - wn19_so_000060
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-SO-000060
      - V-205821
      - SRG-OS-000423-GPOS-00187
      - SRG-OS-000424-GPOS-00188
      - SV-205821r569188_rule
      - CCI-002418
      - CCI-002421
      - CAT2
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-SO-000080 | PATCH | Windows Server 2019 setting Domain member: Digitally sign secure channel data (when possible) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: SignSecureChannel
      data: 1
      datatype: dword
  when:
      - wn19_so_000080
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-SO-000080
      - V-205823
      - SRG-OS-000423-GPOS-00187
      - SV-205823r569188_rule
      - CCI-002418
      - CCI-002421
      - CAT2
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-SO-000090 | PATCH | Windows Server 2019 computer account password must not be prevented from being reset."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: DisablePasswordChange
      data: 0
      datatype: dword
  when:
      - wn19_so_000090
  tags:
      - WN19-SO-000090
      - V-205815
      - SRG-OS-000379-GPOS-00164
      - SV-205815r569188_rule
      - CCI-001967
      - CAT2

- name: "MEDIUM | WN19-SO-000100 | PATCH | Windows Server 2019 maximum age for machine account passwords must be configured to 30 days or less."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: MaximumPasswordAge
      data: 30
      datatype: dword
  when:
      - wn19_so_000100
  tags:
      - WN19-SO-000100
      - V-205911
      - SRG-OS-000480-GPOS-00227
      - SV-205911r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-SO-000110 | PATCH | Windows Server 2019 must be configured to require a strong session key."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: RequireStrongKey
      data: 1
      datatype: dword
  when:
      - wn19_so_000110
  tags:
      - WN19-SO-000110
      - V-205824
      - SRG-OS-000423-GPOS-00187
      - SV-205824r569188_rule
      - CCI-002418
      - CCI-002421
      - CAT2

- name: "MEDIUM | WN19-SO-000120 | PATCH | Windows Server 2019 machine inactivity limit must be set to 15 minutes or less, locking the system with the screen saver."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: InactivityTimeoutSecs
      data: 900
      datatype: dword
  when:
      - wn19_so_000120
  tags:
      - WN19-SO-000120
      - V-205633
      - SRG-OS-000028-GPOS-00009
      - SV-205633r569188_rule
      - CCI-000056
      - CCI-000057
      - CCI-000060
      - CAT2

- name: "MEDIUM | WN19-SO-000130 | PATCH | Windows Server 2019 required legal notice must be configured to display before console logon."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: LegalNoticeText
      data: "{{ wn19stig_legalnoticetext }}"
      datatype: string
  when:
      - wn19_so_000130
  tags:
      - WN19-SO-000130
      - V-205631
      - SRG-OS-000023-GPOS-00006
      - SV-205631r569188_rule
      - CCI-000048
      - CCI-000050
      - CCI-001384
      - CCI-001385
      - CCI-001386
      - CCI-001387
      - CCI-001388
      - CAT2

- name: "MEDIUM | WN19-SO-000150 | PATCH | Windows Server 2019 Smart Card removal option must be configured to Force Logoff or Lock Workstation."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon
      value: scremoveoption
      data: 1
      datatype: string
  when:
      - wn19_so_000150
  tags:
      - WN19-SO-000150
      - V-205912
      - SRG-OS-000480-GPOS-00227
      - SV-205912r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-SO-000160 | PATCH | Windows Server 2019 etting Microsoft network client: Digitally sign communications (always) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters
      value: RequireSecuritySignature
      data: 1
      datatype: dword
  when:
      - wn19_so_000160
  tags:
      - WN19-SO-000160
      - V-205825
      - SRG-OS-000423-GPOS-00187
      - SRG-OS-000424-GPOS-00188
      - SV-205825r569188_rule
      - CCI-002418
      - CCI-002421
      - CAT2

- name: "MEDIUM | WN19-SO-000170 | PATCH | Windows Server 2019 setting Microsoft network client: Digitally sign communications (if server agrees) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters
      value: EnableSecuritySignature
      data: 1
      datatype: dword
  when:
      - wn19_so_000170
  tags:
      - WN19-SO-000170
      - V-205826
      - SRG-OS-000423-GPOS-00187
      - SRG-OS-000424-GPOS-00188
      - SV-205826r569188_rule
      - CCI-002421
      - CCI-002418
      - CAT2

- name: "MEDIUM | WN19-SO-000180 | PATCH | Windows Server 2019 unencrypted passwords must not be sent to third-party Server Message Block (SMB) servers."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters
      value: EnablePlainTextPassword
      data: 0
      datatype: dword
  when:
      - wn19_so_000180
  tags:
      - WN19-SO-000180
      - V-205655
      - SRG-OS-000074-GPOS-00042
      - SV-205655r569188_rule
      - CCI-000197
      - CAT2

- name: "MEDIUM | WN19-SO-000190 | PATCH | Windows Server 2019 setting Microsoft network server: Digitally sign communications (always) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters
      value: RequireSecuritySignature
      data: 1
      datatype: dword
  when:
      - wn19_so_000190
  tags:
      - WN19-SO-000190
      - V-205827
      - SRG-OS-000423-GPOS-00187
      - SV-205827r569188_rule
      - CCI-002418
      - CCI-002421
      - CAT2

- name: "MEDIUM | WN19-SO-000200 | PATCH | Windows Server 2019 setting Microsoft network server: Digitally sign communications (if client agrees) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters
      value: EnableSecuritySignature
      data: 1
      datatype: dword
  when:
      - wn19_so_000200
  tags:
      - WN19-SO-000200
      - V-205828
      - SRG-OS-000423-GPOS-00187
      - SV-205828r569188_rule
      - CCI-002418
      - CCI-002421
      - CAT2

- name: "MEDIUM | WN19-SO-000240 | PATCH | Windows Server 2019 must be configured to prevent anonymous users from having the same permissions as the Everyone group."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
      value: EveryoneIncludesAnonymous
      data: 0
      datatype: dword
  when:
      - wn19_so_000240
  tags:
      - WN19-SO-000240
      - V-205915
      - SRG-OS-000480-GPOS-00227
      - SV-205915r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-SO-000260 | PATCH | Windows Server 2019 services using Local System that use Negotiate when reverting to NTLM authentication must use the computer identity instead of authenticating anonymously."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
      value: UseMachineId
      data: 1
      datatype: dword
  when:
      - wn19_so_000260
  tags:
      - WN19-SO-000260
      - V-205916
      - SRG-OS-000480-GPOS-00227
      - SV-205916r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-SO-000270 | PATCH | Windows Server 2019 must prevent NTLM from falling back to a Null session."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0
      value: allownullsessionfallback
      data: 0
      datatype: dword
  when:
      - wn19_so_000270
  tags:
      - WN19-SO-000270
      - V-205917
      - SRG-OS-000480-GPOS-00227
      - SV-205917r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-SO-000280 | PATCH | Windows Server 2019 Must prevent PKU2U authentication using online identities."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\pku2u
      value: AllowOnlineID
      data: 0
      datatype: dword
  when:
      - wn19_so_000280
  tags:
      - WN19-SO-000280
      - V-205918
      - SRG-OS-000480-GPOS-00227
      - SV-205918r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-SO-000290 | PATCH | Windows Server 2019 Kerberos encryption types must be configured to prevent the use of DES and RC4 encryption suites."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Kerberos\Parameters
      value: SupportedEncryptionTypes
      data: 2147483640
      datatype: dword
  when:
      - wn19_so_000290
  tags:
      - WN19-SO-000290
      - V-205708
      - SRG-OS-000120-GPOS-00061
      - WN19-SO-000290
      - CCI-000803
      - CAT2

- name: "MEDIUM | WN19-SO-000320 | PATCH | Windows Server 2019 must be configured to at least negotiate signing for LDAP client signing."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LDAP
      value: LDAPClientIntegrity
      data: 1
      datatype: dword
  when:
      - wn19_so_000320
  tags:
      - WN19-SO-000320
      - V-205920
      - SRG-OS-000480-GPOS-00227
      - SV-205920r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-SO-000330 | PATCH | Windows Server 2019 session security for NTLM SSP-based clients must be configured to require NTLMv2 session security and 128-bit encryption."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0
      value: NTLMMinClientSec
      data: 537395200
      datatype: dword
  when:
      - wn19_so_000330
  tags:
      - WN19-SO-000330
      - V-205921
      - SRG-OS-000480-GPOS-00227
      - SV-205921r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-SO-000340 | PATCH | Windows Server 2019 session security for NTLM SSP-based servers must be configured to require NTLMv2 session security and 128-bit encryption."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0
      value: NTLMMinServerSec
      data: 537395200
      datatype: dword
  when:
      - wn19_so_000340
  tags:
      - WN19-SO-000340
      - V-205922
      - SRG-OS-000480-GPOS-00227
      - SV-205922r569188_rule
      - CCI-000366
      - CAT2

- name: "MEDIUM | WN19-SO-000350 | PATCH | Windows Server 2019 users must be required to enter a password to access private keys stored on the computer."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Cryptography
      value: ForceKeyProtection
      data: 2
      datatype: dword
  when:
      - wn19_so_000350
  tags:
      - WN19-SO-000350
      - V-205651
      - SRG-OS-000067-GPOS-00035
      - SV-205651r569188_rule
      - CCI-000186
      - CAT2

- name: "MEDIUM | WN19-SO-000360 | PATCH | Windows Server 2019 must be configured to use FIPS-compliant algorithms for encryption, hashing, and signing."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager
      value: ProtectionMode
      data: 1
      datatype: dword
  when:
      - wn19_so_000360
  tags:
      - WN19-SO-000360
      - V-205842
      - SRG-OS-000480-GPOS-00227
      - SV-205842r569188_rule
      - CCI-002450
      - CAT2

- name: "MEDIUM | WN19-SO-000380 | PATCH | Windows Server 2019 User Account Control approval mode for the built-in Administrator must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: FilterAdministratorToken
      data: 1
      datatype: dword
  when:
      - wn19_so_000380
  tags:
      - WN19-SO-000380
      - V-205811
      - SRG-OS-000373-GPOS-00157
      - SV-205811r569188_rule
      - CCI-002038
      - CAT2
      # - exclusions for server core? think its NA there

- name: "MEDIUM | WN19-SO-000390 | PATCH | Windows Server 2019 UIAccess applications must not be allowed to prompt for elevation without using the secure desktop."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableUIADesktopToggle
      data: 0
      datatype: dword
  when:
      - wn19_so_000390
  tags:
      - WN19-SO-000390
      - V-205716
      - SRG-OS-000134-GPOS-00068
      - SV-205716r569188_rule
      - CCI-001084
      - CAT2

- name: "MEDIUM | WN19-SO-000400 | PATCH | Windows Server 2019 User Account Control must, at a minimum, prompt administrators for consent on the secure desktop."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: ConsentPromptBehaviorAdmin
      data: 2
      datatype: dword
  when:
      - wn19_so_000400
  tags:
      - WN19-SO-000400
      - V-205717
      - SRG-OS-000134-GPOS-00068
      - SV-205717r569188_rule
      - CCI-001084
      - CAT2

- name: "MEDIUM | WN19-SO-000410 | PATCH | Windows Server 2019 User Account Control must automatically deny standard user requests for elevation."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      state: present
      value: ConsentPromptBehaviorUser
      data: 0
      datatype: dword
  when:
      - wn19_so_000410
  tags:
      - WN19-SO-000410
      - V-205812
      - SRG-OS-000373-GPOS-00157
      - SV-205812r569188_rule
      - CCI-002038
      - CAT2

- name: "MEDIUM | WN19-SO-000420 | PATCH | Windows Server 2019 User Account Control must be configured to detect application installations and prompt for elevation."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableInstallerDetection
      data: 1
      datatype: dword
  when:
      - wn19_so_000420
  tags:
      - WN19-SO-000420
      - V-205718
      - SRG-OS-000134-GPOS-00068
      - SV-205718r569188_rule
      - CCI-001084
      - CAT2

- name: "MEDIUM | WN19-SO-000430 | PATCH | Windows Server 2019 User Account Control (UAC) must only elevate UIAccess applications that are installed in secure locations."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableSecureUIAPaths
      data: 1
      datatype: dword
  when:
      - wn19_so_000430
  tags:
      - WN19-SO-000430
      - V-205719
      - SRG-OS-000134-GPOS-00068
      - SV-205719r569188_rule
      - CCI-001084
      - CAT2

- name: "MEDIUM | WN19-SO-000440 | PATCH | Windows Server 2019 User Account Control must run all administrators in Admin Approval Mode, enabling UAC."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableLUA
      data: 1
      datatype: dword
  when:
      - wn19_so_000440
  tags:
      - WN19-SO-000440
      - V-205813
      - SRG-OS-000373-GPOS-00157
      - SV-205813r569188_rule
      - CCI-002038
      - CAT2

- name: "MEDIUM | WN19-SO-000450 | PATCH | Windows Server 2019 User Account Control (UAC) must virtualize file and registry write failures to per-user locations."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableVirtualization
      data: 1
      datatype: dword
  when:
      - wn19_so_000450
  tags:
      - WN19-SO-000450
      - V-205720
      - SRG-OS-000134-GPOS-00068
      - SV-205720r569188_rule
      - CCI-001084
      - CAT2

- name: "MEDIUM | WN19-UC-000010 | PATCH | Windows Server 2019 must preserve zone information when saving attachments."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Attachments
      value: SaveZoneInformation
      data: 2
      datatype: dword
  when:
      - wn19_uc_000010
  tags:
      - WN19-UC-000010
      - V-205924
      - SRG-OS-000480-GPOS-00227
      - SV-205924r569188_rule
      - CCI-000366
      - CAT2

# [WARNING]: Using this module to edit rights and privileges is error-prone, use the win_user_right module instead
- name: "MEDIUM | WN19-UR-000010 | PATCH | Windows Server 2019 Access Credential Manager as a trusted caller user right must not be assigned to any groups or accounts."
  community.windows.win_security_policy:
      section: Privilege Rights
      key: SeTrustedCredManAccessPrivilege
      value: ""
  when:
      - wn19_ur_000010
  tags:
      - WN19-UR-000010
      - V-205749
      - SRG-OS-000324-GPOS-00125
      - SV-205749r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000030 | PATCH | Windows Server 2019 Allow log on locally user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeInteractiveLogonRight
      users: Administrators
      action: set
  when:
      - wn19_ur_000030
  tags:
      - WN19-UR-000030
      - V-205676
      - SRG-OS-000080-GPOS-00048
      - SV-205676r569188_rule
      - CCI-000213
      - CAT2

- name: "MEDIUM | WN19-UR-000040 | PATCH | Windows Server 2019 Back up files and directories user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeBackupPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000040
  tags:
      - WN19-UR-000040
      - V-205751
      - SRG-OS-000324-GPOS-00125
      - SV-205751r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000050 | PATCH | Windows Server 2019 Create a pagefile user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeCreatePagefilePrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000050
  tags:
      - WN19-UR-000050
      - V-205752
      - SRG-OS-000324-GPOS-00125
      - SV-205752r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000070 | PATCH |  Windows Server 2019 Create global objects user right must only be assigned to Administrators, Service, Local Service, and Network Service."
  ansible.windows.win_user_right:
      name: SeCreateGlobalPrivilege
      users:
          - Administrators
          - Service
          - "Local Service"
          - Network Service
      action: set
  when:
      - wn19_ur_000070
  tags:
      - WN19-UR-000070
      - V-205754
      - SRG-OS-000324-GPOS-00125
      - SV-205754r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000080 | PATCH | Windows Server 2019 Create permanent shared objects user right must not be assigned to any groups or accounts."
  community.windows.win_security_policy:
      section: Privilege Rights
      key: SeCreatePermanentPrivilege
      value: ""
  when:
      - wn19_ur_000080
  tags:
      - WN19-UR-000080
      - V-205755
      - SRG-OS-000324-GPOS-00125
      - SV-205755r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000090 | PATCH | Windows Server 2019 Create symbolic links user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeCreateSymbolicLinkPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000090
  tags:
      - WN19-UR-000090
      - V-205756
      - SRG-OS-000324-GPOS-00125
      - SV-205756r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000110 | PATCH | Windows Server 2019 Force shutdown from a remote system user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeRemoteShutdownPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000110
  tags:
      - WN19-UR-000110
      - V-205758
      - SRG-OS-000324-GPOS-00125
      - SV-205758r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000120 | PATCH | Windows Server 2019 Generate security audits user right must only be assigned to Local Service and Network Service."
  ansible.windows.win_user_right:
      name: SeAuditPrivilege
      users:
          - Local Service
          - Network Service
      action: set
  when:
      - wn19_ur_000120
  tags:
      - WN19-UR-000120
      - V-205759
      - SRG-OS-000324-GPOS-00125
      - SV-205759r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000130 | PATCH | Windows Server 2019 Impersonate a client after authentication user right must only be assigned to Administrators, Service, Local Service, and Network Service."
  ansible.windows.win_user_right:
      name: SeImpersonatePrivilege
      users:
          - Administrators
          - Service
          - Local Service
          - Network Service
      action: set
  when:
      - wn19_ur_000130
  tags:
      - WN19-UR-000130
      - V-205760
      - SRG-OS-000324-GPOS-00125
      - SV-205760r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000140 | PATCH | Windows Server 2019 Increase scheduling priority: user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeIncreaseBasePriorityPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000140
  tags:
      - WN19-UR-000140
      - V-205761
      - SRG-OS-000324-GPOS-00125
      - SV-205761r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000150 | PATCH | Windows Server 2019 Load and unload device drivers user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeLoadDriverPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000150
  tags:
      - WN19-UR-000150
      - V-205762
      - SRG-OS-000324-GPOS-00125
      - SV-205762r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000160 | PATCH | Windows Server 2019 Lock pages in memory user right must not be assigned to any groups or accounts."
  community.windows.win_security_policy:
      section: Privilege Rights
      key: SeLockMemoryPrivilege
      value: ""
  when:
      - wn19_ur_000160
  tags:
      - WN19-UR-000160
      - V-205763
      - SRG-OS-000324-GPOS-00125
      - SV-205763r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000170 | PATCH | Windows Server 2019 Manage auditing and security log user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeSecurityPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000170
  tags:
      - WN19-UR-000170
      - V-205643
      - SRG-OS-000057-GPOS-00027
      - SV-205643r569188_rule
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - CCI-000171
      - CCI-001914
      - CAT2

- name: "MEDIUM | WN19-UR-000180 | PATCH | Windows Server 2019 Modify firmware environment values user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeSystemEnvironmentPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000180
  tags:
      - WN19-UR-000180
      - V-205764
      - SRG-OS-000324-GPOS-00125
      - SV-205764r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000190 | PATCH | Windows Server 2019 Perform volume maintenance tasks user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeManageVolumePrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000190
  tags:
      - WN19-UR-000190
      - V-205765
      - SRG-OS-000324-GPOS-00125
      - SV-205765r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000200 | PATCH | Windows Server 2019 Profile single process user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeProfileSingleProcessPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000200
  tags:
      - WN19-UR-000200
      - V-205766
      - SRG-OS-000324-GPOS-00125
      - SV-205766r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000210 | PATCH | Windows Server 2019 Restore files and directories user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeRestorePrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000210
  tags:
      - WN19-UR-000210
      - V-205767
      - SRG-OS-000324-GPOS-00125
      - SV-205767r569188_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000220 | PATCH | Windows Server 2019 Take ownership of files or other objects user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeTakeOwnershipPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000220
  tags:
      - WN19-UR-000220
      - V-205768
      - SRG-OS-000324-GPOS-00125
      - SV-205768r569188_rule
      - CCI-002235
      - CAT2
