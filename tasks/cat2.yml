---

# enumerating on DC is different than standalone
- name: "MEDIUM | WN19-00-000020 | AUDIT | Windows Server 2019 passwords for the built-in Administrator account must be changed at least every {{ wn19stig_pass_age_administrator }} days."
  block:
      - name: "MEDIUM | WN19-00-000020 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 passwords for the built-in Administrator account must be changed at least every {{ wn19stig_pass_age_administrator }} days."
        ansible.windows.win_shell: "Get-ADUser -Filter * -Property PasswordLastSet | Where SID -like S-1-5-21-*-500 | Where-Object {$_.PasswordLastSet -lt ((Get-Date).AddDays(-{{ wn19stig_pass_age_administrator }}))} | Select Name,PasswordLastSet"
        # win_shell: "Get-ADUser krbtgt -Property PasswordLastSet | Where-Object {$_.PasswordLastSet -lt ((Get-Date).AddDays(-{{ wn19stig_krbtgt_pass_age }}))} | Select-Object -ExpandProperty PasswordLastSet"
        changed_when: false
        failed_when: false
        register: wn19_00_000020_audit_dc
        when: "'controller' in ansible_windows_domain_role"

      - name: "MEDIUM | WN19-00-000020 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 passwords for the built-in Administrator account must be changed at least every {{ wn19stig_pass_age_administrator }} days."
        ansible.builtin.debug:
            msg:
                - "The following account appears to be the default admin account and the password does not meet the control specific age of {{ wn19stig_pass_age_administrator }}"
                - "{{ wn19_00_000020_audit_dc.stdout.split('\n') }}"
        when:
            - not wn19_00_000020_audit_dc is skipped
            - wn19_00_000020_audit_dc.stdout != ""
            - wn19stig_pass_age_administrator <= 60

      - name: "MEDIUM | WN19-00-000020 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 passwords for the built-in Administrator account must be changed at least every {{ wn19stig_pass_age_administrator }} days."
        ansible.windows.win_shell: "Get-Localuser -Name * | Select * | Where SID -like S-1-5-21-*-500 | Where-Object {$_.PasswordLastSet -lt ((Get-Date).AddDays(-{{ wn19stig_pass_age_administrator }}))} | Select Name,PasswordLastSet"
        changed_when: false
        failed_when: false
        register: wn19_00_000020_audit_dm_sa

      - name: "MEDIUM | WN19-00-000020 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 passwords for the built-in Administrator account must be changed at least every {{ wn19stig_pass_age_administrator }} days."
        ansible.builtin.debug:
            msg:
                - "The following account appears to be the default admin account and the password does not meet the control specific age of {{ wn19stig_pass_age_administrator }}"
                - "{{ wn19_00_000020_audit_dm_sa.stdout.split('\n') }}"
        when:
            - wn19_00_000020_audit_dm_sa is defined
            - wn19_00_000020_audit_dm_sa.stdout != ""
            - wn19stig_pass_age_administrator <= 60

      - name: Warning Message
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of days set for wn19stig_pass_age_administrator please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when: wn19stig_pass_age_administrator > 60

      - name: "MEDIUM | WN19-00-000020 | AUDIT | Windows Server 2019 passwords for the built-in Administrator account must be changed at least every {{ wn19stig_pass_age_administrator }} days. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000020'
        when:
            - not wn19_00_000020_audit_dc is skipped and wn19_00_000020_audit_dc.stdout != "" and - wn19stig_pass_age_administrator <= 60 or
              wn19_00_000020_audit_dm_sa is defined and wn19_00_000020_audit_dm_sa.stdout != "" and - wn19stig_pass_age_administrator <= 60 or
              wn19stig_pass_age_administrator > 60
  when:
      - wn19_00_000020
  tags:
      - WN19-00-000020
      - CAT2
      - CCI-000199
      - SRG-OS-000076-GPOS-00044
      - SV-205657r916199_rule
      - V-205657
      - NeedToTestDomainController
      - audit

- name: "MEDIUM | WN19-00-000040 | AUDIT | Windows Server 2019 members of the Backup Operators group must have separate accounts for backup duties and normal operational tasks."
  block:
      - name: "MEDIUM | WN19-00-000040 | AUDIT - STAND-ALONE AND MEMBER SERVERS | Windows Server 2019 members of the Backup Operators group must have separate accounts for backup duties and normal operational tasks."
        ansible.windows.win_shell: Get-LocalGroupMember -Name 'Backup Operators'
        changed_when: false
        failed_when: false
        register: wn19_00_000040_audit

      - name: "MEDIUM | WN19-00-000040 | AUDIT - STAND-ALONE AND MEMBER SERVERS | Windows Server 2019 members of the Backup Operators group must have separate accounts for backup duties and normal operational tasks."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. The accounts listed are members of the Backup Operators group."
                - "Please verify these accounts have separate accounts for backup duties and normal operational tasks."
                - "{{ wn19_00_000040_audit.stdout.split('\n') }}"
        when:
            - wn19_00_000040_audit is not skipped
            - wn19_00_000040_audit.stdout != ""

      - name: "MEDIUM | WN19-00-000040 | AUDIT - STAND-ALONE AND MEMBER SERVERS | Windows Server 2019 members of the Backup Operators group must have separate accounts for backup duties and normal operational tasks. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000040'
        when:
            - wn19_00_000040_audit is not skipped
            - wn19_00_000040_audit.stdout != ""
  when:
      - wn19_00_000040
      - not ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-00-000040
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205846r569188_rule
      - V-205846
      - audit

- name: "MEDIUM | WN19-00-000050 | AUDIT | Windows Server 2019 manually managed application account passwords must be at least 15 characters in length."
  block:
      - name: "MEDIUM | WN19-00-000050 | AUDIT | Windows Server 2019 manually managed application account passwords must be at least 15 characters in length. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 manually managed application account passwords must be at least 15 characters in length."

      - name: "MEDIUM | WN19-00-000050 | AUDIT | Windows Server 2019 manually managed application account passwords must be at least 15 characters in length. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000050'
  when:
      - wn19_00_000050
  tags:
      - WN19-00-000050
      - V-205661
      - SRG-OS-000078-GPOS-00046
      - SV-205661r569188_rule
      - CCI-000205
      - CAT2

- name: "MEDIUM | WN19-00-000060 | AUDIT | Windows Server 2019 manually managed application account passwords must be changed at least annually or when a system administrator with knowledge of the password leaves the organization."
  block:
      - name: "MEDIUM | WN19-00-000060 | AUDIT | Windows Server 2019 manually managed application account passwords must be changed at least annually or when a system administrator with knowledge of the password leaves the organization. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 manually managed application account passwords must be changed at least annually or when a system administrator with knowledge of the password leaves the organization."

      - name: "MEDIUM | WN19-00-000060 | AUDIT | Windows Server 2019 manually managed application account passwords must be changed at least annually or when a system administrator with knowledge of the password leaves the organization. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000060'
  when:
      - wn19_00_000060
  tags:
      - WN19-00-000060
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205847r857288_rule
      - V-205847
# how to make this list?

- name: "MEDIUM | WN19-00-000070 | AUDIT | Windows Server 2019 shared user accounts must not be permitted."
  block:
      - name: "MEDIUM | WN19-00-000070  | Windows Server 2019 shared user accounts must not be permitted. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 shared user accounts must not be permitted."

      - name: "MEDIUM | WN19-00-000070 | AUDIT | Windows Server 2019 shared user accounts must not be permitted. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000070'
  when:
      - wn19_00_000070
  tags:
      - WN19-00-000070
      - CAT2
      - CCI-000764
      - SRG-OS-000104-GPOS-00051
      - SV-205699r569188_rule
      - V-205699

- name: "MEDIUM | WN19-00-000080 | AUDIT | Windows Server 2019 must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs."
  block:
      - name: "MEDIUM | WN19-00-000080 | AUDIT | Windows Server 2019 must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs."

      - name: "MEDIUM | WN19-00-000080 | AUDIT | Windows Server 2019 must employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000080'
  when:
      - wn19_00_000080
  tags:
      - WN19-00-000080
      - CAT2
      - CCI-001774
      - SRG-OS-000370-GPOS-00155
      - SV-205807r890520_rule
      - V-205807
# Get-AppLockerpolicy -Effective

# Current hardware and virtual environments may not support virtualization-based security features, including Credential Guard, due to specific supporting requirements including a TPM, UEFI with Secure Boot, and the capability to run the Hyper-V feature within a virtual machine.
- name: "MEDIUM | WN19-00-000090 | AUDIT | Windows Server 2019 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use."
  block:
      - name: "MEDIUM | WN19-00-000090 | AUDIT | Windows Server 2019 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Get TPM Settings"
        ansible.windows.win_command: wmic /namespace:\\root\cimv2\security\microsofttpm path win32_tpm get * /format:textvaluelist.xsl
        changed_when: false
        failed_when: false
        register: wn19_00_000090_tpm_status

      - name: "MEDIUM | WN19-00-000090 | AUDIT | Windows Server 2019 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Running Instances Check."
        ansible.builtin.debug:
            msg:
                - "Warning!! Please confirm TPM status is Ready for use, there are no instances currently running."
        when: "'No Instance' in wn19_00_000090_tpm_status.stderr_lines | string"

      - name: "MEDIUM | WN19-00-000090 | AUDIT | Windows Server 2019 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Full TPM Check."
        ansible.builtin.debug:
            msg:
                - "Warning!! Please confirm TPM status is Ready for use. Current settings do not meet STIG requirements."
        when:
            - "'No Instance' not in wn19_00_000090_tpm_status.stderr_lines | string"
            - "'IsActivated_InitialValue=TRUE' in wn19_00_000090_tpm_status.stderr_lines | string"
            - "'IsEnabled_InitialValue=TRUE' in wn19_00_000090_tpm_status.stderr_lines | string"
            - "'IsOwned_InitialValue=TRUE' in wn19_00_000090_tpm_status.stderr_lines | string"
            - "'SpecVersion=2' or 'SpecVersion=1.2' in wn19_00_000090_tpm_status.stderr_lines | string"

      - name: "MEDIUM | WN19-00-000090 | AUDIT | Windows Server 2019 domain-joined systems must have a Trusted Platform Module (TPM) enabled and ready for use. | Warning Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000090'
        when:
            - "'No Instance' not in wn19_00_000090_tpm_status.stderr_lines | string"
            - "'IsActivated_InitialValue=TRUE' in wn19_00_000090_tpm_status.stderr_lines | string"
            - "'IsEnabled_InitialValue=TRUE' in wn19_00_000090_tpm_status.stderr_lines | string"
            - "'IsOwned_InitialValue=TRUE' in wn19_00_000090_tpm_status.stderr_lines | string"
            - "'SpecVersion=2.0' or 'SpecVersion=1.2' in wn19_00_000090_tpm_status.stderr_lines | string or
              'No Instance' in wn19_00_000090_tpm_status.stderr_lines | string"
  when:
      - wn19_00_000090
      - ansible_windows_domain_member
  tags:
      - WN19-00-000090
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205848r902429_rule
      - V-205848
# wmic /namespace:\\root\cimv2\security\microsofttpm path win32_tpm get *
# if not enabled see "No Instance(s) Available." ?

- name: "MEDIUM | WN19-00-000120 | AUDIT | Windows Server 2019 must have a host-based intrusion detection or prevention system."
  block:
      - name: "MEDIUM | WN19-00-000120 | AUDIT | Windows Server 2019 must have a host-based intrusion detection or prevention system. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must have a host-based intrusion detection or prevention system."

      - name: "MEDIUM | WN19-00-000120 | AUDIT | Windows Server 2019 must have a host-based intrusion detection or prevention system. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000120'
  when:
      - wn19_00_000120
  tags:
      - WN19-00-000120
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205851r793214_rule
      - V-205851

- name: "MEDIUM | WN19-00-000140 | AUDIT | Windows Server 2019 permissions for the system drive root directory usually C:\ must conform to minimum requirements."
  block:
      - name: "MEDIUM | WN19-00-000140 | AUDIT | Windows Server 2019 permissions for the system drive root directory usually C:\ must conform to minimum requirements. | Obtain icacls for Program Files."
        ansible.windows.win_shell: icacls "c:\program files"
        changed_when: false
        failed_when: false
        register: wn19_00_000140_drive_root_audit

      - name: "MEDIUM | WN19-00-000140 | AUDIT | Windows Server 2019 permissions for the system drive root directory usually C:\ must conform to minimum requirements. | Manual Audit icacls for Program Files."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task to audit. Windows Server 2019 icacls program needs to meet"
                - "the STIG requirements. Please check the report below and compare to the STIG requirements."
                - "{{ wn19_00_000140_drive_root_audit.stdout_lines }}"

      - name: "MEDIUM | WN19-00-000140 | AUDIT | Windows Server 2019 permissions for the system drive root directory usually C:\ must conform to minimum requirements. | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000140'
  when:
      - wn19_00_000140
  tags:
      - WN19-00-000140
      - CAT2
      - CCI-002165
      - SRG-OS-000312-GPOS-00122
      - SV-205734r852432_rule
      - V-205734

- name: "MEDIUM | WN19-00-000150 | AUDIT | Windows Server 2019 permissions for program file directories must conform to minimum requirements."
  block:
      - name: "MEDIUM | WN19-00-000150 | AUDIT | Windows Server 2019 permissions for program file directories must conform to minimum requirements. | Obtain icacls for Program Files."
        ansible.windows.win_shell: icacls "c:\program files"
        changed_when: false
        failed_when: false
        register: wn19_00_000150_program_files_audit

      - name: "MEDIUM | WN19-00-000150 | AUDIT | Windows Server 2019 permissions for program file directories must conform to minimum requirements. | Manual Audit icacls for Program Files."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task to audit. Windows Server 2019 icacls program needs to meet"
                - "the STIG requirements. Please check the report below and compare to the STIG requirements."
                - "{{ wn19_00_000150_program_files_audit.stdout_lines }}"

      - name: "MEDIUM | WN19-00-000150 | AUDIT | Windows Server 2019 permissions for program file directories must conform to minimum requirements. | Obtain icacls for Program Files x86"
        ansible.windows.win_shell: icacls "c:\program files (x86)"
        changed_when: false
        failed_when: false
        register: wn19_00_000150_program_files_86_audit

      - name: "MEDIUM | WN19-00-000150 | AUDIT | Windows Server 2019 permissions for program file directories must conform to minimum requirements. | Manual Audit icacls for Program Files x86."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task to audit. Windows Server 2019 icacls program files x86 needs to meet"
                - "the STIG requirements. Please check the report below and compare to the STIG requirements."
                - "{{ wn19_00_000150_program_files_86_audit.stdout_lines }}"

      - name: "MEDIUM | WN19-00-000150 | AUDIT | Windows Server 2019 permissions for program file directories must conform to minimum requirements. | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000150'
  when:
      - wn19_00_000150
  tags:
      - WN19-00-000150
      - CAT2
      - CCI-002165
      - SRG-OS-000312-GPOS-00122
      - SV-205735r852433_rule
      - V-205735

- name: "MEDIUM | WN19-00-000160 | AUDIT | Windows Server 2019 permissions for the Windows installation directory must conform to minimum requirements."
  block:
      - name: "MEDIUM | WN19-00-000160 | AUDIT | Windows Server 2019 permissions for the Windows installation directory must conform to minimum requirements. | Obtain icacls for Windows Directory."
        ansible.windows.win_shell: icacls "c:\windows"
        changed_when: false
        failed_when: false
        register: wn19_00_000160_windows_dir_audit

      - name: "MEDIUM | WN19-00-000160 | AUDIT | Windows Server 2019 permissions for the Windows installation directory must conform to minimum requirements. | Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task to audit. Windows Server 2019 permissions for the Windows installation directory needs to meet"
                - "the STIG requirements. Please check the report below and compare to the STIG requirements."
                - "{{ wn19_00_000160_windows_dir_audit.stdout_lines }}"

      - name: "MEDIUM | WN19-00-000160 | AUDIT | Windows Server 2019 permissions for the Windows installation directory must conform to minimum requirements. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000160'
  when:
      - wn19_00_000160
  tags:
      - WN19-00-000160
      - CAT2
      - CCI-002165
      - SRG-OS-000312-GPOS-00122
      - SV-205736r852434_rule
      - V-205736

- name: "MEDIUM | WN19-00-000170 | AUDIT | Windows Server 2019 default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained."
  block:
      - name: "MEDIUM | WN19-00-000170 | AUDIT | Windows Server 2019 default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained."

      - name: "MEDIUM | WN19-00-000170 | AUDIT | Windows Server 2019 default permissions for the HKEY_LOCAL_MACHINE registry hive must be maintained. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000170'
  when:
      - wn19_00_000170
  tags:
      - WN19-00-000170
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205737r877392_rule
      - V-205737
# Get-Acl -Path HKLM:\"Software" | select-object $Access | Format-List * Possible Command To Use *

- name: "MEDIUM | WN19-00-000190 | AUDIT | Windows Server 2019 outdated or unused accounts must be removed from the system or disabled."
  block:
      - name: "MEDIUM | WN19-00-000190 | AUDIT - DOMAIN CONTROLLERS | Windows Server 2019 outdated or unused accounts must be removed from the system or disabled. | Audit System."
        ansible.windows.win_shell: Search-ADAccount -AccountInactive -UsersOnly -TimeSpan 35.00:00:00
        changed_when: false
        failed_when: false
        register: wn19_00_000190_account_audit_dc
        when: ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000190 | AUDIT - DOMAIN CONTROLLERS | Windows Server 2019 outdated or unused accounts must be removed from the system or disabled. | Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Outdated or unused accounts must be removed from"
                - "the Windows Server 2019 system or disabled."
                - "Accounts to exclude are the following:"
                - "Built-in administrator account (Renamed, SID ending in 500)"
                - "Built-in guest account (Renamed, Disabled, SID ending in 501)"
                - "Built-in default account (Renamed, Disabled, SID ending in 503)"
                - "Application accounts"
                - "Below is the list of User accounts found on the system. Please check the report"
                - "below and compare the the STIG requirements."
                - "----------------------------------------------------------"
                - "{{ wn19_00_000190_account_audit_dc.stdout.split('\n') }}"
                - "----------------------------------------------------------"
        when:
            - wn19_00_000190_account_audit_dc is not skipped
            - wn19_00_000190_account_audit_dc.stdout != ""

      - name: "MEDIUM | WN19-00-000190 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 outdated or unused accounts must be removed from the system or disabled. | Audit User Accounts"
        ansible.windows.win_shell: |
                                ([ADSI]('WinNT://{0}' -f $env:COMPUTERNAME)).Children | Where {
                                $_.SchemaClassName -eq 'user' } | ForEach {
                                $user = ([ADSI]$_.Path)
                                $lastLogin = $user.Properties.LastLogin.Value
                                $enabled = ($user.Properties.UserFlags.Value -band 0x2) -ne 0x2
                                if ($lastLogin -eq $null) {
                                $lastLogin = 'Never'
                                }
                                Write-Host UserName: $user.Name LastLogin: $lastLogin Enabled: $enabled
                                }
        changed_when: false
        failed_when: false
        register: wn19_00_000190_account_audit_dm_sa
        when: not ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000190 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 outdated or unused accounts must be removed from the system or disabled. | Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Outdated or unused accounts must be removed from"
                - "the Windows Server 2019 system or disabled."
                - "Accounts to exclude are the following:"
                - "Built-in administrator account (Renamed, SID ending in 500)"
                - "Built-in guest account (Renamed, Disabled, SID ending in 501)"
                - "Built-in default account (Renamed, Disabled, SID ending in 503)"
                - "Application accounts"
                - "Below is the list of User accounts found on the system. Please check the report"
                - "below and compare the the STIG requirements."
                - "----------------------------------------------------------"
                - "{{ wn19_00_000190_account_audit_dm_sa.stdout.split('\n') }}"
                - "----------------------------------------------------------"
        when:
            - wn19_00_000190_account_audit_dm_sa is not skipped
            - wn19_00_000190_account_audit_dm_sa.stdout != ""

      - name: "MEDIUM | WN19-00-000190 | AUDIT | Windows Server 2019 outdated or unused accounts must be removed from the system or disabled. | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000190'
        when: wn19_00_000190_account_audit_dc is not skipped and wn19_00_000190_account_audit_dc.stdout != "" or wn19_00_000190_account_audit_dm_sa is not skipped and wn19_00_000190_account_audit_dm_sa.stdout != ""
  when:
      - wn19_00_000190
  tags:
      - WN19-00-000190
      - CAT2
      - CCI-000795
      - SRG-OS-000118-GPOS-00060
      - SV-205707r857292_rule
      - V-205707

- name: "MEDIUM | WN19-00-000200 | AUDIT | Windows Server 2019 accounts must require passwords."
  block:
      - name: "MEDIUM | WN19-00-000200 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 accounts must require passwords."
        ansible.windows.win_shell: Get-Aduser -Filter "(Passwordnotrequired -eq 'True') -and (Enabled -eq 'True')" | Select Name,Passwordnotrequired,Enabled
        changed_when: false
        failed_when: false
        register: wn19_00_000200_audit_dc
        when: ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000200 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 accounts must require passwords."
        ansible.builtin.debug:
            msg:
                - "The accounts listed do not require a password and are currently enabled."
                - "To conform to STIG complaince configure passwords on all accounts."
                - "{{ wn19_00_000200_audit_dc.stdout.split('\n') }}"
        when:
            - not wn19_00_000200_audit_dc is skipped
            - wn19_00_000200_audit_dc.stdout != ""

      - name: "MEDIUM | WN19-00-000200 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 accounts must require passwords."
        ansible.windows.win_shell: Get-LocalUser | Where-Object {($_.PasswordRequired -ne 'True' -and $_.Enabled -eq 'True')} | Select Name,PasswordRequired,Enabled
        changed_when: false
        failed_when: false
        register: wn19_00_000200_audit_dm_sa
        when: not ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000200 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 accounts must require passwords."
        ansible.builtin.debug:
            msg:
                - "The accounts listed do not require a password and are currently enabled."
                - "To conform to STIG complaince configure passwords on all accounts."
                - "{{ wn19_00_000200_audit_dm_sa.stdout.split('\n') }}"
        when:
            - not wn19_00_000200_audit_dm_sa is skipped
            - wn19_00_000200_audit_dm_sa.stdout != ""

      - name: "MEDIUM | WN19-00-000200 | AUDIT | Windows Server 2019 accounts must require passwords. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000200'
        when:
            - not wn19_00_000200_audit_dc is skipped
            - wn19_00_000200_audit_dc.stdout != "" or
            - not wn19_00_000200_audit_dm_sa is skipped
            - wn19_00_000200_audit_dm_sa.stdout != ""
  when:
      - wn19_00_000200
  tags:
      - WN19-00-000200
      - CAT2
      - CCI-000764
      - SRG-OS-000104-GPOS-00051
      - SV-205700r857294_rule
      - V-205700
      - audit

- name: "MEDIUM | WN19-00-000210 | AUDIT | Windows Server 2019 passwords must be configured to expire."
  block:
      - name: "MEDIUM | WN19-00-000210 | AUDIT | Windows Server 2019 passwords must be configured to expire. | Audit Accounts."
        ansible.windows.win_shell: Search-ADAccount -PasswordNeverExpires -UsersOnly | FT Name, PasswordNeverExpires, Enabled
        changed_when: false
        failed_when: false
        register: wn19_00_000210_audit_dc
        when: ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000210 | AUDIT | Windows Server 2019 passwords must be configured to expire. | Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 passwords must be configured to expire."
                - "The Following Accounts may not conform To STIG Standards."
                - "{{ wn19_00_000210_audit_dc.stdout.split('\n') }}"
        when:
            - wn19_00_000210_audit_dc is not skipped
            - wn19_00_000210_audit_dc.stdout != ""

      - name: "MEDIUM | WN19-00-000210 | AUDIT | Windows Server 2019 passwords must be configured to expire. | Audit Local Accounts."
        ansible.windows.win_shell: |
                Get-CimInstance -Class Win32_Useraccount -Filter "PasswordExpires=False and LocalAccount=True" |
                Where-Object -FilterScript {$_.PasswordExpires -EQ $False -AND $_.Disabled -EQ $False} |
                Format-Table -Property Name,PasswordExpires,Disabled,LocalAccount
        changed_when: false
        failed_when: false
        register: wn19_00_000210_audit_dm_sa
        when: not ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000210 | AUDIT | Windows Server 2019 passwords must be configured to expire. | Warning Message"
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 passwords must be configured to expire."
                - "The Following Accounts may not conform To STIG Standards."
                - "{{ wn19_00_000210_audit_dm_sa.stdout.split('\n') }}"
        when:
            - wn19_00_000210_audit_dm_sa is not skipped
            - wn19_00_000210_audit_dm_sa.stdout != ""

      - name: "MEDIUM | WN19-00-000210 | AUDIT | Windows Server 2019 passwords must be configured to expire. | Warning Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000210'
        when: wn19_00_000210_audit_dc is not skipped and wn19_00_000210_audit_dc.stdout != "" or wn19_00_000210_audit_dm_sa is not skipped and wn19_00_000210_audit_dm_sa.stdout != ""
  when:
      - wn19_00_000210
  tags:
      - WN19-00-000210
      - CAT2
      - CCI-000199
      - SRG-OS-000076-GPOS-00044
      - SV-205658r857297_rule
      - V-205658

- name: "MEDIUM | WN19-00-000220 | AUDIT | Windows Server 2019 system files must be monitored for unauthorized changes."
  block:
      - name: "MEDIUM | WN19-00-000220 | AUDIT | Windows Server 2019 system files must be monitored for unauthorized changes. | Message out"
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 system files must be monitored for unauthorized changes."

      - name: "MEDIUM | WN19-00-000220 | AUDIT | Windows Server 2019 system files must be monitored for unauthorized changes. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000220'
  when:
      - wn19_00_000220
  tags:
      - WN19-00-000220
      - CAT2
      - CCI-001744
      - SRG-OS-000363-GPOS-00150
      - SV-205803r890522_rule
      - V-205803
# Some third party software to monitor files

- name: "MEDIUM | WN19-00-000230 | AUDIT | Windows Server 2019 non-system-created file shares on a system must limit access to groups that require it."
  block:
      - name: "MEDIUM | WN19-00-000230 | AUDIT | Windows Server 2019 non-system-created file shares on a system must limit access to groups that require it. | Audit Shares"
        ansible.windows.win_shell: Get-SmbShare | Where-Object { ($_.Name -notlike "ADMIN$") -and ($_.Name -notlike 'C$') -and ($_.Name -notlike 'IPC$') } | Select-Object -Property Name | format-table -hidetableheaders
        changed_when: false
        failed_when: false
        register: wn19_00_000230_audit

      - name: "MEDIUM | WN19-00-000230 | AUDIT | Windows Server 2019 non-system-created file shares on a system must limit access to groups that require it.. | Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have shares that non-system created. Please manually review those shares listed below to make sure appropriate permissions are applied"
                - "{{ wn19_00_000230_audit.stdout_lines | select() | list }}"
        when: wn19_00_000230_audit.stdout_lines | select() | length > 0

      - name: "MEDIUM | WN19-00-000230 | AUDIT | Windows Server 2019 non-system-created file shares on a system must limit access to groups that require it."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000230'
        when: wn19_00_000230_audit.stdout_lines | select() | length > 0
  when:
      - wn19_00_000230
  tags:
      - WN19-00-000230
      - CAT2
      - CCI-001090
      - SRG-OS-000138-GPOS-00069
      - SV-205721r569188_rule
      - V-205721

# https://stackoverflow.com/questions/31049454/how-to-retrieve-recursively-any-files-with-a-specific-extensions-in-powershell/31049571
- name: "MEDIUM | WN19-00-000240 | AUDIT | Windows Server 2019 must have software certificate installation files removed."
  block:
      - name: "MEDIUM | WN19-00-000240 | AUDIT | Windows Server 2019 must have software certificate installation files removed. | Search for files"
        ansible.windows.win_find:
            paths: '{{ item }}:\'
            patterns: ['*.p12', '*.pfx']
            recurse: true
            hidden: true
        register: wn19_00_000240_files
        with_items: "{{ wn19_drive_letters.stdout_lines }}"

      - name: "MEDIUM | WN19-00-000240 | PATCH | Windows Server 2019 must have software certificate installation files removed. | Remove Files"
        ansible.windows.win_file:
            path: "{{ item.path }}"
            state: absent
        with_items:
            - "{{ wn19_00_000240_files.results[0].files }}"
        loop_control:
            label: "{{ item.path }}"
        when:
            - win2019stig_disruption_high
            - wn19_00_000240_files.results[0].files | length > 0

      - name: "MEDIUM | WN19-00-000240 | AUDIT | Windows Server 2019 must have software certificate installation files removed. | Alert on files if not Disruptive High"
        ansible.builtin.debug:
            msg:
                - "Warning!! You have .p12 and/or .pfx files on your system"
                - "Please review and remove the following files manually.  If you"
                - "would like them removed with automation set win2019stig_disruption_high: true"
                - "Any files not removed must be documented with the ISSO."
                - "{{ wn19_00_000240_files.results[0].files | map(attribute='path') | list }}"
        when:
            - not win2019stig_disruption_high
            - wn19_00_000240_files.results[0].files | length > 0

      - name: "MEDIUM | WN19-00-000240 | AUDIT | Windows Server 2019 must have software certificate installation files removed. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000240'
        when:
            - not win2019stig_disruption_high
            - wn19_00_000240_files.results[0].files | length > 0
  when:
      - wn19_00_000240
      - win19stig_lengthy_search
  tags:
      - WN19-00-000240
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205852r569188_rule
      - V-205852
      # do we need async; its very long running to search filesystems

- name: "MEDIUM | WN19-00-000250 | AUDIT | Windows Server 2019 systems requiring data at rest protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest."
  block:
      - name: "MEDIUM | WN19-00-000250 | AUDIT | Windows Server 2019 systems requiring data at rest protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 systems requiring data at rest protections"
                - "must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest."

      - name: "MEDIUM | WN19-00-000250 | AUDIT | Windows Server 2019 systems requiring data at rest protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000250'
  when:
      - wn19_00_000250
  tags:
      - WN19-00-000250
      - CAT2
      - CCI-001199
      - CCI-002475
      - CCI-002476
      - SRG-OS-000185-GPOS-00079
      - SV-205727r852429_rule
      - V-205727

- name: "MEDIUM | WN19-00-000260 | AUDIT | Windows Server 2019 must implement protection methods such as TLS, encrypted VPNs, or IPsec if the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process."
  block:
      - name: "MEDIUM | WN19-00-000260 | AUDIT | Windows Server 2019 must implement protection methods such as TLS, encrypted VPNs, or IPsec if the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process. | Warning Message"
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 must implement protection methods such as TLS, encrypted VPNs,"
                - "or IPsec if the data owner has a strict requirement for ensuring"
                - "data integrity and confidentiality is maintained at every step of the data transfer and handling process."

      - name: "MEDIUM | WN19-00-000260 | AUDIT | Windows Server 2019 must implement protection methods such as TLS, encrypted VPNs, or IPsec if the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000260'
  when:
      - wn19_00_000260
  tags:
      - WN19-00-000260
      - CAT2
      - CCI-002420
      - CCI-002422
      - SRG-OS-000425-GPOS-00189
      - SV-205829r852531_rule
      - V-205829

- name: "MEDIUM | WN19-00-000270 | AUDIT | Windows Server 2019 must have the roles and features required by the system documented."
  block:
      - name: "MEDIUM | WN19-00-000270 | AUDIT | Windows Server 2019 bust have the roles and features required by the system documented. | Get Roles & Features Installed"
        ansible.windows.win_shell: Get-WindowsFeature | Where-Object -FilterScript {$_.Installed -EQ $True}
        changed_when: false
        failed_when: false
        register: wn19_00_000270_audit

      - name: "MEDIUM | WN19-00-000270 | AUDIT | Windows Server 2019 must have the roles and features required by the system documented. | Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 must have the roles"
                - "and features required by the system documented. Below is the current list of"
                - "roles and features installed on the system."
                - "Document the roles and features required for the system to operate. Uninstall any that are not required."
                - "{{ wn19_00_000270_audit.stdout_lines }}"

      - name: "MEDIUM | WN19-00-000270 | AUDIT | Windows Server 2019 must have the roles and features required by the system documented. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000270'
  when:
      - wn19_00_000270
  tags:
      - WN19-00-000270
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205677r569188_rule
      - V-205677

- name: "MEDIUM | WN19-00-000280 | AUDIT | Windows Server 2019 must have a host-based firewall installed and enabled."
  block:
      - name: "MEDIUM | WN19-00-000280 | AUDIT | Windows Server 2019 must have a host-based firewall installed and enabled. | Check For Windows Based Firewall Enabled."
        ansible.windows.win_shell: |
                            $FWProfiles = (Get-NetFirewallProfile);
                            Write-Host "Windows Firewall Profile Statuses" -Foregroundcolor Yellow;
                            $FWProfiles | %{
                                If($_.Enabled -eq 1){
                                    Write-Host "The Windows Firewall $($_.Name) profile is enabled"
                                    }Else{
                                    Write-Host "The Windows Firewall $($_.Name) profile is disabled"
                                    }
                                };
        changed_when: false
        failed_when: false
        register: wn19_00_000280_firewall_audit

      - name: "MEDIUM | WN19-00-000280 | AUDIT | Windows Server 2019 must have a host-based firewall installed and enabled. | Warning Message No Windows Firewall Enabled"
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 9 must have a host-based firewall installed and enabled."
                - "Windows does not currently have its built in firewall enabled."
                - "Please check for 3rd party firewall and verify the configuration requirements conform to firewall STIG standards."
                - "{{ wn19_00_000280_firewall_audit.stdout_lines }}"
        when:
            - "'Domain profile is disabled' in wn19_00_000280_firewall_audit.stdout_lines | string"
            - "'Private profile is disabled' in wn19_00_000280_firewall_audit.stdout_lines | string"
            - "'Public profile is disabled' in wn19_00_000280_firewall_audit.stdout_lines | string"

      - name: "MEDIUM | WN19-00-000280 | AUDIT | Windows Server 2019 must have a host-based firewall installed and enabled. | Warning Message Windows Firewall On"
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 must have a host-based firewall installed and enabled."
                - "Windows host based firewall currently is enabled on Domain, Private, And Public Profiles."
                - "Please check the firewall and verify the configuration requirements conform to firewall STIG standards."
                - "{{ wn19_00_000280_firewall_audit.stdout_lines }}"
        when:
            - "'Domain profile is enabled' in wn19_00_000280_firewall_audit.stdout_lines | string"
            - "'Private profile is enabled' in wn19_00_000280_firewall_audit.stdout_lines | string"
            - "'Public profile is enabled' in wn19_00_000280_firewall_audit.stdout_lines | string"

      - name: "MEDIUM | WN19-00-000280 | AUDIT | Windows Server 2019 must have a host-based firewall installed and enabled. | Warning Message Windows Firewall Not Completely On"
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 must have a host-based firewall installed and enabled."
                - "Windows host based firewall currently is partially enabled on Domain, Private, And Public Profiles."
                - "Please check the firewall and verify the configuration requirements conform to firewall STIG standards."
                - "{{ wn19_00_000280_firewall_audit.stdout_lines }}"
        when:
            - "'Domain profile is enabled' not in wn19_00_000280_firewall_audit.stdout_lines | string or
               'Private profile is enabled' not in wn19_00_000280_firewall_audit.stdout_lines | string or
               'Public profile is enabled' not in wn19_00_000280_firewall_audit.stdout_lines | string"

      - name: "MEDIUM | WN19-00-000280 | AUDIT | Windows Server 2019 must have a host-based firewall installed and enabled. | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000280'
  when:
      - wn19_00_000280
  tags:
      - WN19-00-000280
      - CAT2
      - CCI-000366
      - CCI-002080
      - SRG-OS-000480-GPOS-00227
      - SV-214936r852535_rule
      - V-214936

- name: "MEDIUM | WN19-00-000290 | AUDIT | Windows Server 2019 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: continuously, where Host Based Security System (HBSS) is used; 30 days, for any additional internal network scans not covered by HBSS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP)."
  block:
      - name: "MEDIUM | WN19-00-000290 | AUDIT | Windows Server 2019 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: continuously, where Host Based Security System (HBSS) is used; 30 days, for any additional internal network scans not covered by HBSS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP)."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task.  Windows Server 2019 must employ automated mechanisms to determine"
                - "the state of system components with regard to flaw remediation using the following frequency: continuously,"
                - "where Endpoint Security Solution (ESS) is used; 30 days, for any additional internal network scans not"
                - "covered by ESS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP)"
                - "Verify DoD-approved ESS software is installed and properly operating."
                - "Ask the site ISSM for documentation of the ESS software installation and configuration."

      - name: "MEDIUM | WN19-00-000290 | AUDIT | Windows Server 2019 must employ automated mechanisms to determine the state of system components with regard to flaw remediation using the following frequency: continuously, where Host Based Security System (HBSS) is used; 30 days, for any additional internal network scans not covered by HBSS; and annually, for external scans by Computer Network Defense Service Provider (CNDSP). | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000290'
  when:
      - wn19_00_000290
  tags:
      - WN19-00-000290
      - CAT2
      - CCI-001233
      - SRG-OS-000191-GPOS-00080
      - SV-205728r793217_rule
      - V-205728

- name: "MEDIUM | WN19-00-000300 | AUDIT | Windows Server 2019 must automatically remove or disable temporary user accounts after 72 hours."
  block:
      - name: "MEDIUM | WN19-00-000300 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 must automatically remove or disable temporary user accounts after 72 hours. | Get User List."
        ansible.windows.win_shell: Search-ADAccount -AccountExpiring | FT Name, AccountExpirationDate
        changed_when: false
        failed_when: false
        register: wn19_00_000300_audit_dc
        when: ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000300 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 must automatically remove or disable temporary user accounts after 72 hours. | Warning Message"
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Please review all accounts to verify there are no temporary accounts"
                - "listed where the expiration date is longer then 72 hours."
                - "{{ wn19_00_000300_audit_dc.stdout.split('\n') }}"
        when:
            - wn19_00_000300_audit_dc is not skipped
            - wn19_00_000300_audit_dc.stdout != ""

      - name: "MEDIUM | WN19-00-000300 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 must automatically remove or disable temporary user accounts after 72 hours. | Get User List."
        ansible.windows.win_shell: Get-LocalUser
        changed_when: false
        failed_when: false
        register: wn19_00_000300_audit_sa
        when: not ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000300 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 must automatically remove or disable temporary user accounts after 72 hours. | Warning Message"
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Please review all accounts to verify there are no temporary accounts"
                - "listed where the expiration date is longer then 72 hours."
                - "{{ wn19_00_000300_audit_sa.stdout.split('\n') }}"
        when:
            - wn19_00_000300_audit_sa is not skipped
            - wn19_00_000300_audit_sa.stdout != ""

      - name: "MEDIUM | WN19-00-000300 | AUDIT | Windows Server 2019 must automatically remove or disable temporary user accounts after 72 hours. | Warning Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000300'
        when: wn19_00_000300_audit_dc is not skipped and wn19_00_000300_audit_dc.stdout != "" or wn19_00_000300_audit_sa is not skipped and wn19_00_000300_audit_sa.stdout != ""
  when:
      - wn19_00_000300
  tags:
      - WN19-00-000300
      - CAT2
      - CCI-000016
      - SRG-OS-000002-GPOS-00002
      - SV-205624r857301_rule
      - V-205624

- name: "MEDIUM | WN19-00-000310 | AUDIT | Windows Server 2019 must automatically remove or disable emergency accounts after the crisis is resolved or within 72 hours."
  block:
      - name: "MEDIUM | WN19-00-000310 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 must automatically remove or disable emergency accounts after the crisis is resolved or within 72 hours. | Get User List."
        ansible.windows.win_shell: Search-ADAccount -AccountExpiring | FT Name, AccountExpirationDate
        changed_when: false
        failed_when: false
        register: wn19_00_000310_audit_dc
        when: ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000310 | AUDIT - DOMAIN CONTROLLER | Windows Server 2019 must automatically remove or disable emergency accounts after the crisis is resolved or within 72 hours. | Warning Message"
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 must automatically remove or disable emergency"
                - "accounts after the crisis is resolved or within 72 hours."
                - "{{ wn19_00_000310_audit_dc.stdout.split('\n') }}"
        when:
            - wn19_00_000310_audit_dc is not skipped
            - wn19_00_000310_audit_dc.stdout != ""

      - name: "MEDIUM | WN19-00-000310 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 must automatically remove or disable emergency accounts after the crisis is resolved or within 72 hours. | Get User List."
        ansible.windows.win_shell: Get-LocalUser
        changed_when: false
        failed_when: false
        register: wn19_00_000310_audit_sa
        when: not ansible_windows_domain_role == "Primary domain controller"

      - name: "MEDIUM | WN19-00-000310 | AUDIT - DOMAIN MEMBERS OR STANDALONE | Windows Server 2019 must automatically remove or disable emergency accounts after the crisis is resolved or within 72 hours. | Warning Message"
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 must automatically remove or disable emergency"
                - "accounts after the crisis is resolved or within 72 hours."
                - "{{ wn19_00_000310_audit_sa.stdout.split('\n') }}"
        when:
            - wn19_00_000310_audit_sa is not skipped
            - wn19_00_000310_audit_sa.stdout != ""

      - name: "MEDIUM | WN19-00-000310 | AUDIT | Windows Server 2019 must automatically remove or disable emergency accounts after the crisis is resolved or within 72 hours. | Warning Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000310'
        when: wn19_00_000310_audit_dc is not skipped and wn19_00_000310_audit_dc.stdout != "" or wn19_00_000310_audit_sa is not skipped and wn19_00_000310_audit_sa.stdout != ""
  when:
      - wn19_00_000310
  tags:
      - WN19-00-000310
      - CAT2
      - CCI-001682
      - SRG-OS-000123-GPOS-00064
      - SV-205710r857303_rule
      - V-205710

- name: "MEDIUM | WN19-00-000320 | PATCH | Windows Server 2019 must not have the Fax Server role installed."
  ansible.windows.win_feature:
      name: Fax
      state: absent
  notify: reboot_windows
  when:
      - wn19_00_000320
  tags:
      - WN19-00-000320
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205678r569188_rule
      - V-205678

- name: "MEDIUM | WN19-00-000330 | PATCH | Windows Server 2019 must not have the Microsoft FTP service installed unless required by the organization."
  ansible.windows.win_feature:
      name: Web-Ftp-Server
      state: absent
  notify: reboot_windows
  when:
      - wn19_00_000330
  tags:
      - WN19-00-000330
      - CAT2
      - CCI-000382
      - SRG-OS-000096-GPOS-00050
      - SV-205697r569188_rule
      - V-205697

- name: "MEDIUM | WN19-00-000340 | PATCH | Windows Server 2019 must not have the Peer Name Resolution Protocol installed."
  ansible.windows.win_feature:
      name: PNRP
      state: absent
  notify: reboot_windows
  when:
      - wn19_00_000340
  tags:
      - WN19-00-000340
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205679r569188_rule
      - V-205679

- name: "MEDIUM | WN19-00-000350 | PATCH | Windows Server 2019 must not have Simple TCP/IP Services installed."
  ansible.windows.win_feature:
      name: Simple-TCPIP
      state: absent
  when:
      - wn19_00_000350
  tags:
      - WN19-00-000350
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205680r569188_rule
      - V-205680

- name: "MEDIUM | WN19-00-000360 | PATCH | Windows Server 2019 must not have the Telnet Client installed."
  ansible.windows.win_feature:
      name: Telnet-Client
      state: absent
  when:
      - wn19_00_000360
  tags:
      - WN19-00-000360
      - CAT2
      - CCI-000382
      - SRG-OS-000096-GPOS-00050
      - SV-205698r569188_rule
      - V-205698

- name: "MEDIUM | WN19-00-000370 | PATCH | Windows Server 2019 must not have the TFTP Client installed."
  ansible.windows.win_feature:
      name: TFTP-Client
      state: absent
  when:
      - wn19_00_000370
  tags:
      - WN19-00-000370
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205681r569188_rule
      - V-205681

- name: "MEDIUM | WN19-00-000380 | PATCH | Windows Server 2019 must not have the Server Message Block (SMB) v1 protocol installed."
  ansible.windows.win_feature:
      name: FS-SMB1
      state: absent
  notify: reboot_windows
  when:
      - wn19_00_000380
  tags:
      - WN19-00-000380
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205682r819711_rule
      - V-205682

- name: "MEDIUM | WN19-00-000390 | PATCH | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server."
  block:
      - name: "MEDIUM | WN19-00-000390 | PATCH | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server. | Registry Edit"
        ansible.windows.win_regedit:
            path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters
            state: present
            value: SMB1
            data: 0
            datatype: dword
        notify: reboot_windows

      - name: "MEDIUM | WN19-00-000390 | AUDIT | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server. | Warning Message No SecGuide.admx"
        debug:
            msg:
                - "Warning!! SecGuide.admx is not installed in C:\\Windows\\PolicyDefinitions folder."
                - "This policy setting requires the installation of the SecGuide.admx custom templates"
                - "included with the STIG package."
        when: wn19_secguide_admx_audit.results[0].matched != 1

      - name: "MEDIUM | WN19-00-000390 | AUDIT | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server. | Warning Message No SecGuide.adml"
        debug:
            msg:
                - "Warning!! SecGuide.adml is not installed in C:\\Windows\\PolicyDefinitions\\en-US folder"
                - "This policy setting requires the installation of the SecGuide.adml custom templates"
                - "included with the STIG package."
        when: wn19_secguide_adml_audit.results[0].matched != 1

      - name: "MEDIUM | WN19-00-000390 | AUDIT | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000390'
        when:
            - wn19_secguide_admx_audit.results[0].matched != 1 or
              wn19_secguide_adml_audit.results[0].matched != 1
  when:
      - wn19_00_000390
  tags:
      - WN19-00-000390
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205683r569188_rule
      - V-205683

- name: "MEDIUM | WN19-00-000400 | PATCH | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server."
  block:
      - name: "MEDIUM | WN19-00-000400 | PATCH | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server - mrxsmb10 | Registry Edit."
        ansible.windows.win_regedit:
            path: HKLM:\SYSTEM\CurrentControlSet\Services\mrxsmb10
            state: present
            value: Start
            data: 4
            datatype: dword
        notify: reboot_windows

      - name: "MEDIUM | WN19-00-000400 | AUDIT | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server - mrxsmb10 | Warning Message No SecGuide.admx"
        debug:
            msg:
                - "Warning!! SecGuide.admx is not installed in C:\\Windows\\PolicyDefinitions folder."
                - "This policy setting requires the installation of the SecGuide.admx custom templates"
                - "included with the STIG package."
        when: wn19_secguide_admx_audit.results[0].matched != 1

      - name: "MEDIUM | WN19-00-000400 | AUDIT | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server - mrxsmb10 | Warning Message No SecGuide.adml"
        debug:
            msg:
                - "Warning!! SecGuide.adml is not installed in C:\\Windows\\PolicyDefinitions\\en-US folder"
                - "This policy setting requires the installation of the SecGuide.adml custom templates"
                - "included with the STIG package."
        when: wn19_secguide_adml_audit.results[0].matched != 1

      - name: "MEDIUM | WN19-00-000400 | AUDIT | Windows Server 2019 must have the Server Message Block (SMB) v1 protocol disabled on the SMB server - mrxsmb10 | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000400'
        when:
            - wn19_secguide_admx_audit.results[0].matched != 1 or
              wn19_secguide_adml_audit.results[0].matched != 1
  when:
      - wn19_00_000400
  tags:
      - WN19-00-000400
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205684r569188_rule
      - V-205684

- name: "MEDIUM | WN19-00-000410 | PATCH | Windows Server 2019 must not have Windows PowerShell 2.0 installed."
  ansible.windows.win_feature:
      name: PowerShell-V2
      state: absent
  when:
      - wn19_00_000410
  tags:
      - WN19-00-000410
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205685r569188_rule
      - V-205685

- name: "MEDIUM | WN19-00-000420 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent anonymous logons."
  block:
      - name: "MEDIUM | WN19-00-000420 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent anonymous logons. | Get FTP Installed Status."
        ansible.windows.win_shell: Get-WindowsFeature | Where Name -eq Web-Ftp-Service
        changed_when: false
        failed_when: false
        register: wn19_00_000420_audit

      - name: "MEDIUM | WN19-00-000420 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent anonymous logons. | Set Fact."
        ansible.builtin.set_fact:
            wn19_00_000420_ftp_audit: "{{ wn19_00_000420_audit.stdout_lines | regex_search('Installed') }}"

      - name: "MEDIUM | WN19-00-000420 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent anonymous logons. | Warning Message"
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Internet Information Services (IIS) Manager FTP is currently"
                - "installed on the system. Anonymous Authentication must be set to diabled per STIG Requirements."
        when: "'Installed' in wn19_00_000420_ftp_audit"

      - name: "MEDIUM | WN19-00-000420 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent anonymous logons. | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000420'
        when: "'Installed' in wn19_00_000420_ftp_audit"
  when:
      - wn19_00_000420
  tags:
      - WN19-00-000420
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205853r569188_rule
      - V-205853

- name: "MEDIUM | WN19-00-000430 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent access to the system drive."
  block:
      - name: "MEDIUM | WN19-00-000430 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent access to the system drive. | Get FTP Installed."
        ansible.windows.win_shell: Get-WindowsFeature | Where Name -eq Web-Ftp-Service
        changed_when: false
        failed_when: false
        register: wn19_00_000430_audit

      - name: "MEDIUM | WN19-00-000430 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent access to the system drive. | Set Fact."
        ansible.builtin.set_fact:
            wn19_00_000430_ftp_audit: "{{ wn19_00_000430_audit.stdout_lines | regex_search('Installed') }}"

      - name: "MEDIUM | WN19-00-000430 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent access to the system drive. | Get Sites Info."
        ansible.windows.win_shell: |
                                Import-Module IISAdministration
                                Get-IISSite
        changed_when: false
        failed_when: false
        register: wn19_00_000430_isssite_audit
        when: "'Installed' in wn19_00_000430_ftp_audit"

      - name: "MEDIUM | WN19-00-000430 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent access to the system drive. | Warning Message."
        debug:
            msg:
                - "Warning!! This is a manual task. For any sites with a Binding that lists FTP, right-click the site and select Explore."
                - "If the site includes any system areas such as root of the drive, Program Files, or Windows directories, this is a finding"
                - "Configure the FTP sites to allow access only to specific FTP shared resources. Do not allow access to other areas of the system."
                - "{{ wn19_00_000430_isssite_audit.stdout.split('\n') }}"
        when: "'Installed' in wn19_00_000430_ftp_audit"

      - name: "MEDIUM | WN19-00-000430 | AUDIT | Windows Server 2019 FTP servers must be configured to prevent access to the system drive. | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000430'
        when: "'Installed' in wn19_00_000430_ftp_audit"
  when:
      - wn19_00_000430
  tags:
      - WN19-00-000430
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205854r569188_rule
      - V-205854

- name: "MEDIUM | WN19-00-000450 | AUDIT | Windows Server 2019 must have orphaned security identifiers (SIDs) must be removed from user rights."
  block:
      - name: "MEDIUM | WN19-00-000450 | AUDIT | Windows Server 2019 must have orphaned security identifiers (SIDs) must be removed from user rights. | Get User List"
        ansible.windows.win_shell: Get-WmiObject Win32_UserAccount | Where-Object {$_.SID -match "*S"} | Select Name,SID,DOMAIN
        changed_when: false
        failed_when: false
        register: wn19_00_000450_orphaned_user_accounts

      - name: "MEDIUM | WN19-00-000450 | AUDIT | Windows Server 2019 must have orphaned security identifiers (SIDs) must be removed from user rights. | Check For Orphaned Group Accounts. | Get Group List"
        ansible.windows.win_shell: Get-WmiObject -Class Win32_UserAccount | Where-Object {$_.SID -match "*S"} | Select Name,SID,DOMAIN
        changed_when: false
        failed_when: false
        register: wn19_00_000460_orphaned_group_accounts

      - name: "MEDIUM | WN19-00-000450 | AUDIT | Windows Server 2019 must have orphaned security identifiers (SIDs) must be removed from user rights. | Warning Message User Accounts"
        ansible.builtin.debug:
            msg:
                - "Warning!! Please review the User Rights listed for each of any unresolved SID to determine whether they are valid."
                - "User Accounts"
                - "----------------------------------------------------------------------"
                - "{{ wn19_00_000450_orphaned_user_accounts.stdout_lines }}"
        when: wn19_00_000450_orphaned_user_accounts.stdout_lines | select() | length > 0

      - name: "MEDIUM | WN19-00-000450 | AUDIT | Windows Server 2019 must have orphaned security identifiers (SIDs) must be removed from user rights. | Warning Message Group Accounts."
        ansible.builtin.debug:
            msg:
                - "Warning!! Please review the Group Rights listed for each of any unresolved SID to determine whether they are valid."
                - "Group Accounts"
                - "----------------------------------------------------------------------"
                - "{{ wn19_00_000460_orphaned_group_accounts.stdout_lines }}"
        when: wn19_00_000460_orphaned_group_accounts.stdout_lines | select() | length > 0

      - name: "MEDIUM | WN19-00-000450 | AUDIT | Windows Server 2019 must have orphaned security identifiers (SIDs) must be removed from user rights. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-00-000450'
        when:
            - wn19_00_000450_orphaned_user_accounts.stdout_lines | select() | length > 0 or wn19_00_000460_orphaned_group_accounts.stdout_lines | select() | length > 0
  when:
      - wn19_00_000450
  tags:
      - WN19-00-000450
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205855r569188_rule
      - V-205855

# THE FOLLOWING 3 CONTROLS WILL FAIL UNLESS THEY ARE IN THE FOLLOWING ORDER FOR LOCAL BASED SYSTEMS.
- name: "MEDIUM | WN19-AC-000020 | PATCH | Windows Server 2019 must have the number of allowed bad logon attempts configured to three or less."
  block:
      - name: "MEDIUM | WN19-AC-000020 | AUDIT | Windows Server 2019 must have the number of allowed bad logon attempts configured to three or less. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of days set for wn19stig_lockoutbadcount please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_lockoutbadcount == 0 or
              wn19stig_lockoutbadcount > 3

      - name: "MEDIUM | WN19-AC-000020 | AUDIT | Windows Server 2019 must have the number of allowed bad logon attempts configured to three or less. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000020'
        when:
            - wn19stig_lockoutbadcount == 0 or
              wn19stig_lockoutbadcount > 3

      - name: "MEDIUM | WN19-AC-000020 | PATCH | Windows Server 2019 must have the number of allowed bad logon attempts configured to three or less. | Apply Variable."
        community.windows.win_security_policy:
            section: System Access
            key: LockoutBadCount
            value: "{{ wn19stig_lockoutbadcount }}"
        when:
            - wn19stig_lockoutbadcount > 0
            - wn19stig_lockoutbadcount <= 3
  when:
      - wn19_ac_000020
      - not win19stig_cloud_based_system
  tags:
      - WN19-AC-000020
      - CAT2
      - CCI-000044
      - SRG-OS-000021-GPOS-00005
      - SV-205629r569188_rule
      - V-205629

# below task is dependent on WN16-AC-000020, maybe custom fail when known error if WN16-AC-000020 not set? "The key 'ResetLockoutCount' in section 'System Access' is not a valid key, cannot set this value"
- name: "MEDIUM | WN19-AC-000030 | PATCH | Windows Server 2019 must have the period of time before the bad logon counter is reset configured to 15 minutes or greater."
  block:
      - name: MEDIUM | WN19-AC-000030 | AUDIT | Windows Server 2019 must have the period of time before the bad logon counter is reset configured to 15 minutes or greater."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of days set for wn19stig_resetlockoutcount please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_resetlockoutcount < 15

      - name: MEDIUM | WN19-AC-000030 | AUDIT | Windows Server 2019 must have the period of time before the bad logon counter is reset configured to 15 minutes or greater. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000030'
        when:
            - wn19stig_resetlockoutcount < 15

      - name: "MEDIUM | WN19-AC-000030 | PATCH | Windows Server 2019 must have the period of time before the bad logon counter is reset configured to 15 minutes or greater. | Apply Variable"
        community.windows.win_security_policy:
            section: System Access
            key: ResetLockoutCount
            value: "{{ wn19stig_resetlockoutcount }}"
        when:
            - wn19stig_resetlockoutcount >= 15
  when:
      - wn19_ac_000030
      - not win19stig_cloud_based_system
  tags:
      - WN19-AC-000030
      - CAT2
      - CCI-000044
      - CCI-002238
      - SRG-OS-000021-GPOS-00005
      - SV-205630r852416_rule
      - V-205630

# below task is dependent on WN19-AC-000020 and WN19-AC-000030, maybe custom fail when known error if WN19-AC-000020 not set? "The key 'LockoutDuration' in section 'System Access' is not a valid key, cannot set this value"
- name: "MEDIUM | WN19-AC-000010 | PATCH | Windows Server 2019 account lockout duration must be configured to 15 minutes or greater."
  block:
      - name: "MEDIUM | WN19-AC-000010 | AUDIT | Windows Server 2019 account lockout duration must be configured to 15 minutes or greater. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of minutes set for wn19stig_lockoutduration please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_lockoutduration < 15
            - wn19stig_lockoutduration > 0

      - name: "MEDIUM | WN19-AC-000010 | AUDIT | Windows Server 2019 account lockout duration must be configured to 15 minutes or greater. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000010'
        when:
            - wn19stig_lockoutduration < 15
            - wn19stig_lockoutduration > 0

      - name: "MEDIUM | WN19-AC-000010 | PATCH | Windows Server 2019 account lockout duration must be configured to 15 minutes or greater. | Apply Variable."
        community.windows.win_security_policy:
            section: System Access
            key: LockoutDuration
            value: "{{ wn19stig_lockoutduration }}"
        when:
            - wn19stig_lockoutduration == 0 or
              wn19stig_lockoutduration >= 15
  when:
      - wn19_ac_000010
      - not win19stig_cloud_based_system
  tags:
      - WN19-AC-000010
      - CAT2
      - CCI-002238
      - SRG-OS-000329-GPOS-00128
      - SV-205795r852496_rule
      - V-205795

- name: "MEDIUM | WN19-AC-000040 | PATCH | Windows Server 2019 password history must be configured to 24 passwords remembered."
  block:
      - name: "MEDIUM | WN19-AC-000040 | AUDIT | Windows Server 2019 password history must be configured to 24 passwords remembered. | Warning Message"
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number remembered passwords set for wn19stig_passwordhistorysize please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when: wn19stig_passwordhistorysize < 24

      - name: "MEDIUM | WN19-AC-000040 | AUDIT | Windows Server 2019 password history must be configured to 24 passwords remembered. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000040 '
        when: wn19stig_passwordhistorysize < 24

      - name: "MEDIUM | WN19-AC-000040 | PATCH | Windows Server 2019 password history must be configured to 24 passwords remembered. | Apply Variable"
        win_security_policy:
            section: System Access
            key: PasswordHistorySize
            value: "{{ wn19stig_passwordhistorysize }}"
        when: wn19stig_passwordhistorysize >= 24
  when:
      - wn19_ac_000040
  tags:
      - WN19-AC-000040
      - CAT2
      - CCI-000200
      - SRG-OS-000077-GPOS-00045
      - SV-205660r569188_rule
      - V-205660

- name: "MEDIUM | WN19-AC-000050 | PATCH | Windows Server 2019 maximum password age must be configured to 60 days or less."
  block:
      - name: "MEDIUM | WN19-AC-000050 | AUDIT | Windows Server 2019 maximum password age must be configured to 60 days or less. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of days set for wn19stig_maximumpasswordage please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_maximumpasswordage == 0 or
              wn19stig_maximumpasswordage > 60

      - name: "MEDIUM | WN19-AC-000050 | AUDIT | Windows Server 2019 maximum password age must be configured to 60 days or less. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000050'
        when:
            - wn19stig_maximumpasswordage == 0 or
              wn19stig_maximumpasswordage > 60

      - name: "MEDIUM | WN19-AC-000050 | PATCH | Windows Server 2019 maximum password age must be configured to 60 days or less. | Apply Variable."
        community.windows.win_security_policy:
            section: System Access
            key: MaximumPasswordAge
            value: "{{ wn19stig_maximumpasswordage }}"
        when:
            - wn19stig_maximumpasswordage > 0
            - wn19stig_maximumpasswordage <= 60
  when:
      - wn19_ac_000050
  tags:
      - WN19-AC-000050
      - CAT2
      - CCI-000199
      - SRG-OS-000076-GPOS-00044
      - SV-205659r569188_rule
      - V-205659

- name: "MEDIUM | WN19-AC-000060 | PATCH | Windows Server 2019 minimum password age must be configured to at least one day."
  block:
      - name: "MEDIUM | WN19-AC-000060 | AUDIT | Windows Server 2019 minimum password age must be configured to at least one day. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of days set for wn19stig_minimumpasswordage please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_minimumpasswordage == 0

      - name: "MEDIUM | WN19-AC-000060 | AUDIT | Windows Server 2019 minimum password age must be configured to at least one day. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000060'
        when:
            wn19stig_minimumpasswordage == 0

      - name: "MEDIUM | WN19-AC-000060 | PATCH | Windows Server 2019 minimum password age must be configured to at least one day. | Set Variable."
        community.windows.win_security_policy:
            section: System Access
            key: MinimumPasswordAge
            value: "{{ wn19stig_minimumpasswordage }}"
        when:
            wn19stig_minimumpasswordage > 0
  when:
      - wn19_ac_000060
  tags:
      - WN19-AC-000060
      - CAT2
      - CCI-000198
      - SRG-OS-000075-GPOS-00043
      - SV-205656r569188_rule
      - V-205656

- name: "MEDIUM | WN19-AC-000070 | PATCH | Windows Server 2019 minimum password length must be configured to 14 characters."
  block:
      - name: "MEDIUM | WN19-AC-000070 | AUDIT | Windows Server 2019 minimum password length must be configured to 14 characters. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid password length for wn19stig_minimumpasswordlength please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_minimumpasswordlength < 14

      - name: "MEDIUM | WN19-AC-000070 | AUDIT | Windows Server 2019 minimum password length must be configured to 14 characters. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AC-000070'
        when:
            - wn19stig_minimumpasswordlength < 14

      - name: "MEDIUM | WN19-AC-000070 | PATCH | Windows Server 2019 minimum password length must be configured to 14 characters. | Apply Variable."
        community.windows.win_security_policy:
            section: System Access
            key: MinimumPasswordLength
            value: "{{ wn19stig_minimumpasswordlength }}"
        when:
            - wn19stig_minimumpasswordlength >= 14
  when:
      - wn19_ac_000070
  tags:
      - WN19-AC-000070
      - CAT2
      - CCI-000205
      - SRG-OS-000078-GPOS-00046
      - SV-205662r569188_rule
      - V-205662

- name: "MEDIUM | WN19-AC-000080 | PATCH | Windows Server 2019 must have the built-in Windows password complexity policy enabled."
  community.windows.win_security_policy:
      section: System Access
      key: PasswordComplexity
      value: 1
  when:
      - wn19_ac_000080
  tags:
      - WN19-AC-000080
      - CAT2
      - CCI-000192
      - CCI-000193
      - CCI-000194
      - CCI-001619
      - SRG-OS-000069-GPOS-00037
      - SV-205652r569188_rule
      - V-205652

- name: "MEDIUM | WN19-AU-000010 | AUDIT | Windows Server 2019 audit records must be backed up to a different system or media than the system being audited."
  block:
      - name: "MEDIUM | WN19-AU-000010 | AUDIT | Windows Server 2019 audit records must be backed up to a different system or media than the system being audited."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 audit records must be backed up to a"
                - "different system or media than the system being audited. Establish and implement a process"
                - "for backing up log data to another system or media other than the system being audited."

      - name: "MEDIUM | WN19-AU-000010 | AUDIT | Windows Server 2019 audit records must be backed up to a different system or media than the system being audited. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000010'
  when:
      - wn19_au_000010
  tags:
      - WN19-AU-000010
      - CAT2
      - CCI-001851
      - SRG-OS-000342-GPOS-00133
      - SV-205799r877390_rule
      - V-205799

- name: "MEDIUM | WN19-AU-000020 | AUDIT | Windows Server 2019 must, at a minimum, offload audit records of interconnected systems in real time and offload standalone or nondomain-joined systems weekly."
  block:
      - name: "MEDIUM | WN19-AU-000020 | AUDIT | Windows Server 2019 must, at a minimum, offload audit records of interconnected systems in real time and offload standalone or nondomain-joined systems weekly."
        ansible.builtin.debug:
            msg: "Warning!! This is a manual task. Windows Server 2019 must, at a minimum, offload audit records of interconnected systems in real time and offload standalone or nondomain-joined systems weekly."

      - name: "MEDIUM | WN19-AU-000020 | AUDIT | Windows Server 2019 must, at a minimum, offload audit records of interconnected systems in real time and offload standalone or nondomain-joined systems weekly. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000020'
  when:
      - wn19_au_000020
  tags:
      - WN19-AU-000020
      - CAT2
      - CCI-001851
      - SRG-OS-000479-GPOS-00224
      - SV-205843r916198_rule
      - V-205843
      # hard one, either need to standardize on say log shipping like splunk or other is set?

- name: "MEDIUM | WN19-AU-000030 | AUDIT | Windows Server 2019 permissions for the Application event log must prevent access by non-privileged accounts."
  block:
      - name: "MEDIUM | WN19-AU-000030 | AUDIT | Windows Server 2019 permissions for the Application event log must prevent access by non-privileged accounts. | Get Default Log Locations."
        ansible.windows.win_shell: Get-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Services\EventLog\Application\ | Select-Object File | ft -HideTableHeaders
        changed_when: false
        failed_when: false
        register: wn19_au_000030_app_log_location

      - name: "MEDIUM | WN19-AU-000030 | AUDIT | Windows Server 2019 permissions for the Application event log must prevent access by non-privileged accounts. | Get Current Permissions For Default Application Log."
        ansible.windows.win_shell: get-acl "{{ wn19_au_000030_app_log_location.stdout | trim }}" | FL AccessToString
        changed_when: false
        failed_when: false
        register: wn19_au_000030_app_log_permissions

      - name: "MEDIUM | WN19-AU-000030 | AUDIT | Windows Server 2019 permissions for the Application event log must prevent access by non-privileged accounts. | Permissions warning for accounts."
        ansible.builtin.debug:
            msg:
                - "Warning!! Ensure the permissions on the Application event log (Application.evtx) are configured"
                - "to prevent standard user accounts or groups from having access. The default permissions listed below satisfy this requirement:"
                - "Eventlog - Full Control, SYSTEM - Full Control, Administrators - Full Control"
                - "Current location of Application.evtx is {{ wn19_au_000030_app_log_location.stdout | trim }}"
                - "If the location of the logs has been changed, when adding Eventlog to the permissions,"
                - "it must be entered as NT Service\\Eventlog"
                - "{{ wn19_au_000030_app_log_permissions.stdout_lines | reject('match', '^$') | list }}"

      - name: "MEDIUM | WN19-AU-000030 | AUDIT | Windows Server 2019 permissions for the Application event log must prevent access by non-privileged accounts. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000030'
  when:
      - wn19_au_000030
  tags:
      - WN19-AU-000030
      - CAT2
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - SRG-OS-000057-GPOS-00027
      - SV-205640r569188_rule
      - V-205640

- name: "MEDIUM | WN19-AU-000040 | AUDIT | Windows Server 2019 permissions for the Security event log must prevent access by non-privileged accounts."
  block:
      - name: "MEDIUM | WN19-AU-000040 | AUDIT | Windows Server 2019 permissions for the Security event log must prevent access by non-privileged accounts. | Get Default Log Locations."
        ansible.windows.win_shell: Get-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Services\EventLog\Security\ | Select-Object File | ft -HideTableHeaders
        changed_when: false
        failed_when: false
        register: wn19_au_000040_sec_log_location

      - name: "MEDIUM | WN19-AU-000040 | AUDIT | Windows Server 2019 permissions for the Security event log must prevent access by non-privileged accounts. | Get Current Permissions For Default Security Log."
        ansible.windows.win_shell: get-acl "{{ wn19_au_000040_sec_log_location.stdout | trim }}" | FL AccessToString
        changed_when: false
        failed_when: false
        register: wn19_au_000040_sec_log_permissions

      - name: "MEDIUM | WN19-AU-000040 | AUDIT | Windows Server 2019 permissions for the Security event log must prevent access by non-privileged accounts. | Permissions warning for accounts."
        ansible.builtin.debug:
            msg:
                - "Warning!! Ensure the permissions on the Security event log (Security.evtx) are configured"
                - "to prevent standard user accounts or groups from having access. The default permissions listed below satisfy this requirement:"
                - "Eventlog - Full Control, SYSTEM - Full Control, Administrators - Full Control"
                - "Current location of Security.evtx is {{ wn19_au_000040_sec_log_location.stdout | trim }}"
                - "If there is no output below If the location of the logs has been changed, when adding Eventlog to the permissions,"
                - "it must be entered as NT Service\\Eventlog"
                - "{{ wn19_au_000040_sec_log_permissions.stdout_lines | reject('match', '^$') | list }}"

      - name: "MEDIUM | WN19-AU-000040 | AUDIT | Windows Server 2019 permissions for the Security event log must prevent access by non-privileged accounts. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000040'
  when:
      - wn19_au_000040
  tags:
      - WN19-AU-000040
      - CAT2
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - SRG-OS-000057-GPOS-00027
      - SV-205641r569188_rule
      - V-205641

- name: "MEDIUM | WN19-AU-000050 | AUDIT | Windows Server 2019 permissions for the System event log must prevent access by non-privileged accounts."
  block:
      - name: "MEDIUM | WN19-AU-000050 | AUDIT | Windows Server 2019 permissions for the System event log must prevent access by non-privileged accounts. | Get Default Log Locations."
        ansible.windows.win_shell: Get-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Services\EventLog\System\ | Select-Object File | ft -HideTableHeaders
        changed_when: false
        failed_when: false
        register: wn19_au_000050_system_log_location

      - name: "MEDIUM | WN19-AU-000050 | AUDIT | Windows Server 2019 permissions for the System event log must prevent access by non-privileged accounts. | Get Current Permissions For Default System Log."
        ansible.windows.win_shell: get-acl "{{ wn19_au_000050_system_log_location.stdout | trim }}" | FL AccessToString
        changed_when: false
        failed_when: false
        register: wn19_au_000050_system_log_permissions

      - name: "MEDIUM | WN19-AU-000050 | AUDIT | Windows Server 2019 permissions for the System event log must prevent access by non-privileged accounts. | Permissions warning for accounts."
        ansible.builtin.debug:
            msg:
                - "Warning!! Ensure the permissions on the System event log (System.evtx) are configured"
                - "to prevent standard user accounts or groups from having access. The default permissions listed below satisfy this requirement:"
                - "Eventlog - Full Control, SYSTEM - Full Control, Administrators - Full Control"
                - "Current location of System.evtx is {{ wn19_au_000050_system_log_location.stdout | trim }}"
                - "If the location of the logs has been changed, when adding Eventlog to the permissions,"
                - "it must be entered as NT Service\\Eventlog"
                - "{{ wn19_au_000050_system_log_permissions.stdout_lines | reject('match', '^$') | list }}"

      - name: "MEDIUM | WN19-AU-000050 | AUDIT | Windows Server 2019 permissions for the System event log must prevent access by non-privileged accounts. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000050'
  when:
      - wn19_au_000050
  tags:
      - WN19-AU-000050
      - CAT2
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - SRG-OS-000057-GPOS-00027
      - SV-205642r569188_rule
      - V-205642

- name: "MEDIUM | WN19-AU-000060 | AUDIT | Windows Server 2019 Event Viewer must be protected from unauthorized modification and deletion."
  block:
      - name: "MEDIUM | WN19-AU-000060 | AUDIT | Windows Server 2019 Event Viewer must be protected from unauthorized modification and deletion. | Get Current Permissions For Eventvwr.exe."
        ansible.windows.win_shell: get-acl {{ item }}:\Windows\system32\Eventvwr.exe | FL AccessToString
        changed_when: false
        failed_when: false
        with_items:
            - "{{ wn19_drive_letters.stdout_lines }}"
        register: wn19_au_000060_event_viewer_permissions

      - name: "MEDIUM | WN19-AU-000060 | AUDIT | Windows Server 2019 Event Viewer must be protected from unauthorized modification and deletion. | Permissions warning for accounts."
        ansible.builtin.debug:
            msg:
                - "Warning!! Event Viewer must be protected from unauthorized modification and deletion."
                - "If any groups or accounts other than TrustedInstaller have Full control or Modify permissions, this is a finding."
                - "TrustedInstaller - Full Control"
                - "Administrators, SYSTEM, Users, ALL APPLICATION PACKAGES, ALL RESTRICTED APPLICATION PACKAGES - Read & Execute"
                - "If the location of the logs has been changed"
                - "The default location should be System32 folder."
                - "{{ wn19_au_000060_event_viewer_permissions.results[0].stdout_lines }}"

      - name: "MEDIUM | WN19-AU-000060 | AUDIT | Windows Server 2019 Event Viewer must be protected from unauthorized modification and deletion. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-AU-000060'
  when:
      - wn19_au_000060
  tags:
      - WN19-AU-000060
      - CAT2
      - CCI-001494
      - CCI-001495
      - SRG-OS-000257-GPOS-00098
      - SV-205731r569188_rule
      - V-205731

- name: "MEDIUM | WN19-AU-000070 | PATCH | Windows Server 2019 must be configured to audit Account Logon - Credential Validation successes."
  block:
      - name: "MEDIUM | WN19-AU-000070 | AUDIT | Windows Server 2019 must be configured to audit Account Logon - Credential Validation successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Credential Validation" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000070_audit

      - name: "MEDIUM | WN19-AU-000070 | PATCH | Windows Server 2019 must be configured to audit Account Logon - Credential Validation successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Credential Validation" /success:enable
        when: "'Success' not in wn19_au_000070_audit.stdout"
  when:
      - wn19_au_000070
  tags:
      - WN19-AU-000070
      - CAT2
      - CCI-000172
      - SRG-OS-000470-GPOS-00214
      - SV-205832r569188_rule
      - V-205832

- name: "MEDIUM | WN19-AU-000080 | PATCH | Windows Server 2019 must be configured to audit Account Logon - Credential Validation failures."
  block:
      - name: "MEDIUM | WN19-AU-000080 | AUDIT | Windows Server 2019 must be configured to audit Account Logon - Credential Validation failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Credential Validation" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000080_audit

      - name: "MEDIUM | WN19-AU-000080 | PATCH | Windows Server 2019 must be configured to audit Account Logon - Credential Validation failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Credential Validation" /failure:enable
        when: "'Failure' not in wn19_au_000080_audit.stdout"
  when:
      - wn19_au_000080
  tags:
      - WN19-AU-000080
      - CAT2
      - CCI-000172
      - SRG-OS-000470-GPOS-00214
      - SV-205833r569188_rule
      - V-205833

- name: "MEDIUM | WN19-AU-000090 | PATCH | Windows Server 2019 must be configured to audit Account Management - Other Account Management Events successes."
  block:
      - name: "MEDIUM | WN19-AU-000090 | AUDIT | Windows Server 2019 must be configured to audit Account Management - Other Account Management Events successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Other Account Management Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000090_audit

      - name: "MEDIUM | WN19-AU-000090 | PATCH | Windows Server 2019 must be configured to audit Account Management - Other Account Management Events successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Other Account Management Events" /success:enable
        when: "'Success' not in wn19_au_000090_audit.stdout"
  when:
      - wn19_au_000090
  tags:
      - WN19-AU-000090
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205769r852470_rule
      - V-205769

- name: "MEDIUM | WN19-AU-000100 | PATCH | Windows Server 2019 must be configured to audit Account Management - Security Group Management successes."
  block:
      - name: "MEDIUM | WN19-AU-000100 | AUDIT | Windows Server 2019 must be configured to audit Account Management - Security Group Management successes. | Get current audit events."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Security Group Management" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000100_audit

      - name: "MEDIUM | WN19-AU-000100 | PATCH | Windows Server 2019 must be configured to audit Account Management - Security Group Management successes. | Success"
        ansible.windows.win_shell: AuditPol /set /subcategory:"Security Group Management" /success:enable
        when: "'Success' not in wn19_au_000100_audit.stdout"
  when:
      - wn19_au_000100
  tags:
      - WN19-AU-000100
      - CAT2
      - CCI-000018
      - CCI-000172
      - CCI-001403
      - CCI-001404
      - CCI-001405
      - CCI-002130
      - SRG-OS-000004-GPOS-00004
      - SV-205625r852412_rule
      - V-205625

- name: "MEDIUM | WN19-AU-000110 | PATCH | Windows Server 2019 must be configured to audit Account Management - User Account Management successes."
  block:
      - name: "MEDIUM | WN19-AU-000100 | AUDIT | Windows Server 2019 must be configured to audit Account Management - User Account Management successes. | Get current audit events."
        ansible.windows.win_shell: AuditPol /get /subcategory:"User Account Management" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000110_audit

      - name: "MEDIUM | WN19-AU-000110 | PATCH | Windows Server 2019 must be configured to audit Account Management - User Account Management successes. | Success"
        ansible.windows.win_shell: AuditPol /set /subcategory:"User Account Management" /success:enable
        when: "'Success' not in wn19_au_000110_audit.stdout"
  when:
      - wn19_au_000110
  tags:
      - WN19-AU-000110
      - CAT2
      - CCI-000018
      - CCI-000172
      - CCI-001403
      - CCI-001404
      - CCI-001405
      - CCI-002130
      - SRG-OS-000004-GPOS-00004
      - SV-205626r852413_rule
      - V-205626

- name: "MEDIUM | WN19-AU-000120 | PATCH | Windows Server 2019 must be configured to audit Account Management - User Account Management failures."
  block:
      - name: "MEDIUM | WN19-AU-000120 | AUDIT | Windows Server 2019 must be configured to audit Account Management - User Account Management failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"User Account Management" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000120_audit

      - name: "MEDIUM | WN19-AU-000120 | PATCH | Windows Server 2019 must be configured to audit Account Management - User Account Management failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"User Account Management" /failure:enable
        when: "'Failure' not in wn19_au_000120_audit.stdout"
  when:
      - wn19_au_000120
  tags:
      - WN19-AU-000120
      - CAT2
      - CCI-000018
      - CCI-000172
      - CCI-001403
      - CCI-001404
      - CCI-001405
      - CCI-002130
      - SRG-OS-000004-GPOS-00004
      - SV-205627r852414_rule
      - V-205627

- name: "MEDIUM | WN19-AU-000130 | PATCH | Windows Server 2019 must be configured to audit Detailed Tracking - Plug and Play Events successes."
  block:
      - name: "MEDIUM | WN19-AU-000130 | AUDIT | Windows Server 2019 must be configured to audit Detailed Tracking - Plug and Play Events successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Plug and Play Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000130_audit

      - name: "MEDIUM | WN19-AU-000130 | PATCH | Windows Server 2019 must be configured to audit Detailed Tracking - Plug and Play Events successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Plug and Play Events" /success:enable
        when: "'Success' not in wn19_au_000130_audit.stdout"
  when:
      - wn19_au_000130
  tags:
      - WN19-AU-000130
      - CAT2
      - CCI-000172
      - SRG-OS-000474-GPOS-00219
      - SV-205839r569188_rule
      - V-205839

- name: "MEDIUM | WN19-AU-000140 | PATCH | Windows Server 2019 must be configured to audit Detailed Tracking - Process Creation successes."
  block:
      - name: "MEDIUM | WN19-AU-000140 | AUDIT | Windows Server 2019 must be configured to audit Detailed Tracking - Process Creation successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Process Creation" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_au_000140_audit

      - name: "MEDIUM | WN19-AU-000140 | PATCH | Windows Server 2019 must be configured to audit Detailed Tracking - Process Creation successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Process Creation" /success:enable
        when: "'Success' not in wn19_au_000140_audit.stdout"
  when:
      - wn19_au_000140
  tags:
      - WN19-AU-000140
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205770r852471_rule
      - V-205770

- name: "MEDIUM | WN19-AU-000160 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Account Lockout failures."
  block:
      - name: "MEDIUM | WN19-AU-000160 | AUDIT | Windows Server 2019 must be configured to audit Logon/Logoff - Account Lockout failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Account Lockout" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000160_audit

      - name: "MEDIUM | WN19-AU-000160 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Account Lockout failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Account Lockout" /failure:enable
        when: "'Failure' not in wn19_au_000160_audit.stdout"
  when:
      - wn19_au_000160
  tags:
      - WN19-AU-000160
      - CAT2
      - CCI-000172
      - CCI-001404
      - SRG-OS-000240-GPOS-00090
      - SV-205730r569188_rule
      - V-205730

- name: "MEDIUM | WN19-AU-000170 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Group Membership successes."
  block:
      - name: "MEDIUM | WN19-AU-000170 | AUDIT | Windows Server 2019 must be configured to audit Logon/Logoff - Group Membership successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Group Membership" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000170_audit

      - name: "MEDIUM | WN19-AU-000170 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Group Membership successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Group Membership" /success:enable
        when: "'Success' not in wn19_au_000170_audit.stdout"
  when:
      - wn19_au_000170
  tags:
      - WN19-AU-000170
      - CAT2
      - CCI-000172
      - SRG-OS-000470-GPOS-00214
      - SV-205834r569188_rule
      - V-205834

- name: "MEDIUM | WN19-AU-000180 | PATCH | Windows Server 2019 must be configured to audit logoff successes."
  block:
      - name: "MEDIUM | WN19-AU-000180 | AUDIT | Windows Server 2019 must be configured to audit logoff successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Logoff" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000180_audit

      - name: "MEDIUM | WN19-AU-000180 | PATCH | Windows Server 2019 must be configured to audit logoff successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Logoff" /success:enable
        when: "'Success' not in wn19_au_000180_audit.stdout"
  when:
      - wn19_au_000180
  tags:
      - WN19-AU-000180
      - CAT2
      - CCI-000172
      - CCI-000366
      - SRG-OS-000472-GPOS-00217
      - SV-205838r569188_rule
      - V-205838

- name: "MEDIUM | WN19-AU-000190 | PATCH | Windows Server 2019 must be configured to audit logon successes."
  block:
      - name: "MEDIUM | WN19-AU-000190 | AUDIT | Windows Server 2019 must be configured to audit logon successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Logon" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000190_audit

      - name: "MEDIUM | WN19-AU-000190 | PATCH  Windows Server 2019 must be configured to audit logon successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Logon" /success:enable
        when: "'Success' not in wn19_au_000190_audit.stdout"
  when:
      - wn19_au_000190
  tags:
      - WN19-AU-000190
      - CAT2
      - CCI-000067
      - CCI-000172
      - SRG-OS-000032-GPOS-00013
      - SV-205634r569188_rule
      - V-205634

- name: "MEDIUM | WN19-AU-000200 | PATCH | Windows Server 2019 must be configured to audit logon failures"
  block:
      - name: "MEDIUM | WN19-AU-000200 | AUDIT | Windows Server 2019 must be configured to audit logon failures"
        ansible.windows.win_shell: AuditPol /get /subcategory:"Logon" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000200_audit

      - name: "MEDIUM | WN19-AU-000200 | PATCH | Windows Server 2019 must be configured to audit logon failures"
        ansible.windows.win_shell: AuditPol /set /subcategory:"Logon" /failure:enable
        when: "'Failure' not in wn19_au_000200_audit.stdout"
  when:
      - wn19_au_000200
  tags:
      - WN19-AU-000200
      - CAT2
      - CCI-000067
      - CCI-000172
      - SRG-OS-000032-GPOS-00013
      - SV-205635r569188_rule
      - V-205635

- name: "MEDIUM | WN19-AU-000210 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Special Logon successes."
  block:
      - name: "MEDIUM | WN19-AU-000210 | AUDIT | Windows Server 2019 must be configured to audit Logon/Logoff - Special Logon successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Special Logon" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000210_audit

      - name: "MEDIUM | WN19-AU-000210 | PATCH | Windows Server 2019 must be configured to audit Logon/Logoff - Special Logon successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Special Logon" /success:enable
        when: "'Success' not in wn19_au_000210_audit.stdout"
  when:
      - wn19_au_000210
  tags:
      - WN19-AU-000210
      - CAT2
      - CCI-000172
      - SRG-OS-000470-GPOS-00214
      - SV-205835r569188_rule
      - V-205835

- name: |
    "MEDIUM | WN19-AU-000220 | PATCH | Windows Server 2019 must be configured to audit Object Access - Other Object Access Events successes."
    "MEDIUM | WN19-AU-000230 | PATCH | Windows Server 2019 must be configured to audit Object Access - Other Object Access Events failures."
  community.windows.win_audit_policy_system:
      subcategory: Other Object Access Events
      audit_type: success, failure
  when:
      - wn19_au_000220 or
        wn19_au_000230
  tags:
      - WN19-AU-000220
      - WN19-AU-000230
      - CAT2
      - CCI-000172
      - SRG-OS-000470-GPOS-00214
      - SV-205836r569188_rule
      - SV-205837r569188_rule
      - V-205836
      - V-205837

- name: "MEDIUM | WN19-AU-000240 | PATCH | Windows Server 2019 must be configured to audit Object Access - Removable Storage successes."
  block:
      - name: "MEDIUM | WN19-AU-000240 | AUDIT | Windows Server 2019 must be configured to audit Object Access - Removable Storage successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Removable Storage" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000240_audit

      - name: "MEDIUM | WN19-AU-000240 | PATCH | Windows Server 2019 must be configured to audit Object Access - Removable Storage successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Removable Storage" /success:enable
        when: "'Success' not in wn19_au_000240_audit.stdout"
  when:
      - wn19_au_000240
  tags:
      - WN19-AU-000240
      - CAT2
      - CCI-000172
      - SRG-OS-000474-GPOS-00219
      - SV-205840r569188_rule
      - V-205840

- name: "MEDIUM | WN19-AU-000250 | PATCH | Windows Server 2019 must be configured to audit Object Access - Removable Storage failures."
  block:
      - name: "MEDIUM | WN19-AU-000250 | AUDIT | Windows Server 2019 must be configured to audit Object Access - Removable Storage failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Removable Storage" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000250_audit

      - name: "MEDIUM | WN19-AU-000250 | PATCH | Windows Server 2019 must be configured to audit Object Access - Removable Storage failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Removable Storage" /failure:enable
        when: "'Failure' not in wn19_au_000250_audit.stdout"
  when:
      - wn19_au_000250
  tags:
      - WN19-AU-000250
      - CAT2
      - CCI-000172
      - SRG-OS-000474-GPOS-00219
      - SV-205841r569188_rule
      - V-205841

- name: "MEDIUM | WN19-AU-000260 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change successes."
  block:
      - name: "MEDIUM | WN19-AU-000260 | AUDIT | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Audit Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000260_audit

      - name: "MEDIUM | WN19-AU-000260 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Audit Policy Change" /success:enable
        when: "'Success' not in wn19_au_000260_audit.stdout"
  when:
      - wn19_au_000260
  tags:
      - WN19-AU-000260
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205771r852472_rule
      - V-205771

- name: "MEDIUM | WN19-AU-000270 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change failures."
  block:
      - name: "MEDIUM | WN19-AU-000270 | AUDIT | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Audit Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000270_audit

      - name: "MEDIUM | WN19-AU-000270 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Audit Policy Change failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Audit Policy Change" /failure:enable
        when: "'Failure' not in wn19_au_000270_audit.stdout"
  when:
      - wn19_au_000270
  tags:
      - WN19-AU-000270
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205772r852473_rule
      - V-205772

- name: "MEDIUM | WN19-AU-000280 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Authentication Policy Change successes."
  block:
      - name: "MEDIUM | WN19-AU-000280 | AUDIT | Windows Server 2019 must be configured to audit Policy Change - Authentication Policy Change successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Authentication Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000280_audit

      - name: "MEDIUM | WN19-AU-000280 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Authentication Policy Change successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Authentication Policy Change" /success:enable
        when: "'Success' not in wn19_au_000280_audit.stdout"
  when:
      - wn19_au_000280
  tags:
      - WN19-AU-000280
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205773r852474_rule
      - V-205773

- name: "MEDIUM | WN19-AU-000290 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Authorization Policy Change successes."
  block:
      - name: "MEDIUM | WN19-AU-000290 | AUDIT | Windows Server 2019 must be configured to audit Policy Change - Authorization Policy Change successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Authorization Policy Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000290_audit

      - name: "MEDIUM | WN19-AU-000290 | PATCH | Windows Server 2019 must be configured to audit Policy Change - Authorization Policy Change successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Authorization Policy Change" /success:enable
        when: "'Success' not in wn19_au_000290_audit.stdout"
  when:
      - wn19_au_000290
  tags:
      - WN19-AU-000290
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205774r852475_rule
      - V-205774

- name: "MEDIUM | WN19-AU-000300 | PATCH | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use successes."
  block:
      - name: "MEDIUM | WN19-AU-000300 | AUDIT | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Sensitive Privilege Use" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000300_audit

      - name: "MEDIUM | WN19-AU-000300 | PATCH | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Sensitive Privilege Use" /success:enable
        when: "'Success' not in wn19_au_000300_audit.stdout"
  when:
      - wn19_au_000300
  tags:
      - WN19-AU-000300
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205775r852476_rule
      - V-205775

- name: "MEDIUM | WN19-AU-000310 | PATCH | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use failures."
  block:
      - name: "MEDIUM | WN19-AU-000310 | AUDIT | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Sensitive Privilege Use" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000310_audit

      - name: "MEDIUM | WN19-AU-000310 | PATCH | Windows Server 2019 must be configured to audit Privilege Use - Sensitive Privilege Use failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Sensitive Privilege Use" /failure:enable
        when: "'Failure' not in wn19_au_000310_audit.stdout"
  when:
      - wn19_au_000310
  tags:
      - WN19-AU-000310
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205776r852477_rule
      - V-205776

- name: "MEDIUM | WN19-AU-000320 | PATCH | Windows Server 2019 must be configured to audit System - IPsec Driver successes."
  block:
      - name: "MEDIUM | WN19-AU-000320 | AUDIT | Windows Server 2019 must be configured to audit System - IPsec Driver successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"IPsec Driver" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000320_audit

      - name: "MEDIUM | WN19-AU-000320 | PATCH | Windows Server 2019 must be configured to audit System - IPsec Driver successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"IPsec Driver" /success:enable
        when: "'Success' not in wn19_au_000320_audit.stdout"
  when:
      - wn19_au_000320
  tags:
      - WN19-AU-000320
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205777r852478_rule
      - V-205777

- name: "MEDIUM | WN19-AU-000330 | PATCH | Windows Server 2019 must be configured to audit System - IPsec Driver failures."
  block:
      - name: "MEDIUM | WN19-AU-000330 | AUDIT | Windows Server 2019 must be configured to audit System - IPsec Driver failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"IPsec Driver" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000330_audit

      - name: "MEDIUM | WN19-AU-000330 | PATCH | Windows Server 2019 must be configured to audit System - IPsec Driver failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"IPsec Driver" /failure:enable
        when: "'Success' not in wn19_au_000330_audit.stdout"
  when:
      - wn19_au_000330
  tags:
      - WN19-AU-000330
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205778r852479_rule
      - V-205778

- name: "MEDIUM | WN19-AU-000340 | PATCH | Windows Server 2019 must be configured to audit System - Other System Events successes."
  block:
      - name: "MEDIUM | WN19-AU-000340 | AUDIT | Windows Server 2019 must be configured to audit System - Other System Events successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Other System Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000340_audit

      - name: "MEDIUM | WN19-AU-000340 | PATCH | Windows Server 2019 must be configured to audit System - Other System Events successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Other System Events" /success:enable
        when: "'Success' not in wn19_au_000340_audit.stdout"
  when:
      - wn19_au_000340
  tags:
      - WN19-AU-000340
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205779r852480_rule
      - V-205779

- name: "MEDIUM | WN19-AU-000350 | PATCH | Windows Server 2019 must be configured to audit System - Other System Events failures."
  block:
      - name: "MEDIUM | WN19-AU-000350 | AUDIT | Windows Server 2019 must be configured to audit System - Other System Events failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Other System Events" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000350_audit

      - name: "MEDIUM | WN19-AU-000350 | PATCH | Windows Server 2019 must be configured to audit System - Other System Events failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Other System Events" /failure:enable
        when: "'Failure' not in wn19_au_000350_audit.stdout"
  when:
      - wn19_au_000350
  tags:
      - WN19-AU-000350
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205780r852481_rule
      - V-205780

- name: "MEDIUM | WN19-AU-000360 | PATCH | Windows Server 2019 must be configured to audit System - Security State Change successes."
  block:
      - name: "MEDIUM | WN19-AU-000360 | AUDIT | Windows Server 2019 must be configured to audit System - Security State Change successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Security State Change" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000360_audit

      - name: "MEDIUM | WN19-AU-000360 | PATCH | Windows Server 2019 must be configured to audit System - Security State Change successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Security State Change" /success:enable
        when: "'Success' not in wn19_au_000360_audit.stdout"
  when:
      - wn19_au_000360
  tags:
      - WN19-AU-000360
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205781r852482_rule
      - V-205781

- name: "MEDIUM | WN19-AU-000370 | PATCH | Windows Server 2019 must be configured to audit System - Security System Extension successes."
  block:
      - name: "MEDIUM | WN19-AU-000370 | AUDIT | Must be configured to audit System - Security System Extension successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Security System Extension" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000370_audit

      - name: "MEDIUM | WN19-AU-000370 | PATCH | Must be configured to audit System - Security System Extension successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Security System Extension" /success:enable
        when: "'Success' not in wn19_au_000370_audit.stdout"
  when:
      - wn19_au_000370
  tags:
      - WN19-AU-000370
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205782r852483_rule
      - V-205782

- name: "MEDIUM | WN19-AU-000380 | PATCH | Windows Server 2019 must be configured to audit System - System Integrity successes."
  block:
      - name: "MEDIUM | WN19-AU-000380 | AUDIT | Windows Server 2019 must be configured to audit System - System Integrity successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"System Integrity" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000380_audit

      - name: "MEDIUM | WN19-AU-000380 | PATCH | Windows Server 2019 must be configured to audit System - System Integrity successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"System Integrity" /success:enable
        when: "'Success' not in wn19_au_000380_audit.stdout"
  when:
      - wn19_au_000380
  tags:
      - WN19-AU-000380
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205783r852484_rule
      - V-205783

- name: "MEDIUM | WN19-AU-000390 | PATCH | Windows Server 2019 must be configured to audit System - System Integrity failures."
  block:
      - name: "MEDIUM | WN19-AU-000390 | AUDIT | Windows Server 2019 must be configured to audit System - System Integrity failures."
        ansible.windows.win_shell: AuditPol /get /subcategory:"System Integrity" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        register: wn19_au_000390_audit

      - name: "MEDIUM | WN19-AU-000390 | PATCH | Windows Server 2019 must be configured to audit System - System Integrity failures."
        ansible.windows.win_shell: AuditPol /set /subcategory:"System Integrity" /failure:enable
        when: "'Failure' not in wn19_au_000390_audit.stdout"
  when:
      - wn19_au_000390
  tags:
      - WN19-AU-000390
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205784r852485_rule
      - V-205784

# some versions may be core/no gui, may need a prelim to detect?
- name: "MEDIUM | WN19-CC-000010 | PATCH | Windows Server 2019 must prevent the display of slide shows on the lock screen."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Personalization
      value: NoLockScreenSlideshow
      data: 1
      datatype: dword
  when:
      - wn19_cc_000010
  tags:
      - WN19-CC-000010
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205686r569188_rule
      - V-205686

- name: "MEDIUM | WN19-CC-000020 | PATCH | Windows Server 2019 must have WDigest Authentication disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\Wdigest
      value: UseLogonCredential
      data: 0
      datatype: dword
  when:
      - wn19_cc_000020
  tags:
      - WN19-CC-000020
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205687r569188_rule
      - V-205687

- name: "MEDIUM | WN19-CC-000070 | PATCH | Windows Server 2019 insecure logons to an SMB server must be disabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\LanmanWorkstation
      value: AllowInsecureGuestAuth
      data: 0
      datatype: dword
  when:
      - wn19_cc_000070
  tags:
      - WN19-CC-000070
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205861r569188_rule
      - V-205861

# verify if this applies to DC or only MS?
- name: "MEDIUM | WN19-CC-000080 | PATCH | Windows Server 2019 hardened Universal Naming Convention (UNC) paths must be defined to require mutual authentication and integrity for at least the SYSVOL and NETLOGON shares."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\NetworkProvider\HardenedPaths
      value: "{{ item }}"
      data: RequireMutualAuthentication=1, RequireIntegrity=1
      datatype: string
  with_items:
      - \\*\SYSVOL
      - \\*\NETLOGON
  when:
      - wn19_cc_000080
      - ansible_windows_domain_member
  tags:
      - WN19-CC-000080
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - 205862r857311_rule
      - V-205862

- name: "MEDIUM | WN19-CC-000090 | PATCH | Windows Server 2019 command line data must be included in process creation events."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Audit
      value: ProcessCreationIncludeCmdLine_Enabled
      data: 1
      datatype: dword
  when:
      - wn19_cc_000090
  tags:
      - WN19-CC-000090
      - CAT2
      - CCI-000135
      - SRG-OS-000042-GPOS-00020
      - SV-205638r569188_rule
      - V-205638

- name: "MEDIUM | WN19-CC-000100 | PATCH | Windows Server 2019 must be configured to enable Remote host allows delegation of non-exportable credentials."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\CredentialsDelegation
      value: AllowProtectedCreds
      data: 1
      datatype: dword
  when:
      - wn19_cc_000100
  tags:
      - WN19-CC-000100
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205863r569188_rule
      - V-205863

- name: "MEDIUM | WN19-CC-000110 | AUDIT | Windows Server 2019 virtualization-based security must be enabled with the platform security level configured to Secure Boot or Secure Boot with DMA Protection."
  block:
      - name: "MEDIUM | WN19-CC-000110 | AUDIT | Windows Server 2019 virtualization-based security must be enabled with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | EnableVirtualizationBasedSecurity Registry Add"
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard\
            state: present
            value: EnableVirtualizationBasedSecurity
            data: 1
            datatype: dword

      - name: "MEDIUM | WN19-CC-000110 | AUDIT | Windows Server 2019 virtualization-based security must be enabled with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | RequirePlatformSecurityFeatures Registry Add"
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DeviceGuard\
            state: present
            value: RequirePlatformSecurityFeatures
            data: "{{ wn19stig_dma_protection }}"
            datatype: dword

      - name: "MEDIUM | WN19-CC-000110 | AUDIT | Windows Server 2019 virtualization-based security must be enabled with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Get Status Of Device Guard Virtualization."
        ansible.windows.win_shell: Get-CimInstance -ClassName Win32_DeviceGuard -Namespace root\Microsoft\Windows\DeviceGuard | Select-Object VirtualizationBasedSecurityStatus | ft -hidetableheaders
        changed_when: false
        failed_when: false
        register: wn19_cc_000110_audit

      - name: "MEDIUM | WN19-CC-000110 | AUDIT | Windows Server 2019 virtualization-based security must be enabled with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Device Guard Virtualization based security Not Running Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 virtualization-based security must be enabled with the platform security"
                - "level configured to Secure Boot or Secure Boot with DMA Protection. The policy settings referenced in the Fix section will"
                - "configure the following registry values. However, due to hardware requirements, the registry values alone do not ensure proper"
                - "function."
        when: "'2' not in wn19_cc_000110_audit.stdout | trim"

      - name: "MEDIUM | WN19-CC-000110 | AUDIT | Windows Server 2019 virtualization-based security must be enabled with the platform security level configured to Secure Boot or Secure Boot with DMA Protection. | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-CC-000110'
        when: "'2' not in wn19_cc_000110_audit.stdout | trim"
  when:
      - wn19_cc_000110
      - ansible_windows_domain_member
  tags:
      - WN19-CC-000110
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205864r902431_rule
      - V-205864

- name: "MEDIUM | WN19-CC-000130 | PATCH | Windows Server 2019 early Launch Antimalware, Boot-Start Driver Initialization Policy must prevent boot drivers identified as bad."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Policies\EarlyLaunch
      state: present
      value: DriverLoadPolicy
      data: "{{ wn19stig_driver_load_policy }}"
      datatype: dword
  when:
      - wn19_cc_000130
  tags:
      - WN19-CC-000130
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205865r569188_rule
      - V-205865

- name: "MEDIUM | WN19-CC-000140 | PATCH | Windows Server 2019 group policy objects must be reprocessed even if they have not changed."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Group Policy\{35378EAC-683F-11D2-A89A-00C04FBBCFA2}
      value: NoGPOListChanges
      data: 0
      datatype: dword
  when:
      - wn19_cc_000140
  tags:
      - WN19-CC-000140
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205866r569188_rule
      - V-205866

- name: "MEDIUM | WN19-CC-000150 | PATCH | Windows Server 2019 downloading print driver packages over HTTP must be turned off."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Printers
      value: DisableWebPnPDownload
      data: 1
      datatype: dword
  when:
      - wn19_cc_000150
  tags:
      - WN19-CC-000150
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205688r569188_rule
      - V-205688

- name: "MEDIUM | WN19-CC-000160 | PATCH | Windows Server 2019 printing over HTTP must be turned off."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Printers
      value: DisableHTTPPrinting
      data: 1
      datatype: dword
  when:
      - wn19_cc_000160
  tags:
      - WN19-CC-000160
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205689r569188_rule
      - V-205689

- name: "MEDIUM | WN19-CC-000170 | PATCH | Windows Server 2019 network selection user interface (UI) must not be displayed on the logon screen."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
      value: DontDisplayNetworkSelectionUI
      data: 1
      datatype: dword
  when:
      - wn19_cc_000170
  tags:
      - WN19-CC-000170
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205690r569188_rule
      - V-205690

- name: "MEDIUM | WN19-CC-000180 | PATCH | Windows Server 2019 users must be prompted to authenticate when the system wakes from sleep (on battery)."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51
      value: DCSettingIndex
      data: 1
      datatype: dword
  when:
      - wn19_cc_000180
  tags:
      - WN19-CC-000180
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205867r569188_rule
      - V-205867

- name: "MEDIUM | WN19-CC-000190 | PATCH | Windows Server 2019 users must be prompted to authenticate when the system wakes from sleep (plugged in)."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Power\PowerSettings\0e796bdb-100d-47d6-a2d5-f7d2daa51f51
      value: ACSettingIndex
      data: 1
      datatype: dword
  when:
      - wn19_cc_000190
  tags:
      - WN19-CC-000190
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205868r569188_rule
      - V-205868

- name: "MEDIUM | WN19-CC-000240 | PATCH | Windows Server 2019 administrator accounts must not be enumerated during elevation."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\CredUI
      value: EnumerateAdministrators
      data: 0
      datatype: dword
  when:
      - wn19_cc_000240
  tags:
      - WN19-CC-000240
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-205714r569188_rule
      - V-205714

- name: "MEDIUM | WN19-CC-000250 | PATCH | Windows Server 2019 Telemetry must be configured to Security or Basic."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\DataCollection
      value: AllowTelemetry
      data: 0
      datatype: dword
  when:
      - wn19_cc_000250
  tags:
      - WN19-CC-000250
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205869r569188_rule
      - V-205869

- name: "MEDIUM | WN19-CC-000270 | PATCH | Windows Server 2019 Application event log size must be configured to 32768 KB or greater."
  block:
      - name: "MEDIUM | WN19-CC-000270 | PATCH | Windows Server 2019 Application event log size must be configured to 32768 KB or greater. | Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid file size set for wn19stig_application_event_log_max_size please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when: wn19stig_application_event_log_max_size < 32768

      - name: "MEDIUM | WN19-CC-000270 | PATCH | Windows Server 2019 Application event log size must be configured to 32768 KB or greater. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-CC-000270'
        when: wn19stig_application_event_log_max_size < 32768

      - name: "MEDIUM | WN19-CC-000270 | PATCH | Windows Server 2019 Application event log size must be configured to 32768 KB or greater. | Apply Log Size"
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application
            state: present
            value: MaxSize
            data: "{{ wn19stig_application_event_log_max_size }}"
            datatype: dword
        when: wn19stig_application_event_log_max_size >= 32768
  when:
      - wn19_cc_000270
  tags:
      - WN19-CC-000270
      - CAT2
      - CCI-001849
      - SRG-OS-000341-GPOS-00132
      - SV-205796r877391_rule
      - V-205796

- name: "MEDIUM | WN19-CC-000280 | PATCH | Windows Server 2019 Security event log size must be configured to 196608 KB or greater."
  block:
      - name: "MEDIUM | WN19-CC-000280 | AUDIT | Windows Server 2019 Security event log size must be configured to 196608 KB or greater. | Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid file size set for wn19stig_security_event_log_max_size please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when: wn19stig_security_event_log_max_size < 196608

      - name: "MEDIUM | WN19-CC-000280 | AUDIT | Windows Server 2019 Security event log size must be configured to 196608 KB or greater. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-CC-000280'
        when: wn19stig_security_event_log_max_size < 196608

      - name: "MEDIUM | WN19-CC-000280 | PATCH | Windows Server 2019 Security event log size must be configured to 196608 KB or greater. |Apply Log Size"
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security
            state: present
            value: MaxSize
            data: "{{ wn19stig_security_event_log_max_size }}"
            datatype: dword
        when: wn19stig_security_event_log_max_size >= 196608
  when:
      - wn19_cc_000280
  tags:
      - WN19-CC-000280
      - CAT2
      - CCI-001849
      - SRG-OS-000341-GPOS-00132
      - SV-205797r877391_rule
      - V-205797

- name: "MEDIUM | WN19-CC-000290 | PATCH | Windows Server 2019 System event log size must be configured to 32768 KB or greater."
  block:
      - name: "MEDIUM | WN19-CC-000290 | AUDIT | Windows Server 2019 System event log size must be configured to 32768 KB or greater. | Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid file size set for wn19stig_system_event_log_max_size please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when: wn19stig_system_event_log_max_size < 32768

      - name: "MEDIUM | WN19-CC-000290 | AUDIT | Windows Server 2019 System event log size must be configured to 32768 KB or greater. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-CC-000290'
        when: wn19stig_system_event_log_max_size < 32768

      - name: "MEDIUM | WN19-CC-000290 | PATCH | Windows Server 2019 System event log size must be configured to 32768 KB or greater. | Apply Log Size"
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\System
            state: present
            value: MaxSize
            data: "{{ wn19stig_system_event_log_max_size }}"
            datatype: dword
        when: wn19stig_system_event_log_max_size >= 32768
  when:
      - wn19_cc_000290
  tags:
      - WN19-CC-000290
      - CAT2
      - CCI-001849
      - SRG-OS-000341-GPOS-00132
      - SV-205798r877391_rule
      - V-205798

- name: "MEDIUM | WN19-CC-000300 | PATCH | Windows Server 2019 Windows Defender SmartScreen must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
      value: EnableSmartScreen
      data: 1
      datatype: dword
  when:
      - wn19_cc_000300
  tags:
      - WN19-CC-000300
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205692r569188_rule
      - V-205692

- name: "MEDIUM | WN19-CC-000310 | PATCH | Windows Server 2019 Explorer Data Execution Prevention must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer
      value: NoDataExecutionPrevention
      data: 0
      datatype: dword
  when:
      - wn19_cc_000310
  tags:
      - WN19-CC-000310
      - CAT2
      - CCI-002824
      - SRG-OS-000433-GPOS-00192
      - SV-205830r852532_rule
      - V-205830

- name: "MEDIUM | WN19-CC-000330 | PATCH | Windows Server 2019 File Explorer shell protocol must run in protected mode."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer
      value: PreXPSP2ShellProtocolBehavior
      data: 0
      datatype: dword
  when:
      - wn19_cc_000330
  tags:
      - WN19-CC-000330
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205872r569188_rule
      - V-205872

- name: "MEDIUM | WN19-CC-000340 | PATCH | Windows Server 2019 must not save passwords in the Remote Desktop Client."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: DisablePasswordSaving
      data: 1
      datatype: dword
  when:
      - wn19_cc_000340
  tags:
      - WN19-CC-000340
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00157
      - SV-205808r852510_rule
      - V-205808

- name: "MEDIUM | WN19-CC-000350 | PATCH | Windows Server 2019 Remote Desktop Services must prevent drive redirection."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: fDisableCdm
      data: 1
      datatype: dword
  when:
      - wn19_cc_000350
  tags:
      - WN19-CC-000350
      - CAT2
      - CCI-001090
      - SRG-OS-000138-GPOS-00069
      - SV-205722r569188_rule
      - V-205722

- name: "MEDIUM | WN19-CC-000360 | PATCH | Windows Server 2019 remote Desktop Services must always prompt a client for passwords upon connection."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: fPromptForPassword
      data: 1
      datatype: dword
  when:
      - wn19_cc_000360
  tags:
      - WN19-CC-000360
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00157
      - SV-205809r852511_rule
      - V-205809

- name: "MEDIUM | WN19-CC-000370 | PATCH | Windows Server 2019 Remote Desktop Services must require secure Remote Procedure Call (RPC) communications."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: fEncryptRPCTraffic
      data: 1
      datatype: dword
  when:
      - wn19_cc_000370
  tags:
      - WN19-CC-000370
      - CAT2
      - CCI-000068
      - CCI-001453
      - SRG-OS-000033-GPOS-00014
      - SV-205636r877398_rule
      - V-205636

- name: "MEDIUM | WN19-CC-000380 | PATCH | Windows Server 2019 remote Desktop Services must be configured with the client connection encryption set to High Level."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services
      value: MinEncryptionLevel
      data: 3
      datatype: dword
  when:
      - wn19_cc_000380
  tags:
      - WN19-CC-000380
      - CAT2
      - CCI-000068
      - CCI-001453
      - SRG-OS-000033-GPOS-00014
      - SV-205637r877398_rule
      - V-205637

- name: "MEDIUM | WN19-CC-000390 | PATCH | Windows Server 2019 must prevent attachments from being downloaded from RSS feeds."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds
      value: DisableEnclosureDownload
      data: 1
      datatype: dword
  when:
      - wn19_cc_000390
  tags:
      - WN19-CC-000390
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205873r569188_rule
      - V-205873

- name: "MEDIUM | WN19-CC-000400 | PATCH | Windows Server 2019 must disable Basic authentication for RSS feeds over HTTP."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Feeds
      value: AllowBasicAuthInClear
      data: 0
      datatype: dword
  when:
      - wn19_cc_000400
  tags:
      - WN19-CC-000400
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205693r569188_rule
      - V-205693

- name: "MEDIUM | WN19-CC-000410 | PATCH | Windows Server 2019 must prevent Indexing of encrypted files."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search
      value: AllowIndexingEncryptedStoresOrItems
      data: 0
      datatype: dword
  when:
      - wn19_cc_000410
  tags:
      - WN19-CC-000410
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205694r569188_rule
      - V-205694

- name: "MEDIUM | WN19-CC-000420 | PATCH | Windows Server 2019 must prevent users from changing installation options."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer
      value: EnableUserControl
      data: 0
      datatype: dword
  when:
      - wn19_cc_000420
  tags:
      - WN19-CC-000420
      - CAT2
      - CCI-001812
      - SRG-OS-000362-GPOS-00149
      - SV-205801r852502_rule
      - V-205801

- name: "MEDIUM | WN19-CC-000440 | PATCH | Windows Server 2019 users must be notified if a web-based program attempts to install software."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer
      value: SafeForScripting
      data: 0
      datatype: dword
  when:
      - wn19_cc_000440
  tags:
      - WN19-CC-000440
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205874r569188_rule
      - V-205874

- name: "MEDIUM | WN19-CC-000450 | PATCH | Windows Server 2019 must disable automatically signing in the last interactive user after a system-initiated restart."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: DisableAutomaticRestartSignOn
      data: 1
      datatype: dword
  when:
      - wn19_cc_000450
  tags:
      - WN19-CC-000450
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00229
      - SV-205925r877377_rule
      - V-205925

- name: "MEDIUM | WN19-CC-000451 | PATCH | The Windows Explorer Preview pane must be disabled for Windows Server 2019."
  block:
      - name: "MEDIUM | WN19-CC-000451 | PATCH | The Windows Explorer Preview pane must be disabled for Windows Server 2019. | NoPreviewPane Fix."
        ansible.windows.win_regedit:
            path: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer
            state: present
            value: NoPreviewPane
            data: 1
            datatype: dword

      - name: "MEDIUM | WN19-CC-000451 | PATCH | The Windows Explorer Preview pane must be disabled for Windows Server 2019. | NoReadingPane Fix."
        ansible.windows.win_regedit:
            path: HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer
            state: present
            value: NoReadingPane
            data: 1
            datatype: dword
  when:
      - wn19_cc_000451
  tags:
      - WN19-CC-000451
      - CAT2
      - CCI-000366
      - SRG-OS-000095-GPOS-00049
      - SV-236001r641821_rule
      - V-236001

- name: "MEDIUM | WN19-CC-000460 | PATCH | Windows Server 2019 PowerShell script block logging must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging
      value: EnableScriptBlockLogging
      data: 1
      datatype: dword
  when:
      - wn19_cc_000460
  tags:
      - WN19-CC-000460
      - CAT2
      - CCI-000135
      - SRG-OS-000042-GPOS-00020
      - SV-205639r569188_rule
      - V-205639

- name: "MEDIUM | WN19-CC-000480 | PATCH | Windows Server 2019 Windows Remote Management (WinRM) client must not allow unencrypted traffic."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client
      value: AllowUnencryptedTraffic
      data: 0
      datatype: dword
  when:
      - wn19_cc_000480
      - not win_skip_for_test
  tags:
      - WN19-CC-000480
      - CAT2
      - CCI-002890
      - CCI-003123
      - SRG-OS-000393-GPOS-00173
      - SV-205816r877382_rule
      - V-205816

- name: "MEDIUM | WN19-CC-000490 | PATCH | Windows Server 2019 Windows Remote Management (WinRM) client must not use Digest authentication."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Client
      value: AllowDigest
      data: 0
      datatype: dword
  when:
      - wn19_cc_000490
  tags:
      - WN19-CC-000490
      - CAT2
      - CCI-000877
      - SRG-OS-000125-GPOS-00065
      - SV-205712r877395_rule
      - V-205712

- name: "MEDIUM | WN19-CC-000510 | PATCH | Windows Server 2019 Windows Remote Management (WinRM) service must not allow unencrypted traffic."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service
      value: AllowUnencryptedTraffic
      data: 0
      datatype: dword
  when:
      - wn19_cc_000510
      - not win_skip_for_test
  tags:
      - WN19-CC-000510
      - CAT2
      - CCI-002890
      - CCI-003123
      - SRG-OS-000393-GPOS-00173
      - SV-205817r877382_rule
      - V-205817

- name: "MEDIUM | WN19-CC-000520 | PATCH | Windows Server 2019 Windows Remote Management (WinRM) service must not store RunAs credentials."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service
      value: DisableRunAs
      data: 1
      datatype: dword
  when:
      - wn19_cc_000520
      - not win_skip_for_test
  tags:
      - WN19-CC-000520
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00157
      - SV-205810r852512_rule
      - V-205810

- name: "MEDIUM | WN19-DC-000020 | AUDIT | Windows Server 2019 Kerberos user logon restrictions must be enforced."
  block:
      - name: "MEDIUM | WN19-DC-000020 | AUDIT | Windows Server 2019 Kerberos user logon restrictions must be enforced."
        ansible.builtin.debug:
            msg:
                - "Warning!! Kerberos user logon restrictions must be enforced."
                - "Configure the policy value in the Default Domain Policy for Computer Configuration"
                - ">> Policies >> Windows Settings >> Security Settings >> Account Policies >> Kerberos Policy"
                - ">> Enforce user logon restrictions to Enabled"

      - name: "MEDIUM | WN19-DC-000020 | AUDIT | Windows Server 2019 Kerberos user logon restrictions must be enforced. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000020'
  when:
      - wn19_dc_000020
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000020
      - CAT2
      - CCI-001941
      - CCI-001942
      - SRG-OS-000112-GPOS-00057
      - SV-205702r852424_rule
      - V-205702

- name: "MEDIUM | WN19-DC-000030 | AUDIT | Windows Server 2019 Kerberos service ticket maximum lifetime must be limited to 600 minutes or less."
  block:
      - name: "MEDIUM | WN19-DC-000030 | AUDIT | Windows Server 2019 Kerberos service ticket maximum lifetime must be limited to 600 minutes or less."
        ansible.builtin.debug:
            msg:
                - "Warning!! The Kerberos service ticket maximum lifetime must be limited to 600 minutes or less."
                - "Configure the policy value in the Default Domain Policy for Computer Configuration"
                - ">> Policies >> Windows Settings >> Security Settings >> Account Policies >> Kerberos Policy"
                - ">> Maximum lifetime for service ticket to a maximum of 600 minutes, but not 0, which equates to"
                - "Ticket doesn't expire"

      - name: "MEDIUM | WN19-DC-000030 | AUDIT | Windows Server 2019 Kerberos service ticket maximum lifetime must be limited to 600 minutes or less. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000030'
  when:
      - wn19_dc_000030
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000030
      - CAT2
      - CCI-001941
      - CCI-001942
      - SRG-OS-000112-GPOS-00057
      - SV-205703r852425_rule
      - V-205703

- name: "MEDIUM | WN19-DC-000040 | AUDIT | Windows Server 2019 Kerberos user ticket lifetime must be limited to 10 hours or less."
  block:
      - name: "MEDIUM | WN19-DC-000040 | AUDIT | Windows Server 2019 Kerberos user ticket lifetime must be limited to 10 hours or less."
        ansible.builtin.debug:
            msg:
                - "Warning!! The Kerberos user ticket lifetime must be limited to 10 hours or less."
                - "Configure the policy value in the Default Domain Policy for Computer Configuration"
                - ">> Policies >> Windows Settings >> Security Settings >> Account Policies >> Kerberos Policy"
                - ">> Maximum lifetime for user ticket to a maximum of 10 hours but not 0, which equates to Ticket doesn't expire"

      - name: "MEDIUM | WN19-DC-000040 | AUDIT | Windows Server 2019 Kerberos user ticket lifetime must be limited to 10 hours or less. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000040'
  when:
      - wn19_dc_000040
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000040
      - CAT2
      - CCI-001941
      - CCI-001942
      - SRG-OS-000112-GPOS-00057
      - SV-205704r852426_rule
      - V-205704

- name: "MEDIUM | WN19-DC-000050 | AUDIT | Windows Server 2019 Kerberos policy user ticket renewal maximum lifetime must be limited to seven days or less."
  block:
      - name: "MEDIUM | WN19-DC-000050 | AUDIT | Windows Server 2019 Kerberos policy user ticket renewal maximum lifetime must be limited to seven days or less."
        ansible.builtin.debug:
            msg:
                - "Warning!! The Kerberos policy user ticket renewal maximum lifetime must be limited to seven days or less."
                - "Configure the policy value in the Default Domain Policy for Computer Configuration"
                - ">> Policies >> Windows Settings >> Security Settings >> Account Policies >> Kerberos Policy"
                - ">> Maximum lifetime for user ticket renewal to a maximum of 7 days or less"

      - name: "MEDIUM | WN19-DC-000050 | AUDIT | Windows Server 2019 Kerberos policy user ticket renewal maximum lifetime must be limited to seven days or less.| import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000050'
  when:
      - wn19_dc_000050
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000050
      - CAT2
      - CCI-001941
      - CCI-001942
      - SRG-OS-000112-GPOS-00057
      - SV-205705r852427_rule
      - V-205705

- name: "MEDIUM | WN19-DC-000060 | AUDIT | Windows Server 2019 computer clock synchronization tolerance must be limited to 5 minutes or less."
  block:
      - name: "MEDIUM | WN19-DC-000060 | AUDIT | Windows Server 2019 computer clock synchronization tolerance must be limited to 5 minutes or less."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Windows Server 2019 computer clock synchronization tolerance"
                - "must be limited to five minutes or less."
                - "Configure the policy value in the Default Domain Policy for Computer Configuration"
                - ">> Policies >> Windows Settings >> Security Settings >> Account Policies >> Kerberos Policy"
                - ">> Maximum tolerance for computer clock synchronization to a maximum of 5 minutes or less."

      - name: "MEDIUM | WN19-DC-000060 | AUDIT | Windows Server 2019 computer clock synchronization tolerance must be limited to 5 minutes or less. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000060'
  when:
      - wn19_dc_000060
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000060
      - CAT2
      - CCI-001941
      - CCI-001942
      - SRG-OS-000112-GPOS-00057
      - SV-205706r852428_rule
      - V-205706

- name: "MEDIUM | WN19-DC-000120 | AUDIT | Windows Server 2019 data files owned by users must be on a different logical partition from the directory server data files."
  block:
      - name: "MEDIUM | WN19-DC-000120 | AUDIT | Windows Server 2019 data files owned by users must be on a different logical partition from the directory server data files. | Audit Current Dir Locations For DSA"
        ansible.windows.win_shell: Get-ItemProperty Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\NTDS\Parameters -Name "Database log files path","DSA Database file"
        changed_when: false
        failed_when: false
        register: wn19_dc_000120_audit_dirlocation

      - name: "MEDIUM | WN19-DC-000120 | AUDIT | Windows Server 2019 data files owned by users must be on a different logical partition from the directory server data files. | Get Shared Drives"
        ansible.windows.win_shell: net share
        changed_when: false
        failed_when: false
        register: wn19_dc_000120_audit_shares

      - name: "MEDIUM | WN19-DC-000120 | AUDIT | Windows Server 2019 data files owned by users must be on a different logical partition from the directory server data files. | Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Data files owned by users must be on a different logical partition"
                - "from the directory server data files. Ignore system shares (e.g., NETLOGON, SYSVOL, and administrative"
                - "shares ending in $). User shares that are hidden (ending with $) should not be ignored."
                - "If user shares are located on the same logical partition as the directory server data files, this is a finding."
                - "Note the directory locations in the values for DSA Database file"
                - "{{ wn19_dc_000120_audit_dirlocation.stdout_lines | trim }}"
                - "Note the logical drive(s) or file system partition for any organization-created data shares."
                - "{{ wn19_dc_000120_audit_shares.stdout_lines | trim }}"

      - name: "MEDIUM | WN19-DC-000120 | AUDIT | Windows Server 2019 data files owned by users must be on a different logical partition from the directory server data files. | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000120'
  when:
      - wn19_dc_000120
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000120
      - CAT2
      - CCI-001090
      - SRG-OS-000138-GPOS-00069
      - SV-205723r569188_rule
      - V-205723

- name: "MEDIUM | WN19-DC-000130 | AUDIT | Windows Server 2019 domain controllers must run on a machine dedicated to that function."
  block:
      - name: "MEDIUM | WN19-DC-000130 | AUDIT | Windows Server 2019 domain controllers must run on a machine dedicated to that function."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Domain controllers must run on a machine dedicated to that function."
                - "Review installed applications. Remove additional roles or applications such as web, database,"
                - "and email from the domain controller."

      - name: "MEDIUM | WN19-DC-000130 | AUDIT | Windows Server 2019 domain controllers must run on a machine dedicated to that function. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000130'
  when:
      - wn19_dc_000130
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000130
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205695r569188_rule
      - V-205695

- name: "MEDIUM | WN19-DC-000140 | AUDIT | Windows Server 2019 must use separate, NSA-approved (Type 1) cryptography to protect the directory data in transit for directory service implementations at a classified confidentiality level when replication data traverses a network cleared to a lower level than the data."
  block:
      - name: "MEDIUM | WN19-DC-000140 | AUDIT | Windows Server 2019 must use separate, NSA-approved (Type 1) cryptography to protect the directory data in transit for directory service implementations at a classified confidentiality level when replication data traverses a network cleared to a lower level than the data."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. If the classification level of the Windows domain controller is higher than"
                - "the level of the network traversed and NSA-approved encryption is not used, this is a finding."
                - "Configure NSA-approved (Type 1) cryptography to protect the directory data in transit for directory service"
                - "implementations at a classified confidentiality level that transfer replication data through a network cleared"
                - "to a lower level than the data."

      - name: "MEDIUM | WN19-DC-000140 | AUDIT | Windows Server 2019 must use separate, NSA-approved (Type 1) cryptography to protect the directory data in transit for directory service implementations at a classified confidentiality level when replication data traverses a network cleared to a lower level than the data. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000140'
  when:
      - wn19_dc_000140
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000140
      - CAT2
      - CCI-002450
      - SRG-OS-000396-GPOS-00176
      - SV-205818r877380_rule
      - V-205818

- name: "MEDIUM | WN19-DC-000170 | AUDIT | Windows Server 2019 Active Directory Group Policy objects must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000170 | AUDIT | Windows Server 2019 Active Directory Group Policy objects must be configured with proper audit settings."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Active Directory Group Policy objects must be configured with proper audit settings."
                - "Please review the STIG documentation for proper direction on auditing this control."

      - name: "MEDIUM | WN19-DC-000170 | AUDIT | Windows Server 2019 Active Directory Group Policy objects must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000170'
  when:
      - wn19_dc_000170
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000170
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205785r852486_rule
      - V-205785

- name: "MEDIUM | WN19-DC-000180 | AUDIT | Windows Server 2019 Active Directory Domain object must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000180 | AUDIT | Windows Server 2019 Active Directory Domain object must be configured with proper audit settings."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. The Active Directory Domain object must be configured with proper audit settings."
                - "Please review the STIG documentation for proper direction on auditing this control."

      - name: "MEDIUM | WN19-DC-000180 | AUDIT | Windows Server 2019 Active Directory Domain object must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000180'
  when:
      - wn19_dc_000180
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000180
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205786r852487_rule
      - V-205786

- name: "MEDIUM | WN19-DC-000190 | AUDIT | Windows Server 2019 Active Directory Infrastructure object must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000190 | AUDIT | Windows Server 2019 Active Directory Infrastructure object must be configured with proper audit settings."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. The Active Directory Infrastructure object must be configured with proper audit settings."
                - "Please review the STIG documentation for proper direction on auditing this control."

      - name: "MEDIUM | WN19-DC-000190 | AUDIT | Windows Server 2019 Active Directory Infrastructure object must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000190'
  when:
      - wn19_dc_000190
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000190
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205787r852488_rule
      - V-205787

- name: "MEDIUM | WN19-DC-000200 | AUDIT | Windows Server 2019 Active Directory Domain Controllers Organizational Unit (OU) object must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000200 | AUDIT | Windows Server 2019 Active Directory Domain Controllers Organizational Unit (OU) object must be configured with proper audit settings."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. The Active Directory Domain Controllers Organizational"
                - "Unit (OU) object must be configured with proper audit settings."
                - "Please review the STIG documentation for proper direction on auditing this control."

      - name: "MEDIUM | WN19-DC-000200 | AUDIT | Windows Server 2019 Active Directory Domain Controllers Organizational Unit (OU) object must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000200'
  when:
      - wn19_dc_000200
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000200
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205788r852489_rule
      - V-205788

- name: "MEDIUM | WN19-DC-000210 | AUDIT | Windows Server 2019 Active Directory AdminSDHolder object must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000210 | AUDIT | Windows Server 2019 Active Directory AdminSDHolder object must be configured with proper audit settings."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. The Active Directory AdminSDHolder object must be configured with proper audit settings."
                - "Please review the STIG documentation for proper direction on auditing this control."

      - name: "MEDIUM | WN19-DC-000210 | AUDIT | Windows Server 2019 Active Directory AdminSDHolder object must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000210'
  when:
      - wn19_dc_000210
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000210
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205789r852490_rule
      - V-205789

- name: "MEDIUM | WN19-DC-000220 | AUDIT | Windows Server 2019 Active Directory RID Manager$ object must be configured with proper audit settings."
  block:
      - name: "MEDIUM | WN19-DC-000220 | AUDIT | Windows Server 2019 Active Directory RID Manager$ object must be configured with proper audit settings."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. The Active Directory RID Manager$ object must be configured with proper audit settings."
                - "Please review the STIG documentation for proper direction on auditing this control."

      - name: "MEDIUM | WN19-DC-000220 | AUDIT | Windows Server 2019 Active Directory RID Manager$ object must be configured with proper audit settings. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000220'
  when:
      - wn19_dc_000220
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000220
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205790r852491_rule
      - V-205790

- name: "MEDIUM | WN19-DC-000230 | PATCH | Windows Server 2019 must be configured to audit Account Management - Computer Account Management successes."
  block:
      - name: "MEDIUM | WN19-DC-000230 | AUDIT | Windows Server 2019 must be configured to audit Account Management - Computer Account Management successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Computer Account Management" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_dc_000230_audit

      - name: "MEDIUM | WN19-DC-000230 | PATCH | Windows Server 2019 must be configured to audit Account Management - Computer Account Management successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Computer Account Management" /success:enable
        when: "'Success' not in wn19_dc_000230_audit.stdout"
  when:
      - wn19_dc_000230
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000230
      - CAT2
      - CCI-000018
      - CCI-000172
      - CCI-001403
      - CCI-001404
      - CCI-001405
      - CCI-002130
      - SRG-OS-000004-GPOS-00004
      - SV-205628r852415_rule
      - V-205628

- name: "MEDIUM | WN19-DC-000240 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Access successes."
  block:
      - name: "MEDIUM | WN19-DC-000240 | AUDIT | Windows Server 2019 must be configured to audit DS Access - Directory Service Access successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Directory Service Access" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_dc_000240_audit

      - name: "MEDIUM | WN19-DC-000240 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Access successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Directory Service Access" /success:enable
        when: "'Success' not in wn19_dc_000240_audit.stdout"
  when:
      - wn19_dc_000240
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000240
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205791r852492_rule
      - V-205791
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000250 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Access failures."
  block:
      - name: "MEDIUM | WN19-DC-000250 | AUDIT | Windows Server 2019 must be configured to audit DS Access - Directory Service Access failures. | Check Settings"
        ansible.windows.win_shell: AuditPol /get /subcategory:"Directory Service Access" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_dc_000250_audit

      - name: "MEDIUM | WN19-DC-000250 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Access failures. | Apply Fix"
        ansible.windows.win_shell: AuditPol /set /subcategory:"Directory Service Access" /failure:enable
        when: "'Failure' not in wn19_dc_000250_audit.stdout"
  when:
      - wn19_dc_000250
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000250
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205792r852493_rule
      - V-205792
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000260 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Changes successes."
  block:
      - name: "MEDIUM | WN19-DC-000260 | AUDIT | Windows Server 2019 must be configured to audit DS Access - Directory Service Changes successes."
        ansible.windows.win_shell: AuditPol /get /subcategory:"Directory Service Changes" -r | ConvertFrom-Csv | Select-Object -expand "Inclusion Setting"
        changed_when: false
        failed_when: false
        check_mode: false
        register: wn19_dc_000260_audit

      - name: "MEDIUM | WN19-DC-000260 | PATCH | Windows Server 2019 must be configured to audit DS Access - Directory Service Changes successes."
        ansible.windows.win_shell: AuditPol /set /subcategory:"Directory Service Changes" /success:enable
        when: "'Success' not in wn19_dc_000260_audit.stdout"
  when:
      - wn19_dc_000260
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000260
      - CAT2
      - CCI-000172
      - CCI-002234
      - SRG-OS-000327-GPOS-00127
      - SV-205793r852494_rule
      - V-205793
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000280 | AUDIT | Windows Server 2019 domain controllers must have a PKI server certificate."
  block:
      - name: "MEDIUM | WN19-DC-000280 | AUDIT | Windows Server 2019 domain controllers must have a PKI server certificate."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Domain controllers must have a PKI server certificate."
                - "Please review the STIG documentation for proper direction on auditing this control."

      - name: "MEDIUM | WN19-DC-000280 | AUDIT | Windows Server 2019 domain controllers must have a PKI server certificate. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000280'
  when:
      - wn19_dc_000280
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000280
      - CAT2
      - CCI-000185
      - SRG-OS-000066-GPOS-00034
      - SV-205645r569188_rule
      - V-205645

- name: "MEDIUM | WN19-DC-000310 | AUDIT | Windows Server 2019 Active Directory user accounts, including administrators, must be configured to require the use of a Common Access Card (CAC), Personal Identity Verification (PIV)-compliant hardware token, or Alternate Logon Token (ALT) for user authentication."
  block:
      - name: "MEDIUM | WN19-DC-000310 | AUDIT | Windows Server 2019 Active Directory user accounts, including administrators, must be configured to require the use of a Common Access Card (CAC), Personal Identity Verification (PIV)-compliant hardware token, or Alternate Logon Token (ALT) for user authentication. | Obtain Accounts"
        ansible.windows.win_shell: Get-ADUser -Filter {(Enabled -eq $True) -and (SmartcardLogonRequired -eq $False)} | FT Name
        changed_when: false
        failed_when: false
        register: wn19_dc_000310_audit

      - name: "MEDIUM | WN19-DC-000310 | AUDIT | Windows Server 2019 Active Directory user accounts, including administrators, must be configured to require the use of a Common Access Card (CAC), Personal Identity Verification (PIV)-compliant hardware token, or Alternate Logon Token (ALT) for user authentication. | Warning Message."
        ansible.builtin.debug:
            msg:
                - "Warning!! This is a manual task. Active Directory user accounts, including administrators,"
                - "must be configured to require the use of a Common Access Card (CAC), Personal Identity Verification"
                - "(PIV)-compliant hardware token, or Alternate Logon Token (ALT) for user authentication."
                - "If any user accounts, including administrators, are listed below, this is a finding."
                - "Configure all user accounts, including administrator accounts, in Active Directory to enable"
                - "the option Smart card is required for interactive logon"
                - "{{ wn19_dc_000310_audit.stdout_lines | trim }}"

      - name: "MEDIUM | WN19-DC-000310 | AUDIT | Windows Server 2019 Active Directory user accounts, including administrators, must be configured to require the use of a Common Access Card (CAC), Personal Identity Verification (PIV)-compliant hardware token, or Alternate Logon Token (ALT) for user authentication. | Warn Count"
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000310'
  when:
      - wn19_dc_000310
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000310
      - CAT2
      - CCI-000765
      - CCI-000766
      - CCI-000767
      - CCI-000768
      - CCI-001948
      - SRG-OS-000105-GPOS-00052
      - SV-205701r860029_rule
      - V-205701

- name: "MEDIUM | WN19-DC-000320 | PATCH | Windows Server 2019 domain controllers must require LDAP access signing."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\NTDS\Parameters
      value: LDAPServerIntegrity
      data: 2
      datatype: dword
  when:
      - wn19_dc_000320
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000320
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-205820r852522_rule
      - V-205820
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000330 | PATCH | Windows Server 2019 domain controllers must be configured to allow reset of machine account passwords."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: RefusePasswordChange
      data: 0
      datatype: dword
  when:
      - wn19_dc_000330
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000330
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205876r569188_rule
      - V-205876
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000340 | PATCH | Windows Server 2019 Access this computer from the network user right must only be assigned to the Administrators, Authenticated Users, and Enterprise Domain Controllers groups on domain controllers."
  ansible.windows.win_user_right:
      name: SeNetworkLogonRight
      users: "{{ wn19stig_senetworklogonright_dc }}"
      action: set
  when:
      - wn19_dc_000340
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000340
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205665r569188_rule
      - V-205665
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000350 | PATCH | Windows Server 2019 Add workstations to domain user right must only be assigned to the Administrators group on domain controllers."
  ansible.windows.win_user_right:
      name: SeMachineAccountPrivilege
      users: Administrators
      action: set
  when:
      - wn19_dc_000350
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000350
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205744r877392_rule
      - V-205744
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000360 | PATCH | Windows Server 2019 Allow log on through Remote Desktop Services user right must only be assigned to the Administrators group on domain controllers."
  ansible.windows.win_user_right:
      name: SeRemoteInteractiveLogonRight
      users: Administrators
      action: set
  when:
      - wn19_dc_000360
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000360
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205666r569188_rule
      - V-205666
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000370 | PATCH | Windows Server 2019 Deny access to this computer from the network user right on domain controllers must be configured to prevent unauthenticated access."
  ansible.windows.win_user_right:
      name: SeDenyNetworkLogonRight
      users: Guests
      action: set
  when:
      - wn19_dc_000370
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000370
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205667r569188_rule
      - V-205667
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000380 | PATCH | Windows Server 2019 Deny log on as a batch job user right on domain controllers must be configured to prevent unauthenticated access."
  ansible.windows.win_user_right:
      name: SeDenyBatchLogonRight
      users: Guests
      action: set
  when:
      - wn19_dc_000380
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000380
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205668r569188_rule
      - V-205668
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000390 | PATCH | Windows Server 2019 Deny log on as a service user right must be configured to include no accounts or groups (blank) on domain controllers."
  community.windows.win_security_policy:
      section: Privilege Rights
      key: SeDenyServiceLogonRight
      value: ""
  when:
      - wn19_dc_000390
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000390
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205669r569188_rule
      - V-205669
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000400 | PATCH | Windows Server 2019 Deny log on locally user right on domain controllers must be configured to prevent unauthenticated access."
  ansible.windows.win_user_right:
      name: SeDenyInteractiveLogonRight
      users: Guests
      action: set
  when:
      - wn19_dc_000400
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000400
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205670r569188_rule
      - V-205670
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000410 | PATCH | Windows Server 2019 Deny log on through Remote Desktop Services user right on domain controllers must be configured to prevent unauthenticated access."
  ansible.windows.win_user_right:
      name: SeDenyRemoteInteractiveLogonRight
      users: Guests
      action: set
  when:
      - wn19_dc_000410
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000410
      - CAT2
      - CCI-002314
      - SRG-OS-000297-GPOS-00115
      - SV-205732r852430_rule
      - V-205732
      - NeedToTestDomainController

- name: "MEDIUM | WN19-DC-000420 | PATCH | Windows Server 2019 Enable computer and user accounts to be trusted for delegation user right must only be assigned to the Administrators group on domain controllers."
  ansible.windows.win_user_right:
      name: SeEnableDelegationPrivilege
      users: Administrators
      action: set
  when:
      - wn19_dc_000420
      - ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-DC-000420
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205745r877392_rule
      - V-205745
      - NeedToTestDomainController

## This seems highly prone to breakage. It's a DC account and has been replicated. May Cause, Kerberos tickets stoppage and break authentication protocols.
## https://www.kjctech.net/do-you-need-to-update-krbtgt-account-password/
- name: "MEDIUM | WN19-DC-000430 | AUDIT | The password for the krbtgt account on a domain must be reset at least every 180 days."
  block:
      - name: "MEDIUM | WN19-DC-000430 | AUDIT | The password for the krbtgt account on a domain must be reset at least every 180 days."
        ansible.windows.win_shell: "Get-ADUser krbtgt -Property PasswordLastSet | Where-Object {$_.PasswordLastSet -lt ((Get-Date).AddDays(-{{ wn19stig_krbtgt_account_pass_age }}))} | Select-Object -ExpandProperty PasswordLastSet"
        changed_when: false
        failed_when: false
        register: wn19_dc_000430_audit
        when: wn19stig_krbtgt_account_pass_age <= 180

      - name: "MEDIUM | WN19-DC-000430 | AUDIT | The password for the krbtgt account on a domain must be reset at least every 180 days. | Warning Message Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have a invalid number of days set for wn19stig_krbtgt_account_pass_age please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when: wn19stig_krbtgt_account_pass_age > 180

      - name: "MEDIUM | WN19-DC-000430 | AUDIT | The password for the krbtgt account on a domain must be reset at least every 180 days. | Warning Message Account."
        ansible.builtin.debug:
            msg:
                - "Warning!! The password for the krbtgt account on a domain must be reset at least every 180 days."
                - "Your password is currently out of STIG compliance and has not been reset in the last 180 days."
                - "{{ wn19_dc_000430_audit.stdout_lines | trim }}"
        when:
            - wn19stig_krbtgt_account_pass_age <= 180
            - wn19_dc_000430_audit.stdout | length > 0

      - name: "MEDIUM | WN19-DC-000430 | AUDIT | The password for the krbtgt account on a domain must be reset at least every 180 days. | import reuseable task."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-DC-000430'
        when:
            - wn19stig_krbtgt_account_pass_age <= 180
            - wn19_dc_000430_audit.stdout | length > 0 or
              wn19stig_krbtgt_account_pass_age > 180
  when:
      - wn19_dc_000430
      - ansible_windows_domain_role == "Primary domain controller"
      - win2019stig_complexity_high
  tags:
      - WN19-DC-000430
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205877r857315_rule
      - V-205877
      - NeedToTestDomainController

- name: "MEDIUM | WN19-MS-000020 | PATCH | Windows Server 2019 local administrator accounts must have their privileged token filtered to prevent elevated privileges from being used over the network on domain systems."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: LocalAccountTokenFilterPolicy
      data: 0
      datatype: dword
  when:
      - wn19_ms_000020
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-MS-000020
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-205715r857320_rule
      - V-205715
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000030 | PATCH | Windows Server 2019 local users on domain-joined member servers must not be enumerated."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
      value: EnumerateLocalUsers
      data: 0
      datatype: dword
  when:
      - wn19_ms_000030
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-MS-000030
      - CAT2
      - CCI-000381
      - SRG-OS-000095-GPOS-00049
      - SV-205696r857322_rule
      - V-205696
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000040 | PATCH | Windows Server 2019 must restrict unauthenticated Remote Procedure Call (RPC) clients from connecting to the RPC server on domain-joined member servers and standalone or nondomain-joined systems."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Rpc
      value: RestrictRemoteClients
      data: 1
      datatype: dword
  when:
      - wn19_ms_000040
      - not ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-MS-000040
      - CAT2
      - CCI-001967
      - SRG-OS-000379-GPOS-00164
      - SV-205814r877039_rule
      - V-205814

- name: "MEDIUM | WN19-MS-000050 | PATCH | Windows Server 2019 must limit the caching of logon credentials to four or less on domain-joined member servers."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon
      value: CachedLogonsCount
      data: 4
      datatype: dword
  when:
      - wn19_ms_000050
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-MS-000050
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205906r857326_rule
      - V-205906

- name: "MEDIUM | WN19-MS-000060 | PATCH | Windows Server 2019 must restrict remote calls to the Security Account Manager (SAM) to Administrators on domain-joined member servers and standalone or nondomain-joined systems."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
      value: RestrictRemoteSAM
      data: O:BAG:BAD:(A;;RC;;;BA)
      datatype: string
  when:
      - wn19_ms_000060
      - not ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-MS-000060
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205747r877392_rule
      - V-205747

- name: "MEDIUM | WN19-MS-000070 | PATCH | Windows Server 2019 Access this computer from the network user right must only be assigned to the Administrators and Authenticated Users groups on domain-joined member servers and standalone systems."
  ansible.windows.win_user_right:
      name: SeNetworkLogonRight
      users: "{{ wn19stig_senetworklogonright }}"
      action: set
  when:
      - wn19_ms_000070
      - not ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-MS-000070
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205671r857331_rule
      - V-205671

- name: "MEDIUM | WN19-MS-000080 | PATCH | Windows Server 2019 Deny access to this computer from the network user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and local accounts and from unauthenticated access on all systems."
  block:
      - name: "MEDIUM | WN19-MS-000080 | PATCH | Windows Server 2019 Deny access to this computer from the network user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and local accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyNetworkLogonRight
            users:
                - Guests
                - Enterprise Admins
                - Domain Admins
                - Local account
                - Local account and member of Administrators group
            action: set
        when: ansible_windows_domain_role == "Member server"

      - name: "MEDIUM | WN19-MS-000080 | PATCH | Windows Server 2019 Deny access to this computer from the network user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and local accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyNetworkLogonRight
            users: Guests
            action: set
        when: not ansible_windows_domain_member
  when:
      - wn19_ms_000080
      - not ansible_windows_domain_role == "Primary domain controller"
  tags:
      - WN19-MS-000080
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205672r857333_rule
      - V-205672
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000090 | PATCH | Windows Server 2019 Deny log on as a batch job user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
  block:
      - name: "MEDIUM | WN19-MS-000090 | PATCH | DOMAIN MEMBER | Windows Server 2019 Deny log on as a batch job user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyBatchLogonRight
            users:
                - Enterprise Admins
                - Domain Admins
                - Guests
            action: set
        when: ansible_windows_domain_role == "Member server"

      - name: "MEDIUM | WN19-MS-000090 | PATCH | STAND-ALONE | Windows Server 2019 Deny log on as a batch job user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyBatchLogonRight
            users:
                - Guests
            action: set
        when: not ansible_windows_domain_member
  when:
      - wn19_ms_000090
  tags:
      - WN19-MS-000090
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205673r857335_rule
      - V-205673
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000100 | PATCH | Windows Server 2019 Deny log on as a service user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts. No other groups or accounts must be assigned this right."
  ansible.windows.win_user_right:
      name: SeDenyServiceLogonRight
      users:
          - Enterprise Admins
          - Domain Admins
      action: set
  when:
      - wn19_ms_000100
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-MS-000100
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205674r891848_rule
      - V-205674
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000110 | PATCH | Windows Server 2019 Deny log on locally user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
  block:
      - name: "MEDIUM | WN19-MS-000110 | PATCH | DOMAIN MEMBER | Windows Server 2019 Deny log on locally user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyInteractiveLogonRight
            users:
                - Guests
                - Enterprise Admins
                - Domain Admins
            action: set
        when: ansible_windows_domain_role == "Member server"

      - name: "MEDIUM | WN19-MS-000110 | PATCH | STAND-ALONE | Windows Server 2019 Deny log on locally user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyInteractiveLogonRight
            users:
                - Guests
            action: set
        when: not ansible_windows_domain_member
  when:
      - wn19_ms_000110
  tags:
      - WN19-MS-000110
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205675r857337_rule
      - V-205675
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000120 | PATCH | Windows Server 2019 Deny log on through Remote Desktop Services user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and all local accounts and from unauthenticated access on all systems."
  block:
      - name: "MEDIUM | WN19-MS-000120 | PATCH | DOMAIN MEMBER | Windows Server 2019 Deny log on through Remote Desktop Services user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and all local accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyRemoteInteractiveLogonRight
            users:
                - Guests
                - Local account
                - Enterprise Admins
                - Domain Admins
            action: set
        when: ansible_windows_domain_role == "Member server"

      - name: "MEDIUM | WN19-MS-000120 | PATCH | STAND-ALONE | Windows Server 2019 Deny log on through Remote Desktop Services user right on domain-joined member servers must be configured to prevent access from highly privileged domain accounts and all local accounts and from unauthenticated access on all systems."
        ansible.windows.win_user_right:
            name: SeDenyRemoteInteractiveLogonRight
            users:
                - Guests
            action: set
        when: not ansible_windows_domain_member
  when:
      - wn19_ms_000120
  tags:
      - WN19-MS-000120
      - CAT2
      - CCI-002314
      - SRG-OS-000297-GPOS-00115
      - SV-205733r860033_rule
      - V-205733
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-MS-000130 | PATCH | Windows Server 2019 Enable computer and user accounts to be trusted for delegation user right must not be assigned to any groups or accounts on domain-joined member servers and standalone or nondomain-joined systems."
  community.windows.win_security_policy:
      section: Privilege Rights
      key: SeEnableDelegationPrivilege
      value: ""
  when:
      - wn19_ms_000130
  tags:
      - WN19-MS-000130
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205748r877392_rule
      - V-205748

- name: "MEDIUM | WN19-PK-000010 | AUDIT | Windows Server 2019 must have the DoD Root Certificate Authority (CA) certificates installed in the Trusted Root Store."
  block:
      - name: "MEDIUM | WN19-PK-000010 | AUDIT | Windows Server 2019 must have the DoD Root Certificate Authority (CA) certificates installed in the Trusted Root Store. | Check For DOD Root CA 3."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\root | Where {$_.Subject -Like "*DoD Root CA 3*" -and $_.Thumbprint -Like "D73CA91102A2204A36459ED32213B467D7CE97FB"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn19_pk_000010_root_3_Check

      - name: "MEDIUM | WN19-PK-000010 | AUDIT | Windows Server 2019 must have the DoD Root Certificate Authority (CA) certificates installed in the Trusted Root Store. | Check For DOD Root CA 4."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\root | Where {$_.Subject -Like "*DoD Root CA 4*" -and $_.Thumbprint -Like "B8269F25DBD937ECAFD4C35A9838571723F2D026"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn19_pk_000010_root_4_Check

      - name: "MEDIUM | WN19-PK-000010 | AUDIT | Windows Server 2019 must have the DoD Root Certificate Authority (CA) certificates installed in the Trusted Root Store. | Check For DOD Root CA 5."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\root | Where {$_.Subject -Like "*DoD Root CA 5*" -and $_.Thumbprint -Like "4ECB5CC3095670454DA1CBD410FC921F46B8564B"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn19_pk_000010_root_5_Check

      - name: "MEDIUM | WN19-PK-000010 | AUDIT | Windows Server 2019 must have the DoD Root Certificate Authority (CA) certificates installed in the Trusted Root Store. | Warning!! No DOD Root CA 3 Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The DOD Root CA 3 is not installed on the system or"
                - "contains a incorrect Thumbprint for the Root CA Certificate."
                - "Please refer to STIG documentation for proper cert to be installed."
        when:
            - wn19_pk_000010_root_3_Check.stdout == ""

      - name: "MEDIUM | WN19-PK-000010 | AUDIT | Windows Server 2019 must have the DoD Root Certificate Authority (CA) certificates installed in the Trusted Root Store. | Warning!! No DOD Root CA 4 Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The DOD Root CA 4 is not installed on the system or"
                - "contains a incorrect Thumbprint for the Root CA Certificate."
                - "Please refer to STIG documentation for proper cert to be installed."
        when:
            - wn19_pk_000010_root_4_Check.stdout == ""

      - name: "MEDIUM | WN19-PK-000010 | AUDIT | Windows Server 2019 must have the DoD Root Certificate Authority (CA) certificates installed in the Trusted Root Store. | Warning!! No DOD Root CA 5 Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The DOD Root CA 5 is not installed on the system or"
                - "contains a incorrect Thumbprint for the Root CA Certificate."
                - "Please refer to STIG documentation for proper cert to be installed."
        when: wn19_pk_000010_root_5_Check.stdout == ""

      - name: "MEDIUM | WN19-PK-000010 | AUDIT | Windows Server 2019 must have the DoD Root Certificate Authority (CA) certificates installed in the Trusted Root Store. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-PK-000010'
        when:
            - wn19_pk_000010_root_3_Check.stdout == "" or
              wn19_pk_000010_root_4_Check.stdout == "" or
              wn19_pk_000010_root_5_Check.stdout == ""
  when:
      - wn19_pk_000010
  tags:
      - WN19-PK-000010
      - CAT2
      - CCI-000185
      - CCI-002470
      - SRG-OS-000066-GPOS-00034
      - SV-205648r890527_rule
      - V-205648

- name: "MEDIUM | WN19-PK-000020 | AUDIT | Windows Server 2019 must have the DoD Interoperability Root Certificate Authority (CA) cross-certificates installed in the Untrusted Certificates Store on unclassified systems."
  block:
      - name: "MEDIUM | WN19-PK-000020 | AUDIT | Windows Server 2019 must have the DoD Interoperability Root Certificate Authority (CA) cross-certificates installed in the Untrusted Certificates Store on unclassified systems. | DoD Interoperability Root CA 2 49 Thumb Check."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\disallowed | Where {$_.Issuer -Like "*DoD Interoperability*" -and $_.Subject -Like "*DoD*" -and $_.Thumbprint -Like "49CBE933151872E17C8EAE7F0ABA97FB610F6477"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn19_pk_000020_interop_check_for_49

      - name: "MEDIUM | WN19-PK-000020 | AUDIT | Windows Server 2019 must have the DoD Interoperability Root Certificate Authority (CA) cross-certificates installed in the Untrusted Certificates Store on unclassified systems. | Warning!! No DoD Interoperability Root CA 2 Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The DoD Root CA 3 - DoD Interoperability Root CA 2 certificate is not installed on the system or"
                - "does not contain Thumbprint 49CBE933151872E17C8EAE7F0ABA97FB610F6477 for the Certificate."
        when:
            - wn19_pk_000020_interop_check_for_49.stdout == ""

      - name: "MEDIUM | WN19-PK-000020 | AUDIT | Windows Server 2019 must have the DoD Interoperability Root Certificate Authority (CA) cross-certificates installed in the Untrusted Certificates Store on unclassified systems. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-PK-000020'
        when:
            - wn19_pk_000020_interop_check_for_49.stdout == ""
  when:
      - wn19_pk_000020
  tags:
      - WN19-PK-000020
      - CAT2
      - CCI-000185
      - CCI-002470
      - SRG-OS-000066-GPOS-00034
      - SV-205649r894615_rule
      - V-205649

- name: "MEDIUM | WN19-PK-000030 | AUDIT | Windows Server 2019 must have the US DoD CCEB Interoperability Root CA cross-certificates in the Untrusted Certificates Store on unclassified systems."
  block:
      - name: "MEDIUM | WN19-PK-000030 | AUDIT | Windows Server 2019 must have the US DoD CCEB Interoperability Root CA cross-certificates in the Untrusted Certificates Store on unclassified systems. | DoD CCEB Interop Check."
        ansible.windows.win_shell: Get-ChildItem -Path Cert:Localmachine\disallowed | Where {$_.Issuer -Like "*US DoD CCEB Interoperability Root CA 2*" -and $_.Subject -Like "*DoD Root CA 3*" -and $_.Thumbprint -Like "9B74964506C7ED9138070D08D5F8B969866560C8"} | FL Subject, Issuer, Thumbprint, NotAfter
        changed_when: false
        failed_when: false
        register: wn19_pk_000030_cceb_interop_check

      - name: "MEDIUM | WN19-PK-000030 | AUDIT | Windows Server 2019 must have the US DoD CCEB Interoperability Root CA cross-certificates in the Untrusted Certificates Store on unclassified systems. | Warning!! No DoD Root CA 3 - US DoD CCEB Interoperability Certificate Installed."
        ansible.builtin.debug:
            msg:
                - "Warning!! The DoD Root CA 3 - US DoD CCEB Interoperability Root CA 2 certificate is not installed on the system or"
                - "does not contain Thumbprint 9B74964506C7ED9138070D08D5F8B969866560C8 for the Certificate."
        when:
            - wn19_pk_000030_cceb_interop_check.stdout == ""

      - name: "MEDIUM | WN19-PK-000030 | AUDIT | Windows Server 2019 must have the US DoD CCEB Interoperability Root CA cross-certificates in the Untrusted Certificates Store on unclassified systems. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-PK-000030'
        when:
            - wn19_pk_000030_cceb_interop_check.stdout == ""
  when:
      - wn19_pk_000030
  tags:
      - WN19-PK-000030
      - CAT2
      - CCI-000185
      - CCI-002470
      - SRG-OS-000066-GPOS-00034
      - SV-205650r890530_rule
      - V-205650

- name: "MEDIUM | WN19-SO-000010 | PATCH | Windows Server 2019 must have the built-in guest account disabled."
  community.windows.win_security_policy:
      section: System Access
      key: EnableGuestAccount
      value: 0
  when:
      - wn19_so_000010
  tags:
      - WN19-SO-000010
      - CAT2
      - CCI-000804
      - SRG-OS-000121-GPOS-00062
      - SV-205709r569188_rule
      - V-205709

- name: "MEDIUM | WN19-SO-000030 | PATCH | Windows Server 2019 built-in administrator account must be renamed."
  block:
      - name: "MEDIUM | WN19-SO-000030 | AUDIT | Windows Server 2019 built-in administrator account must be renamed. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have not changed the default name for wn19stig_newadministratorname, please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when: "'adminchangethis' in wn19stig_newadministratorname"

      - name: "MEDIUM | WN19-SO-000030 | AUDIT | Windows Server 2019 built-in administrator account must be renamed. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-SO-000030'
        when: "'adminchangethis' in wn19stig_newadministratorname"

      - name: "MEDIUM | WN19-SO-000030 | PATCH | Windows Server 2019 built-in administrator account must be renamed. | Set Variable."
        community.windows.win_security_policy:
            section: System Access
            key: NewAdministratorName
            value: "{{ wn19stig_newadministratorname }}"
        when: "'adminchangethis' not in wn19stig_newadministratorname"
  when:
      - wn19_so_000030
      - not win_skip_for_test
  tags:
      - WN19-SO-000030
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205909r569188_rule
      - V-205909

- name: "MEDIUM | WN19-SO-000040 | PATCH | Windows Server 2019 built-in guest account must be renamed."
  block:
      - name: "MEDIUM | WN19-SO-000040 | AUDIT | Windows Server 2019 built-in guest account must be renamed. | Warning For Bad Variable."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have not changed the default name for wn19stig_newguestname, please read"
                - "the notes for the variable and make the necessary change to the variable to be in compliance."
        when: "'guestchangethis' in wn19stig_newguestname"

      - name: "MEDIUM | WN19-SO-000040 | AUDIT | Windows Server 2019 built-in guest account must be renamed. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-SO-000040'
        when: "'guestchangethis' in wn19stig_newguestname"

      - name: "MEDIUM | WN19-SO-000040 | PATCH | Windows Server 2019 built-in guest account must be renamed. | Set Variable."
        community.windows.win_security_policy:
            section: System Access
            key: NewGuestName
            value: "{{ wn19stig_newguestname }}"
        when: "'guestchangethis' not in wn19stig_newguestname"
  when:
      - wn19_so_000040
  tags:
      - WN19-SO-000040
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205910r569188_rule
      - V-205910

- name: "MEDIUM | WN19-SO-000050 | PATCH | Windows Server 2019 must force audit policy subcategory settings to override audit policy category settings."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\
      value: SCENoApplyLegacyAuditPolicy
      data: 1
      datatype: dword
  when:
      - wn19_so_000050
  tags:
      - WN19-SO-000050
      - CAT2
      - CCI-000169
      - SRG-OS-000062-GPOS-00031
      - SV-205644r569188_rule
      - V-205644

- name: "MEDIUM | WN19-SO-000060 | PATCH | Windows Server 2019 setting Domain member: Digitally encrypt or sign secure channel data (always) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: RequireSignOrSeal
      data: 1
      datatype: dword
  when:
      - wn19_so_000060
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-SO-000060
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-205821r852523_rule
      - V-205821
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-SO-000070 | PATCH | Windows Server 2019 setting Domain member: Digitally encrypt secure channel data (when possible) must be configured to enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters\
      value: SealSecureChannel
      data: 1
      datatype: dword
  when:
      - wn19_so_000070
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-SO-000070
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-205822r852524_rule
      - V-205822
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-SO-000080 | PATCH | Windows Server 2019 setting Domain member: Digitally sign secure channel data (when possible) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: SignSecureChannel
      data: 1
      datatype: dword
  when:
      - wn19_so_000080
      - ansible_windows_domain_role == "Member server"
  tags:
      - WN19-SO-000080
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-205823r852525_rule
      - V-205823
      - NeedToTestMemberServer

- name: "MEDIUM | WN19-SO-000090 | PATCH | Windows Server 2019 computer account password must not be prevented from being reset."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: DisablePasswordChange
      data: 0
      datatype: dword
  when:
      - wn19_so_000090
  tags:
      - WN19-SO-000090
      - CAT2
      - CCI-001967
      - SRG-OS-000379-GPOS-00164
      - SV-205815r877039_rule
      - V-205815

- name: "MEDIUM | WN19-SO-000100 | PATCH | Windows Server 2019 maximum age for machine account passwords must be configured to 30 days or less."
  block:
      - name: "MEDIUM | WN19-SO-000100 | AUDIT | Windows Server 2019 maximum age for machine account passwords must be configured to 30 days or less. | Number Of Days Check."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have have not set the right number of days for wn19stig_machineaccountpsswd_max_age"
                - "Please read the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_machineaccountpsswd_max_age > 30 or
              wn19stig_machineaccountpsswd_max_age == 0

      - name: "MEDIUM | WN19-SO-000100 | AUDIT | Windows Server 2019 maximum age for machine account passwords must be configured to 30 days or less. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-SO-000100'
        when:
            - wn19stig_machineaccountpsswd_max_age > 30 or
              wn19stig_machineaccountpsswd_max_age == 0

      - name: "MEDIUM | WN19-SO-000100 | PATCH | Windows Server 2019 maximum age for machine account passwords must be configured to 30 days or less. | Apply Variable."
        ansible.windows.win_regedit:
            path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
            state: present
            value: MaximumPasswordAge
            data: "{{ wn19stig_machineaccountpsswd_max_age }}"
            datatype: dword
        when:
            - wn19stig_machineaccountpsswd_max_age <= 30
            - wn19stig_machineaccountpsswd_max_age != 0
  when:
      - wn19_so_000100
  tags:
      - WN19-SO-000100
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205911r569188_rule
      - V-205911

- name: "MEDIUM | WN19-SO-000110 | PATCH | Windows Server 2019 must be configured to require a strong session key."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\Netlogon\Parameters
      value: RequireStrongKey
      data: 1
      datatype: dword
  when:
      - wn19_so_000110
  tags:
      - WN19-SO-000110
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-205824r852526_rule
      - V-205824

- name: "MEDIUM | WN19-SO-000120 | PATCH | Windows Server 2019 machine inactivity limit must be set to 15 minutes or less, locking the system with the screen saver."
  block:
      - name: "MEDIUM | WN19-SO-000120 | AUDIT | Windows Server 2019 machine inactivity limit must be set to 15 minutes or less, locking the system with the screen saver. | Number Of Seconds Check."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have have not set the right number of seconds for wn19stig_inactivitytimeoutsecs"
                - "Please read the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_inactivitytimeoutsecs > 900 or
              wn19stig_inactivitytimeoutsecs == 0

      - name: "MEDIUM | WN19-SO-000120 | AUDIT | Windows Server 2019 machine inactivity limit must be set to 15 minutes or less, locking the system with the screen saver. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-SO-000120'
        when:
            - wn19stig_inactivitytimeoutsecs > 900 or
              wn19stig_inactivitytimeoutsecs == 0

      - name: "MEDIUM | WN19-SO-000120 | PATCH | Windows Server 2019 machine inactivity limit must be set to 15 minutes or less, locking the system with the screen saver. | Apply Variable."
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
            state: present
            value: InactivityTimeoutSecs
            data: "{{ wn19stig_inactivitytimeoutsecs }}"
            datatype: dword
        when:
            - wn19stig_inactivitytimeoutsecs <= 900
            - wn19stig_inactivitytimeoutsecs != 0
  when:
      - wn19_so_000120
  tags:
      - WN19-SO-000120
      - CAT2
      - CCI-000056
      - CCI-000057
      - CCI-000060
      - SRG-OS-000028-GPOS-00009
      - SV-205633r569188_rule
      - V-205633

- name: "MEDIUM | WN19-SO-000130 | PATCH | Windows Server 2019 required legal notice must be configured to display before console logon."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: LegalNoticeText
      data: "{{ wn19stig_legalnoticetext }}"
      datatype: string
  when:
      - wn19_so_000130
  tags:
      - WN19-SO-000130
      - CAT2
      - CCI-000048
      - CCI-000050
      - CCI-001384
      - CCI-001385
      - CCI-001386
      - CCI-001387
      - CCI-001388
      - SRG-OS-000023-GPOS-00006
      - SV-205631r569188_rule
      - V-205631

- name: "MEDIUM | WN19-SO-000150 | PATCH | Windows Server 2019 Smart Card removal option must be configured to Force Logoff or Lock Workstation."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon
      value: scremoveoption
      data: 1
      datatype: string
  when:
      - wn19_so_000150
  tags:
      - WN19-SO-000150
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205912r569188_rule
      - V-205912

- name: "MEDIUM | WN19-SO-000160 | PATCH | Windows Server 2019 etting Microsoft network client: Digitally sign communications (always) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters
      value: RequireSecuritySignature
      data: 1
      datatype: dword
  when:
      - wn19_so_000160
  tags:
      - WN19-SO-000160
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-205825r852527_rule
      - V-205825

- name: "MEDIUM | WN19-SO-000170 | PATCH | Windows Server 2019 setting Microsoft network client: Digitally sign communications (if server agrees) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters
      value: EnableSecuritySignature
      data: 1
      datatype: dword
  when:
      - wn19_so_000170
  tags:
      - WN19-SO-000170
      - CAT2
      - CCI-002421
      - CCI-002418
      - SRG-OS-000423-GPOS-00187
      - SV-205826r852528_rule
      - V-205826

- name: "MEDIUM | WN19-SO-000180 | PATCH | Windows Server 2019 unencrypted passwords must not be sent to third-party Server Message Block (SMB) servers."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters
      value: EnablePlainTextPassword
      data: 0
      datatype: dword
  when:
      - wn19_so_000180
  tags:
      - WN19-SO-000180
      - CAT2
      - CCI-000197
      - SRG-OS-000074-GPOS-00042
      - SV-205655r877396_rule
      - V-205655

- name: "MEDIUM | WN19-SO-000190 | PATCH | Windows Server 2019 setting Microsoft network server: Digitally sign communications (always) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters
      value: RequireSecuritySignature
      data: 1
      datatype: dword
  when:
      - wn19_so_000190
  tags:
      - WN19-SO-000190
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-205827r852529_rule
      - V-205827

- name: "MEDIUM | WN19-SO-000200 | PATCH | Windows Server 2019 setting Microsoft network server: Digitally sign communications (if client agrees) must be configured to Enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters
      value: EnableSecuritySignature
      data: 1
      datatype: dword
  when:
      - wn19_so_000200
  tags:
      - WN19-SO-000200
      - CAT2
      - CCI-002418
      - CCI-002421
      - SRG-OS-000423-GPOS-00187
      - SV-205828r852530_rule
      - V-205828

- name: "MEDIUM | WN19-SO-000240 | PATCH | Windows Server 2019 must be configured to prevent anonymous users from having the same permissions as the Everyone group."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
      value: EveryoneIncludesAnonymous
      data: 0
      datatype: dword
  when:
      - wn19_so_000240
  tags:
      - WN19-SO-000240
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205915r569188_rule
      - V-205915

- name: "MEDIUM | WN19-SO-000260 | PATCH | Windows Server 2019 services using Local System that use Negotiate when reverting to NTLM authentication must use the computer identity instead of authenticating anonymously."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa
      value: UseMachineId
      data: 1
      datatype: dword
  when:
      - wn19_so_000260
  tags:
      - WN19-SO-000260
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205916r569188_rule
      - V-205916

- name: "MEDIUM | WN19-SO-000270 | PATCH | Windows Server 2019 must prevent NTLM from falling back to a Null session."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0
      value: allownullsessionfallback
      data: 0
      datatype: dword
  when:
      - wn19_so_000270
  tags:
      - WN19-SO-000270
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205917r569188_rule
      - V-205917

- name: "MEDIUM | WN19-SO-000280 | PATCH | Windows Server 2019 Must prevent PKU2U authentication using online identities."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\pku2u
      value: AllowOnlineID
      data: 0
      datatype: dword
  when:
      - wn19_so_000280
  tags:
      - WN19-SO-000280
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205918r569188_rule
      - V-205918

- name: "MEDIUM | WN19-SO-000290 | PATCH | Windows Server 2019 Kerberos encryption types must be configured to prevent the use of DES and RC4 encryption suites."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\Kerberos\Parameters
      value: SupportedEncryptionTypes
      data: 2147483640
      datatype: dword
  when:
      - wn19_so_000290
  tags:
      - WN19-SO-000290
      - CAT2
      - CCI-000803
      - SRG-OS-000120-GPOS-00061
      - SV-205708r569188_rule
      - V-205708

- name: "MEDIUM | WN19-SO-000320 | PATCH | Windows Server 2019 must be configured to at least negotiate signing for LDAP client signing."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Services\LDAP
      value: LDAPClientIntegrity
      data: 1
      datatype: dword
  when:
      - wn19_so_000320
  tags:
      - WN19-SO-000320
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205920r569188_rule
      - V-205920

- name: "MEDIUM | WN19-SO-000330 | PATCH | Windows Server 2019 session security for NTLM SSP-based clients must be configured to require NTLMv2 session security and 128-bit encryption."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0
      value: NTLMMinClientSec
      data: 537395200
      datatype: dword
  when:
      - wn19_so_000330
  tags:
      - WN19-SO-000330
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205921r569188_rule
      - V-205921

- name: "MEDIUM | WN19-SO-000340 | PATCH | Windows Server 2019 session security for NTLM SSP-based servers must be configured to require NTLMv2 session security and 128-bit encryption."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0
      value: NTLMMinServerSec
      data: 537395200
      datatype: dword
  when:
      - wn19_so_000340
  tags:
      - WN19-SO-000340
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205922r569188_rule
      - V-205922

- name: "MEDIUM | WN19-SO-000350 | PATCH | Windows Server 2019 users must be required to enter a password to access private keys stored on the computer."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Policies\Microsoft\Cryptography
      value: ForceKeyProtection
      data: 2
      datatype: dword
  when:
      - wn19_so_000350
  tags:
      - WN19-SO-000350
      - CAT2
      - CCI-000186
      - SRG-OS-000067-GPOS-00035
      - SV-205651r569188_rule
      - V-205651

- name: "MEDIUM | WN19-SO-000360 | PATCH | Windows Server 2019 must be configured to use FIPS-compliant algorithms for encryption, hashing, and signing."
  ansible.windows.win_regedit:
      path: HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\FIPSAlgorithmPolicy
      state: present
      value: Enabled
      data: 1
      datatype: dword
  when:
      - wn19_so_000360
  tags:
      - WN19-SO-000360
      - CAT2
      - CCI-002450
      - SRG-OS-000478-GPOS-00223
      - SV-205842r877466_rule
      - V-205842

- name: "MEDIUM | WN19-SO-000380 | PATCH | Windows Server 2019 User Account Control approval mode for the built-in Administrator must be enabled."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: FilterAdministratorToken
      data: 1
      datatype: dword
  when:
      - wn19_so_000380
  tags:
      - WN19-SO-000380
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00157
      - SV-205811r852513_rule
      - V-205811
      # - exclusions for server core? think its NA there

- name: "MEDIUM | WN19-SO-000390 | PATCH | Windows Server 2019 UIAccess applications must not be allowed to prompt for elevation without using the secure desktop."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableUIADesktopToggle
      data: 0
      datatype: dword
  when:
      - wn19_so_000390
  tags:
      - WN19-SO-000390
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-205716r569188_rule
      - V-205716

- name: "MEDIUM | WN19-SO-000400 | PATCH | Windows Server 2019 User Account Control must, at a minimum, prompt administrators for consent on the secure desktop."
  block:
      - name: "MEDIUM | WN19-SO-000400 | PATCH | Windows Server 2019 User Account Control must, at a minimum, prompt administrators for consent on the secure desktop. | Variable Check."
        ansible.builtin.debug:
            msg:
                - "Warning!! You have have not choosen a correct setting for wn19stig_consentprompt"
                - "Please read the notes for the variable and make the necessary change to the variable to be in compliance."
        when:
            - wn19stig_consentprompt < 1 or
              wn19stig_consentprompt > 2

      - name: "MEDIUM | WN19-SO-000400 | PATCH | Windows Server 2019 User Account Control must, at a minimum, prompt administrators for consent on the secure desktop. | Warn Count."
        ansible.builtin.import_tasks: warning_facts.yml
        vars:
            warn_control_id: 'WN19-SO-000400'
        when:
            - wn19stig_consentprompt < 1 or
              wn19stig_consentprompt > 2

      - name: "MEDIUM | WN19-SO-000400 | PATCH | Windows Server 2019 User Account Control must, at a minimum, prompt administrators for consent on the secure desktop. | Apply Variable."
        ansible.windows.win_regedit:
            path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
            state: present
            value: ConsentPromptBehaviorAdmin
            data: "{{ wn19stig_consentprompt }}"
            datatype: dword
        when:
            - wn19stig_consentprompt == 1 or
              wn19stig_consentprompt == 2
  when:
      - wn19_so_000400
  tags:
      - WN19-SO-000400
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-205717r569188_rule
      - V-205717

- name: "MEDIUM | WN19-SO-000410 | PATCH | Windows Server 2019 User Account Control must automatically deny standard user requests for elevation."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      state: present
      value: ConsentPromptBehaviorUser
      data: 0
      datatype: dword
  when:
      - wn19_so_000410
  tags:
      - WN19-SO-000410
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00157
      - SV-205812r852514_rule
      - V-205812

- name: "MEDIUM | WN19-SO-000420 | PATCH | Windows Server 2019 User Account Control must be configured to detect application installations and prompt for elevation."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableInstallerDetection
      data: 1
      datatype: dword
  when:
      - wn19_so_000420
  tags:
      - WN19-SO-000420
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-205718r569188_rule
      - V-205718

- name: "MEDIUM | WN19-SO-000430 | PATCH | Windows Server 2019 User Account Control (UAC) must only elevate UIAccess applications that are installed in secure locations."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableSecureUIAPaths
      data: 1
      datatype: dword
  when:
      - wn19_so_000430
  tags:
      - WN19-SO-000430
      - CAT2
      - CCI-001084
      - SRG-OS-000134-GPOS-00068
      - SV-205719r569188_rule
      - V-205719

- name: "MEDIUM | WN19-SO-000440 | PATCH | Windows Server 2019 User Account Control must run all administrators in Admin Approval Mode, enabling UAC."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableLUA
      data: 1
      datatype: dword
  when:
      - wn19_so_000440
  tags:
      - WN19-SO-000440
      - CAT2
      - CCI-002038
      - SRG-OS-000373-GPOS-00157
      - SV-205813r852515_rule
      - V-205813

- name: "MEDIUM | WN19-SO-000450 | PATCH | Windows Server 2019 User Account Control (UAC) must virtualize file and registry write failures to per-user locations."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
      value: EnableVirtualization
      data: 1
      datatype: dword
  when:
      - wn19_so_000450
  tags:
      - WN19-SO-000450
      - CAT2
      - V-205720
      - SRG-OS-000134-GPOS-00068
      - SV-205720r569188_rule
      - CCI-001084

- name: "MEDIUM | WN19-UC-000010 | PATCH | Windows Server 2019 must preserve zone information when saving attachments."
  ansible.windows.win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Attachments
      value: SaveZoneInformation
      data: 2
      datatype: dword
  when:
      - wn19_uc_000010
  tags:
      - WN19-UC-000010
      - CAT2
      - CCI-000366
      - SRG-OS-000480-GPOS-00227
      - SV-205924r569188_rule
      - V-205924

# [WARNING]: Using this module to edit rights and privileges is error-prone, use the win_user_right module instead
- name: "MEDIUM | WN19-UR-000010 | PATCH | Windows Server 2019 Access Credential Manager as a trusted caller user right must not be assigned to any groups or accounts."
  community.windows.win_security_policy:
      section: Privilege Rights
      key: SeTrustedCredManAccessPrivilege
      value: ""
  when:
      - wn19_ur_000010
  tags:
      - WN19-UR-000010
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205749r877392_rule
      - V-205749

- name: "MEDIUM | WN19-UR-000030 | PATCH | Windows Server 2019 Allow log on locally user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeInteractiveLogonRight
      users: "{{ wn19stig_seinteractivelogonright }}"
      action: set
  when:
      - wn19_ur_000030
  tags:
      - WN19-UR-000030
      - CAT2
      - CCI-000213
      - SRG-OS-000080-GPOS-00048
      - SV-205676r569188_rule
      - V-205676

- name: "MEDIUM | WN19-UR-000040 | PATCH | Windows Server 2019 Back up files and directories user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeBackupPrivilege
      users: "{{ wn19stig_sebackuprivilege }}"
      action: set
  when:
      - wn19_ur_000040
  tags:
      - WN19-UR-000040
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205751r877392_rule
      - V-205751

- name: "MEDIUM | WN19-UR-000050 | PATCH | Windows Server 2019 Create a pagefile user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeCreatePagefilePrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000050
  tags:
      - WN19-UR-000050
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205752r877392_rule
      - V-205752

- name: "MEDIUM | WN19-UR-000070 | PATCH |  Windows Server 2019 Create global objects user right must only be assigned to Administrators, Service, Local Service, and Network Service."
  ansible.windows.win_user_right:
      name: SeCreateGlobalPrivilege
      users: "{{ wn19stig_secreateglobalprivilege }}"
      action: set
  when:
      - wn19_ur_000070
  tags:
      - WN19-UR-000070
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205754r877392_rule
      - V-205754

- name: "MEDIUM | WN19-UR-000080 | PATCH | Windows Server 2019 Create permanent shared objects user right must not be assigned to any groups or accounts."
  community.windows.win_security_policy:
      section: Privilege Rights
      key: SeCreatePermanentPrivilege
      value: ""
  when:
      - wn19_ur_000080
  tags:
      - WN19-UR-000080
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205755r877392_rule
      - V-205755

- name: "MEDIUM | WN19-UR-000090 | PATCH | Windows Server 2019 Create symbolic links user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeCreateSymbolicLinkPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000090
  tags:
      - WN19-UR-000090
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205756r877392_rule
      - V-205756

- name: "MEDIUM | WN19-UR-000110 | PATCH | Windows Server 2019 Force shutdown from a remote system user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeRemoteShutdownPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000110
  tags:
      - WN19-UR-000110
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205758r877392_rule
      - V-205758

- name: "MEDIUM | WN19-UR-000120 | PATCH | Windows Server 2019 Generate security audits user right must only be assigned to Local Service and Network Service."
  ansible.windows.win_user_right:
      name: SeAuditPrivilege
      users: "{{ wn19stig_seauditprivilege }}"
      action: set
  when:
      - wn19_ur_000120
  tags:
      - WN19-UR-000120
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205759r877392_rule
      - V-205759

- name: "MEDIUM | WN19-UR-000130 | PATCH | Windows Server 2019 Impersonate a client after authentication user right must only be assigned to Administrators, Service, Local Service, and Network Service."
  ansible.windows.win_user_right:
      name: SeImpersonatePrivilege
      users: "{{ wn19stig_seimpersonateprivilege }}"
      action: set
  when:
      - wn19_ur_000130
  tags:
      - WN19-UR-000130
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205760r877392_rule
      - V-205760

- name: "MEDIUM | WN19-UR-000140 | PATCH | Windows Server 2019 Increase scheduling priority: user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeIncreaseBasePriorityPrivilege
      users: "{{ wn19stig_seincreasebasepriorityprivilege }}"
      action: set
  when:
      - wn19_ur_000140
  tags:
      - WN19-UR-000140
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205761r877392_rule
      - V-205761

- name: "MEDIUM | WN19-UR-000150 | PATCH | Windows Server 2019 Load and unload device drivers user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeLoadDriverPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000150
  tags:
      - WN19-UR-000150
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205762r877392_rule
      - V-205762

- name: "MEDIUM | WN19-UR-000160 | PATCH | Windows Server 2019 Lock pages in memory user right must not be assigned to any groups or accounts."
  community.windows.win_security_policy:
      section: Privilege Rights
      key: SeLockMemoryPrivilege
      value: "{{ wn19stig_selockmemorprivilege }}"
  when:
      - wn19_ur_000160
  tags:
      - WN19-UR-000160
      - V-205763
      - SRG-OS-000324-GPOS-00125
      - SV-205763r877392_rule
      - CCI-002235
      - CAT2

- name: "MEDIUM | WN19-UR-000170 | PATCH | Windows Server 2019 Manage auditing and security log user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeSecurityPrivilege
      users: "{{ wn19stig_sesecurityprivilege }}"
      action: set
  when:
      - wn19_ur_000170
  tags:
      - WN19-UR-000170
      - CAT2
      - CCI-000162
      - CCI-000163
      - CCI-000164
      - CCI-000171
      - CCI-001914
      - SRG-OS-000057-GPOS-00027
      - SV-205643r852417_rule
      - V-205643

- name: "MEDIUM | WN19-UR-000180 | PATCH | Windows Server 2019 Modify firmware environment values user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeSystemEnvironmentPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000180
  tags:
      - WN19-UR-000180
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205764r877392_rule
      - V-205764

- name: "MEDIUM | WN19-UR-000190 | PATCH | Windows Server 2019 Perform volume maintenance tasks user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeManageVolumePrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000190
  tags:
      - WN19-UR-000190
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205765r877392_rule
      - V-205765

- name: "MEDIUM | WN19-UR-000200 | PATCH | Windows Server 2019 Profile single process user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeProfileSingleProcessPrivilege
      users: Administrators
      action: set
  when:
      - wn19_ur_000200
  tags:
      - WN19-UR-000200
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205766r877392_rule
      - V-205766

- name: "MEDIUM | WN19-UR-000210 | PATCH | Windows Server 2019 Restore files and directories user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeRestorePrivilege
      users: "{{ wn19stig_serestoreprivilege }}"
      action: set
  when:
      - wn19_ur_000210
  tags:
      - WN19-UR-000210
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205767r877392_rule
      - V-205767

- name: "MEDIUM | WN19-UR-000220 | PATCH | Windows Server 2019 Take ownership of files or other objects user right must only be assigned to the Administrators group."
  ansible.windows.win_user_right:
      name: SeTakeOwnershipPrivilege
      users: "{{ wn19stig_setakeownershipprivilege }}"
      action: set
  when:
      - wn19_ur_000220
  tags:
      - WN19-UR-000220
      - CAT2
      - CCI-002235
      - SRG-OS-000324-GPOS-00125
      - SV-205768r877392_rule
      - V-205768
